{"ast":null,"code":"import { getCountryCallingCode, Metadata } from 'libphonenumber-js/core';\nvar ONLY_DIGITS_REGEXP = /^\\d+$/;\nexport default function getInternationalPhoneNumberPrefix(country, metadata) {\n  // Standard international phone number prefix: \"+\" and \"country calling code\".\n  var prefix = '+' + getCountryCallingCode(country, metadata); // Get \"leading digits\" for a phone number of the country.\n  // If there're \"leading digits\" then they can be part of the prefix too.\n\n  metadata = new Metadata(metadata);\n  metadata.country(country);\n\n  if (metadata.numberingPlan.leadingDigits() && ONLY_DIGITS_REGEXP.test(metadata.numberingPlan.leadingDigits())) {\n    prefix += metadata.numberingPlan.leadingDigits();\n  }\n\n  return prefix;\n}","map":{"version":3,"sources":["../../source/helpers/getInternationalPhoneNumberPrefix.js"],"names":["ONLY_DIGITS_REGEXP","prefix","getCountryCallingCode","metadata"],"mappings":"AAAA,SAAA,qBAAA,EAAA,QAAA,QAAA,wBAAA;AAKA,IAAMA,kBAAkB,GAAxB,OAAA;AACA,eAAe,SAAA,iCAAA,CAAA,OAAA,EAAA,QAAA,EAA8D;AAC5E;AACA,MAAIC,MAAM,GAAG,MAAMC,qBAAqB,CAAA,OAAA,EAFoC,QAEpC,CAAxC,CAF4E,CAG5E;AACA;;AACAC,EAAAA,QAAQ,GAAG,IAAA,QAAA,CAAXA,QAAW,CAAXA;AACAA,EAAAA,QAAQ,CAARA,OAAAA,CAAAA,OAAAA;;AACA,MAAIA,QAAQ,CAARA,aAAAA,CAAAA,aAAAA,MAA0CH,kBAAkB,CAAlBA,IAAAA,CAAwBG,QAAQ,CAARA,aAAAA,CAAtE,aAAsEA,EAAxBH,CAA9C,EAA+G;AAC9GC,IAAAA,MAAM,IAAIE,QAAQ,CAARA,aAAAA,CAAVF,aAAUE,EAAVF;AACA;;AACD,SAAA,MAAA;AACA","sourcesContent":["import {\r\n\tgetCountryCallingCode,\r\n\tMetadata\r\n} from 'libphonenumber-js/core'\r\n\r\nconst ONLY_DIGITS_REGEXP = /^\\d+$/\r\nexport default function getInternationalPhoneNumberPrefix(country, metadata) {\r\n\t// Standard international phone number prefix: \"+\" and \"country calling code\".\r\n\tlet prefix = '+' + getCountryCallingCode(country, metadata)\r\n\t// Get \"leading digits\" for a phone number of the country.\r\n\t// If there're \"leading digits\" then they can be part of the prefix too.\r\n\tmetadata = new Metadata(metadata)\r\n\tmetadata.country(country)\r\n\tif (metadata.numberingPlan.leadingDigits() && ONLY_DIGITS_REGEXP.test(metadata.numberingPlan.leadingDigits())) {\r\n\t\tprefix += metadata.numberingPlan.leadingDigits()\r\n\t}\r\n\treturn prefix\r\n}"]},"metadata":{},"sourceType":"module"}