[{"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\index.js":"1","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\App.js":"2","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Saleimagepage.js":"3","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Sendpage.js":"4","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Newpage.js":"5","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Tokencreate.js":"6","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Nft.js":"7","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Testing.js":"8","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Printallimage.js":"9","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Salepage.js":"10","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Approveaddresspage.js":"11","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Myitem.js":"12","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\utils\\history.js":"13","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\ipfs.js":"14","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\web3.js":"15","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\nftcontract.js":"16","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\abinft.js":"17","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\firebase.js":"18","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Newdeploy.js":"19","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Mycontractdata.js":"20","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Salepagecopy.js":"21","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Printallimagecopy.js":"22","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Followingpage.js":"23","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Activitypage.js":"24","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Howitworkpage.js":"25","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Communitypage.js":"26","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Createpage.js":"27","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Connectwalletpage.js":"28","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Allcontractpage.js":"29","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\data.js":"30","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\datas.js":"31","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Mypurchasepage.js":"32","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Explore.js":"33","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\trans.js":"34","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Createandpurchasepage.js":"35","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Receivedpage.js":"36","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Popup.js":"37","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Component2.js":"38","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Routes.js":"39","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\DisplayData.js":"40","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Login\\Register.js":"41","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Logins.js":"42","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Heros.js":"43","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\History.js":"44","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\AdminRoute.js":"45","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\StartPage.js":"46","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\footer.js":"47","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\DarkMode.js":"48"},{"size":417,"mtime":1619079833098,"results":"49","hashOfConfig":"50"},{"size":15253,"mtime":1620201884952,"results":"51","hashOfConfig":"50"},{"size":6021,"mtime":1618326673982,"results":"52","hashOfConfig":"50"},{"size":29823,"mtime":1617258864266,"results":"53","hashOfConfig":"50"},{"size":28943,"mtime":1617265656493,"results":"54","hashOfConfig":"50"},{"size":30664,"mtime":1617597515918,"results":"55","hashOfConfig":"50"},{"size":119582,"mtime":1620379239011,"results":"56","hashOfConfig":"50"},{"size":2231,"mtime":1617258864266,"results":"57","hashOfConfig":"50"},{"size":6277,"mtime":1617258864263,"results":"58","hashOfConfig":"50"},{"size":7165,"mtime":1618326673982,"results":"59","hashOfConfig":"50"},{"size":29273,"mtime":1617258864258,"results":"60","hashOfConfig":"50"},{"size":5813,"mtime":1618683803218,"results":"61","hashOfConfig":"50"},{"size":92,"mtime":1617258864272,"results":"62","hashOfConfig":"50"},{"size":394,"mtime":1617258864268,"results":"63","hashOfConfig":"50"},{"size":535,"mtime":1617822854250,"results":"64","hashOfConfig":"50"},{"size":16249,"mtime":1617258864269,"results":"65","hashOfConfig":"50"},{"size":16167,"mtime":1617258864267,"results":"66","hashOfConfig":"50"},{"size":652,"mtime":1617686109251,"results":"67","hashOfConfig":"50"},{"size":68976,"mtime":1617596454733,"results":"68","hashOfConfig":"50"},{"size":104080,"mtime":1617625573897,"results":"69","hashOfConfig":"50"},{"size":18685,"mtime":1620379089285,"results":"70","hashOfConfig":"50"},{"size":6283,"mtime":1617644487311,"results":"71","hashOfConfig":"50"},{"size":15965,"mtime":1620378233962,"results":"72","hashOfConfig":"50"},{"size":7812,"mtime":1620378185409,"results":"73","hashOfConfig":"50"},{"size":7598,"mtime":1620139565122,"results":"74","hashOfConfig":"50"},{"size":8112,"mtime":1620378198133,"results":"75","hashOfConfig":"50"},{"size":948,"mtime":1617651098207,"results":"76","hashOfConfig":"50"},{"size":962,"mtime":1617651272736,"results":"77","hashOfConfig":"50"},{"size":33181,"mtime":1618144602561,"results":"78","hashOfConfig":"50"},{"size":16319,"mtime":1618556599152,"results":"79","hashOfConfig":"50"},{"size":16319,"mtime":1618556600515,"results":"80","hashOfConfig":"50"},{"size":17865,"mtime":1618860359938,"results":"81","hashOfConfig":"50"},{"size":28457,"mtime":1620378493930,"results":"82","hashOfConfig":"50"},{"size":249,"mtime":1618395642453,"results":"83","hashOfConfig":"50"},{"size":20141,"mtime":1618858885010,"results":"84","hashOfConfig":"50"},{"size":17911,"mtime":1618858881100,"results":"85","hashOfConfig":"50"},{"size":291,"mtime":1618979485215,"results":"86","hashOfConfig":"50"},{"size":1561,"mtime":1619071620579,"results":"87","hashOfConfig":"50"},{"size":1942,"mtime":1620323048253,"results":"88","hashOfConfig":"50"},{"size":11005,"mtime":1620378213830,"results":"89","hashOfConfig":"50"},{"size":2094,"mtime":1619438707544,"results":"90","hashOfConfig":"50"},{"size":3718,"mtime":1620138853332,"results":"91","hashOfConfig":"50"},{"size":270,"mtime":1619452827236,"results":"92","hashOfConfig":"50"},{"size":1439,"mtime":1619547743103,"results":"93","hashOfConfig":"50"},{"size":922,"mtime":1620119680745,"results":"94","hashOfConfig":"50"},{"size":672,"mtime":1620137668587,"results":"95","hashOfConfig":"50"},{"size":208,"mtime":1620140416876,"results":"96","hashOfConfig":"50"},{"size":1056,"mtime":1620277133541,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"otp2i1",{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"100"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\index.js",[],["223","224"],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\App.js",["225","226","227"],"import React, { useState,useEffect } from \"react\";\r\n\r\n//import { Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//import web3 from './web3';\r\n\r\n//import { ReactComponent as Logo } from './logo.svg';\r\n\r\n// import { Offline, Online } from \"react-detect-offline\";\r\n\r\n// import Popup from './Popup';\r\n\r\nimport firebaseConfig from './firebase';\r\n\r\nimport Login from './Logins';\r\n//import Heros from './Heros';\r\nimport Explore from './Explore';\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import Salepagecopy from \"./Salepagecopy\";\r\n// import Nft from \"./Nft\";\r\n//import {  RecaptchaVerifier } from \"firebase\";\r\n\r\nimport axios from 'axios';\r\nimport Popup from './Popup';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst App=() => {\r\n\r\n  const [isOpenset, setIsOpenset] = useState(false);\r\n\r\n  const [tcode,setTcode] = useState(\"\");\r\n\r\n  const[statusadd,setStatusadd]=useState(\"\");\r\n\r\n  const[detailsadd,setDetailsadd]=useState(\"\");\r\n\r\n  const [isOpenNext, setIsOpenNext] = useState(false);\r\n\r\n  const[phoneNumberLo,setPhoneNumberLo]=useState('');  \r\n  const[passwordPhoneLo,setpasswordPhoneLo]=useState('');  \r\n\r\n  // let g1=localStorage.getItem('myPhoneNumber');\r\n  // let g2=localStorage.getItem('myPhonePass');\r\n\r\n\r\n\r\n  // if(g1!=='' && g2!==''){\r\n\r\n  //   setIsOpenNext(true);\r\n\r\n  // }\r\n\r\n\r\n  const togglePopupset = () => {\r\n    setIsOpenset(false);    \r\n  }\r\n\r\n\r\n\r\n  const[phoneNumber,setPhoneNumber]=useState('');  \r\n  const[passwordPhone,setpasswordPhone]=useState('');  \r\n\r\n  const clearInputs=()=>{\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  }\r\n\r\n  const[user,setUser]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[emailError,setEmailError]=useState('');\r\n  const[passwordError,setPasswordError]=useState('');\r\n  const[hasAccount,setHasAccount]=useState(false);\r\n  const[hasAccountO,setHasAccountO]=useState(false);\r\n\r\n  //const[SignInM,setSignInM]=useState();\r\n\r\n  \r\n  //const apikeyuri='https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/BAL/SMS';\r\n\r\n  const phoneAuthLogin=()=>{\r\n    \r\n\r\n    console.log(\"mbnumber\",phoneNumber);\r\n    console.log(\"mbpassword\",passwordPhone);\r\n\r\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('number').on(\"value\",(data)=>{\r\n      if(data){\r\n       console.log(\"mbc1\",data.val());\r\n       setPhoneNumberLo(data.val());\r\n      }\r\n    });\r\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('password').on(\"value\",(data)=>{\r\n      if(data){\r\n        console.log(\"mbc2\",data.val());\r\n        setpasswordPhoneLo(data.val());\r\n\r\n        localStorage.setItem('myPhoneNumber',phoneNumber); \r\n        localStorage.setItem('myPhonePass',passwordPhone); \r\n        setIsOpenNext(true);\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n    \r\n\r\n    // .then(()=>{setIsOpenNext(true)})\r\n    \r\n\r\n    // if(phoneNumberLo === phoneNumber && passwordPhoneLo === passwordPhone){\r\n    //     console.log(\"loginphone\",\"success\");\r\n    // }\r\n\r\n  }\r\n\r\n  \r\n\r\n  const phoneAuth=()=>{\r\n\r\n    console.log(\"mbnumber\",phoneNumber);\r\n    console.log(\"mbpassword\",passwordPhone);\r\n    const apikeyuri=`https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/${phoneNumber}/AUTOGEN`;\r\n\r\n    axios.request(`${apikeyuri}`)\r\n        .then((response)=>{\r\n          \r\n          setStatusadd(response.data.Status);\r\n          setDetailsadd(response.data.Details);\r\n\r\n          setIsOpenset(true);\r\n\r\n          //console.log(\"resgog\",response.data.Status);\r\n\r\n        //   if(statusadd === 'Success' && detailsadd !== ' ')\r\n        // {\r\n        // }else{          \r\n        // }         \r\n        }).catch(error => console.error(`Error: ${error}`));       \r\n    \r\n  }\r\n\r\n  const setotpCheck=()=>{\r\n\r\n    setIsOpenset(false); \r\n\r\n    \r\n    localStorage.setItem('myPhoneNumber',phoneNumber); \r\n    localStorage.setItem('myPhonePass',passwordPhone); \r\n\r\n    let apiuriotp=`https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/VERIFY/${detailsadd}/${tcode}`\r\n    console.log(\"fir1\",statusadd);\r\n    console.log(\"fir2\",detailsadd);\r\n    console.log(\"fir3\",tcode);\r\n\r\n\r\n    axios.get(`${apiuriotp}`)\r\n        .then((response)=>{\r\n\r\n          setUser(true);\r\n          console.log(\"resgogotp\",response.data.Details);\r\n\r\n          let ref2=firebaseConfig.database().ref(`mobilenumber/${phoneNumber}`);\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheckappjs\",db)\r\n\r\n                        ref2.set({id:db,profileimageUrl:\"\",name:\"\",number:phoneNumber,password:passwordPhone})\r\n\r\n\r\n          setIsOpenNext(true);\r\n\r\n        //   if(statusadd === 'Success' && detailsadd !== ' ')\r\n        // {\r\n\r\n\r\n        //   setIsOpenset(true);\r\n\r\n        // }else{\r\n          \r\n        // }\r\n         \r\n          \r\n        }).catch(error => console.error(`Error: ${error}`));       \r\n\r\n  }\r\n  \r\n\r\n// const auth = firebaseConfig.auth();\r\n// auth.languageCode = 'it';\r\n// const appVerifier = window.recaptchaVerifier;\r\n\r\n// // To apply the default browser preference instead of explicitly setting it.\r\n// // firebase.auth().useDeviceLanguage();\r\n\r\n// window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n//   'size': 'normal',\r\n//   'callback': (response) => {\r\n//     // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n//     // ...\r\n\r\n//     firebaseConfig.auth().signInWithPhoneNumber(auth, phoneNumber, appVerifier)\r\n//     .then((confirmationResult) => {\r\n//       // SMS sent. Prompt user to type the code from the message, then sign the\r\n//       // user in with confirmationResult.confirm(code).\r\n//       window.confirmationResult = confirmationResult;\r\n//       // ...\r\n//     }).catch((error) => {\r\n//       // Error; SMS not sent\r\n//       // ...\r\n//     });\r\n\r\n\r\n\r\n//   },\r\n//   'expired-callback': () => {\r\n//     // Response expired. Ask user to solve reCAPTCHA again.\r\n//     // ...\r\n//   }\r\n// }, auth);\r\n\r\n\r\n// const setuprecaptcha =()=>{\r\n//   window.recaptchaVerifier = new firebaseConfig.auth.RecaptchaVerifier('recaptcha-container', {\r\n//       size: 'invisible',\r\n//       callback: function (response) {\r\n//           console.log(\"recature resolved\")\r\n//           this.onSignInSubmit();\r\n//       }\r\n//   });\r\n\r\n// }\r\n\r\n\r\n//const phoneAuth=(event) =>{\r\n\r\n  \r\n    \r\n  // event.preventDefault();\r\n  // setuprecaptcha();\r\n  // //var phoneNumber = valu;\r\n  // var appVerifier = window.recaptchaVerifier;\r\n  // firebaseConfig.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n  //     .then(function (confirmationResult) {\r\n  //         console.log(\"Success\");\r\n  //         // SMS sent. Prompt user to type the code from the message, then sign the\r\n  //         // user in with confirmationResult.confirm(code).\r\n  //         window.confirmationResult = confirmationResult;\r\n  //         var verificationId = window.prompt(\"Enter otp\")\r\n  //         confirmationResult\r\n  //             .confirm(verificationId)\r\n  //             .then(function (result) {\r\n  //                 // User signed in successfully.\r\n  //                 var user = result.user;\r\n  //                 user.getIdToken().then(idToken => {\r\n  //                     window.localStorage.setItem('idToken', idToken);\r\n\r\n                     \r\n  //                     console.log(idToken);\r\n  //                 });\r\n  //             })\r\n  //             .catch(function (error) {\r\n  //                 // User couldn't sign in (bad verification code?)\r\n  //                 console.error(\"Error while checking the verification code\", error);\r\n  //                 window.alert(\r\n  //                     \"Error while checking the verification code:\\n\\n\" +\r\n  //                     error.code +\r\n  //                     \"\\n\\n\" +\r\n  //                     error.message\r\n  //                 );\r\n  //             });\r\n\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //         console.log(\"sign Up error:\" + error.code);\r\n  //     });\r\n\r\n//}\r\n\r\n\r\n  //const phoneAuth=()=>{\r\n\r\n    // let recaptcha=new firebaseConfig.auth.RecaptchaVerifier('recaptcha');\r\n    // let numberss=phoneNumber;\r\n    // firebaseConfig.auth().signInWithPhoneNumber(numberss,recaptcha).then(function(e){\r\n    //   let code=prompt('enter otp');\r\n    //   if(code === null){\r\n\r\n    //     return;\r\n\r\n    //   }else{\r\n\r\n    //     e.confirm(code).then(function(result){\r\n    //       console.log(\"presult\",result.user);\r\n\r\n    //     })\r\n\r\n    //   }\r\n    // }).catch((error)=>{\r\n    //   console.log(\"perror\",error);\r\n    // })\r\n    \r\n    // console.log(\"resp\",phoneNumber);\r\n\r\n    //     firebaseConfig.auth().signInWithPhoneNumber(phoneNumber)\r\n    // .then((confirmationResult) => {\r\n    //   // SMS sent. Prompt user to type the code from the message, then sign the\r\n    //   // user in with confirmationResult.confirm(code).\r\n    //   window.confirmationResult = confirmationResult;\r\n    //   console.log(\"res1\",confirmationResult);\r\n    //   // ...\r\n    // }).catch((error) => {\r\n    //   // Error; SMS not sent\r\n    //   // ...\r\n    //   console.log(\"res2\",error);\r\n    // });\r\n\r\n  //}\r\n  \r\n  \r\n  \r\n  const handleLogin=()=>{\r\n\r\n    clearErrors();\r\n\r\n\r\n    //alert(\"email\",email)\r\n\r\n    //console.log(\"emails\",email)\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .signInWithEmailAndPassword(email,password)\r\n    .then(()=>{\r\n\r\n      localStorage.setItem('mymailid',email); \r\n      localStorage.setItem('mypassword',password);  \r\n\r\n    })\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/invalid-email\":\r\n        case \"auth/user-disabled\":\r\n        case \"auth/user-not-found\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/wrong-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n\r\n  };\r\n\r\n  const handleSignup=()=>{\r\n\r\n\r\n    clearErrors();\r\n\r\n    // firebaseConfig\r\n    // .auth()\r\n    // .sendSignInLinkToEmail(email)\r\n    // .catch((err) =>{\r\n    //   // eslint-disable-next-line default-case\r\n\r\n    //   alert(err)\r\n      \r\n    // });\r\n\r\n    \r\n    // let recaptcha=new firebaseConfig.auth().RecaptchaVerifier('recaptcha');\r\n    // let number =\"+916383116826\";\r\n    // firebaseConfig.auth().signInWithPhoneNumber(number,recaptcha)\r\n    // .then(function(e){\r\n    //   let code=prompt('enter the otp','')\r\n\r\n    //   if(code === null){\r\n    //     alert(\"nulll\")\r\n    //   }\r\n    //   else{\r\n    //     e.confirm(code).then(function(result){\r\n    //       alert('user',result.user)\r\n    //     })\r\n    //   }\r\n\r\n    // }).catch((error)=>{\r\n    //   console.log(error)\r\n\r\n    // })\r\n\r\n  //   const actionCodeSettings = {\r\n  //     // URL you want to redirect back to. The domain (www.example.com) for this\r\n  //     // URL must be in the authorized domains list in the Firebase Console.\r\n  //     url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n  //     // This must be true.\r\n  //     handleCodeInApp: true,\r\n  //     iOS: {\r\n  //       bundleId: 'com.example.ios'\r\n  //     },\r\n  //     android: {\r\n  //       packageName: 'com.example.android',\r\n  //       installApp: true,\r\n  //       minimumVersion: '12'\r\n  //     },\r\n  //     //example.page.link\r\n  //     dynamicLinkDomain: 'demonft-2e778.firebaseapp.com'\r\n      \r\n  //   };\r\n\r\n  // firebaseConfig\r\n  // .auth()\r\n  // .sendSignInLinkToEmail(email,actionCodeSettings)\r\n  // .then(result => {\r\n\r\n  //   alert(\"result\",result)\r\n  //   // The link was successfully sent. Inform the user.\r\n  //   // Save the email locally so you don't need to ask the user for it again\r\n  //   // if they open the link on the same device.\r\n  //   window.localStorage.setItem('emailForSignIn', email);\r\n    \r\n  // })\r\n  // .catch((error) => {\r\n  //   var errorCode = error.code;\r\n    \r\n  //   var errorMessage = error.message;\r\n\r\n  //   alert(\"error alert-1  \"+errorCode)\r\n  //   alert(\"error alert-2  \"+errorMessage)\r\n    \r\n  // });\r\n\r\n  let ref2=firebaseConfig.database().ref(`emailsignup/`);\r\n\r\n  const db = ref2.push().key;\r\n\r\n  console.log(\"dbcheckappjs\",db)\r\n\r\n  firebaseConfig\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email,password)\r\n    .then(()=>\r\n     {\r\n      localStorage.setItem('mymailid',email); \r\n      localStorage.setItem('mypassword',password);  \r\n      ref2.child(db).set({id:db,profileimageUrl:\"\",name:\"\",emailid:email,password:password});\r\n    })\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/email-already-in-use\":\r\n        case \"auth/invalid-email\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/weak-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    })\r\n    \r\n\r\n  };\r\n\r\n\r\n  const handleLogout=()=>{\r\nfirebaseConfig.auth().signOut();\r\nlocalStorage.setItem('mymailid',''); \r\nlocalStorage.setItem('mypassword','');  \r\n\r\n  }\r\n\r\n  const authListener =()=>{\r\n\r\n    firebaseConfig.auth().onAuthStateChanged(user=>{\r\n\r\n      if(user){\r\n        clearInputs();\r\n        setUser(user);\r\n      }\r\n      else{\r\n        setUser('');\r\n      }\r\n\r\n    })\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    authListener()\r\n  },[]);\r\n\r\n\r\n  return(\r\n\r\n\r\n\r\n    <div>\r\n\r\n<div>\r\n{/* <button type=\"button\" onClick={setSignInM(true)} style={{width:'210px'}}>sign-in with Email</button>\r\n<br></br>\r\n<br></br>\r\n<button type=\"button\" onClick={setSignInM(false)} style={{width:'210px'}}>sign-in with Mobile-Number</button> */}\r\n\r\n\r\n</div>\r\n\r\n\r\n<div>\r\n\r\n      {user ? (\r\n<Explore handleLogout={handleLogout} />\r\n      ):(\r\n\r\n        <Login \r\nemail={email}\r\nsetEmail={setEmail}\r\npassword={password} \r\nsetPassword={setPassword} \r\nhandleLogin={handleLogin}\r\nhandleSignup={handleSignup}\r\nhasAccount={hasAccount}\r\nsetHasAccount={setHasAccount}\r\nemailError={emailError}\r\npasswordError={passwordError}\r\nphonenumber={phoneNumber}\r\nphoneAuth={phoneAuth}\r\nsetPhoneNumber={setPhoneNumber}\r\nsetpasswordPhone={setpasswordPhone}\r\npasswordPhone={passwordPhone}\r\nphoneAuthLogin={phoneAuthLogin}\r\nhasAccountO={hasAccountO}\r\nsetHasAccountO={setHasAccountO}\r\n// SignInM={SignInM}\r\n\r\n//phoneAuth={phoneAuth}\r\n/>\r\n      )}\r\n</div>\r\n\r\n\r\n\r\n{isOpenset && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Enter otp </p>\r\n        <center>\r\n      <input\r\n        type=\"number\"\r\n        value={tcode}\r\n        placeholder=\"Enter otp\"\r\n        onChange={e => {\r\n          setTcode(e.target.value);\r\n        }}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n\r\n        <button type=\"button\" onClick={()=>{setotpCheck()}}>submit</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopupset}\r\n    />}\r\n\r\n\r\n\r\n{isOpenNext && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Login successfully </p>\r\n        <center>\r\n      \r\n        <Link\r\n              to=\"/explore\">\r\n\r\n        <button type=\"button\">Done</button>\r\n\r\n        </Link>\r\n        </center>\r\n      </>}\r\n      //  handleClose={togglePopupset}\r\n    />}\r\n\r\n      </div>\r\n\r\n  );  \r\n\r\n  \r\n};\r\n\r\nexport default App;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Saleimagepage.js",["228","229","230","231"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport getaaa from \"./abinft\";\r\nimport Myitem from \"./Myitem\";\r\n\r\n\r\nfunction Saleimagepage() {\r\n \r\n\r\n  \r\n  useEffect(()=>{onSubmitNFT()},[])\r\n      const onSubmitNFT = async () => {\r\n      console.log(\"waiting for pic url\");\r\n     // event.preventDefault();    \r\n        var names =[];\r\n        var ima =[];\r\n        var p =[];\r\n    console.log(\"geta\"+getaaa);\r\n   \r\n    //event.preventDefault();\r\n    \r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    console.log(accounts[0])\r\n    \r\n    var items = await getaaa.methods.totalSupply().call();\r\n      console.log(items)\r\n      for(var i=0;i<items;i++){\r\n        var v = await getaaa.methods.tokenByIndex(i).call();\r\n        console.log(\"id\" + v)\r\n        var s = await getaaa.methods.items(v).call();\r\n        var state = s.state;\r\n        if(state == 1){\r\n          names.push(v)\r\n          console.log(\"For Sale\" + v)\r\n          p.push(s.price)\r\n        }\r\n        \r\n      }\r\n   \r\n    for( i=0;i<names.length;i++){\r\n      \r\n\r\n      ima.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      console.log(names[i])\r\n      var a=document.createElement(\"img\");\r\n      var  b=document.createElement(\"button\")\r\n      var t = document.createElement(\"textbox\")\r\n\r\n      var  c=document.createElement(\"li\")\r\n\r\n      //var  d=document.createElement(\"li\")\r\n\r\n      var  ebr=document.createElement(\"br\")\r\n\r\n      b.innerHTML= \"    \" + \" Buy Token\";\r\n    \r\n\r\n      a.src=ima[i]\r\n      a.id=ima[i]\r\n      a.tid = names[i]\r\n      a.width=400\r\n      a.height=400\r\n      t.innerText= \"Price\" + \"     \" +p[i]\r\n      \r\n      b.src=ima[i]\r\n      b.id=ima[i]\r\n      b.tid = names[i]\r\n      c.style.listStyleType=\"none\"\r\n      c.append(a)\r\n      c.append(t)\r\n      c.append(ebr)\r\n      c.append(b)\r\n      console.log(\"wait for displaying images\")\r\n  document.getElementById(\"prag\").append(c)\r\n\r\n  document.getElementById(\"prag\").append(ebr)\r\n\r\n\r\n//    document.getElementById(\"prag\").append(d)\r\n\r\n      document.getElementById(\"ram\").append(c)\r\n      b.onclick = async(event) =>{\r\n        var thing = event.target.tid;\r\n        var s = await getaaa.methods.items(thing).call();\r\n        var state = s.price;\r\n        alert(state)\r\n        await getaaa.methods.buyThing(thing).send({from:accounts[0], value: web3.utils.toWei(state, 'ether')});\r\n       console.log(\"Token Purchased Id\" + thing)\r\n       \r\n        \r\n      }\r\n\r\n    }\r\n\r\n\r\n   \r\n    \r\n   \r\n}\r\n\r\n\r\n  \r\n\r\n  return (    \r\n\r\n    <div className=\"App\">\r\n\r\n\r\n<h1>Sales images</h1>\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Myitem\");\r\n                }}\r\n              >\r\n               Myitem\r\n              </button>\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/nft\");\r\n                }}>\r\n                Go Deploy Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Go Transfer page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/tokencreate\");\r\n                }}>\r\n                Tokencreate Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepage\");\r\n                }}>\r\n                sale Page \r\n              </button>\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n</form>\r\n      \r\n<center>\r\n<br></br>\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Saleimagepage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Sendpage.js",["232","233"],"import React from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\nimport {useState} from 'react';\r\nimport web3 from './web3';\r\n//import lottery from './nftcontract';//this line import lottery folder\r\n//import ipfs from './ipfs';\r\n//import storehash from './storehash';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n//import First from \"./First\";\r\n//import Second from \"./Second\";\r\nimport Nft from \"./Nft\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Newpage from \"./Newpage\";\r\nimport Myitem from \"./Myitem\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Salepage from \"./Salepage\";\r\n\r\nfunction Sendpage() {\r\n\r\n  //const [toaddress,setToaddress] = useState(\"\");\r\n  const [tid,setId] = useState(\"\");\r\n  const [tids,setIds] = useState(\"\");\r\n  //const [turi,setUri] = useState(\"\");\r\n  //const [tname,setName] = useState(\"\");\r\n  //const [tsymbol,setSymbol] = useState(\"\");\r\n  //const [tokenuri,setTokenUri] = useState(\"\");\r\n  //var [getimageurl,setgetImage] = useState(\"\");\r\n  //const [tfile,setTfile] = useState(\"\");\r\n  //const [ipfsHash,setIpfsHash] = useState(null);\r\n  //var [buffer,setBuffer] = useState(\"\");\r\n  //const [ethAddress,setEthAddress] = useState(\"\");\r\n  //const [blockNumber,setBlocknumber] = useState(\"\");\r\n  //const [transactionHash,setTransaction] = useState(\"\");\r\n  //const [gasUsed,setGasUsed] = useState(\"\");\r\n  //const [txReceipt,se] = useState(\"\");\r\n\r\n  //const [dataset,setdatas] = useState(\"\");\r\n\r\n  //const [address,setaddress] = useState(\"\");\r\n  //const [geta,setgeta] = useState(\"\");\r\n\r\n  //var [printgeta,setgetaprint] =useState(\"\");\r\n    \r\n      //new write below\r\n\r\n\r\n      const onSubmitNFT = async (event) => {\r\n    \r\n    \r\n      alert(\"waiting for pic url\");\r\n    \r\n      //var ta=tname;\r\n      //var tb=tsymbol;\r\n      //var tc='https://ipfs.io/ipfs/'+ipfsHash;\r\n      //var td=toaddress;\r\n      var te=tid;\r\n      //var tf='https://ipfs.io/ipfs/'+ipfsHash;\r\n      \r\n      \r\n    \r\n      //alert(\"im work ta tb tc  td te tf  \"+ta+\" \"+tb+\" \"+tc+\" \"+td+\" \"+te+\" \"+tf);\r\n    \r\n      event.preventDefault();\r\n    \r\n      const accounts = await  web3.eth.getAccounts();\r\n    \r\n    \r\n        \r\n    alert(\"completed\");    \r\n    \r\n    \r\n    alert(localStorage.getItem('myData'));\r\n\r\n\r\n    //var poda=localStorage.getItem('myData');\r\n\r\n\r\n    var poda ='0x84a394eC66fac3B2967d48ACCB102852F9ef3Ec1';\r\n\r\n    //below con add\r\n\r\n    //setaddress(localStorage.getItem('myData'));\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n\r\n\r\n    alert(\"after abi\"+poda);\r\n    var getaaa=new web3.eth.Contract(abi,poda);\r\n    \r\n    \r\n\r\n\r\n    alert(\"geta\"+getaaa);\r\n    \r\n    //alert(\"im work a +b\"+tid+\" \"+tids+\" \"+tf);\r\n    \r\n    //event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n\r\n\r\n    //var printgeta=await getaaa.methods.safeTransferFrom(accounts[0],tid,tids).call();\r\n\r\n    \r\n    alert(\"check my address\"+accounts[0]);\r\n    \r\n    await getaaa.methods.safeTransferFrom(accounts[0],tids,tid).send({\r\n    from: accounts[0],\r\n        gas: 4796559,\r\n        gasPrice: '20000000000'\r\n      });\r\n    \r\n    \r\n    //await getaaa.methods.safeTransferFrom('0xD264b074c4a772E56536005Ae629518ee1bCc83a','5656','0xEBB8509A162bAf75A48A3e4d33e8dda28D148284').send({\r\n    //from: accounts[0]\r\n    //value: this.setState({c:accounts[0]})\r\n    \r\n    //});\r\n\r\n    //alert(\"prin\"+prin);\r\n\r\n    //var printgeta=await getaaa.methods.tokenURI(te).call();\r\n\r\n\r\n    //setgetaprint(await getaaa.methods.tokenURI(te).call());\r\n\r\n\r\n    //localStorage.setItem('prints',printgeta);\r\n\r\n\r\n    //alert(\"printgeta\"+printgeta);\r\n\r\n    //alert(\"data print\"+printgeta);\r\n  \r\n\r\n    \r\n    \r\n    alert(\" and \"+tid +\" and \"+te+\"and   data   \");\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n  };\r\n    \r\n\r\n  \r\n\r\n\r\n  //</div><td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> \t\t\t\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n<center>\r\n<br></br>\r\n<h1>Transfer NFT-Owner </h1>\r\n\r\n\t\t<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n<label>enter token id    </label>\r\n\r\n<input\r\nid=\"idid\"\r\n  type='text'\r\n  name=\"tid\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<label>enter transfer address</label>\r\n<input\r\nid=\"idids\"\r\n  type='text'\r\n  name=\"tids\"\r\n  required\r\n  onChange={event => setIds( event.target.value)}\r\n  \r\n/>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button \r\n             type=\"submit\"> \r\n             Transfer NFT Owner\r\n             </button>\r\n             <button \r\n             type=\"submit\"> \r\n            Approve\r\n             </button>\r\n</form>\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Myitem\");\r\n                }}\r\n              >\r\n               Myitem\r\n              </button>\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepage\");\r\n                }}\r\n              >\r\n             Sale Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Saleimagepage\");\r\n                }}\r\n              >\r\n              Images for Sale\r\n              </button>\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n              \r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n                    \r\n                    \r\n\r\n<Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n           \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n           \r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/Printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n            <Route path=\"/Saleimagepage\">\r\n              <Saleimagepage />\r\n            </Route>\r\n            <Route path=\"/Salepage\">\r\n              <Salepage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Sendpage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Newpage.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Tokencreate.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Nft.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"import './App.css';\r\n//import {useState} from 'react';\r\nimport React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\nimport lottery from './nftcontract';//this line import lottery folder\r\nimport ipfs from './ipfs';\r\n//import storehash from './storehash';\r\nimport { Router, Route, Switch,Link } from \"react-router-dom\";\r\n//import history from \"./utils/history\";\r\n//import First from \"./First\";\r\n//import Second from \"./Second\";\r\n// import NewPage from './Newpage';\r\n// import Tokencreate from './Tokencreate';\r\n// import PrintallImage from './Printallimage';\r\n// import Sendpage from './Sendpage';\r\n// import firebase from \"./firebase\";\r\nimport fireDb from './firebase';\r\nimport Compress from \"react-image-file-resizer\";\r\n\r\n// import Mypurchasepage from './Mypurchasepage'\r\n// import Explore from './Explore';\r\n// import {Modal} from 'react-bootstrap';\r\n// import {Button} from 'react-bootstrap'\r\n// import Receivedpage from './Receivedpage';\r\nimport Popup from './Popup';\r\n\r\n\r\nfunction Nft() {\r\n\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [symbolget,setsymbolget] = useState()\r\n\r\n  const [currentSymbol, setCurrentSymbol] = useState('ETH')\r\n  \r\n  const changeFruit = (newFruit) => {\r\n    setCurrentSymbol(newFruit)\r\n  }\r\n  \r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n \r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n\r\n    window.location.reload(false)\r\n    \r\n  }\r\n\r\n  // const togglePopups = () => {\r\n  //   setIsOpen(true);\r\n  // }\r\n\r\n\r\n  \r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n        btn.innerHTML = accounts[0];\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n  //firebase \r\n\r\n  var studentlist = [];\r\n\r\n  var stuset=[];\r\n\r\n\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n\r\n  const [toaddress,setToaddress] = useState(\"\");\r\n  const [tid,setId] = useState(\"\");\r\n  //const [turi,setUri] = useState(\"\");\r\n  const [tname,setName] = useState(\"\");\r\n  const [tsymbol,settSymbol] = useState(\"\");\r\n  //const [tokenuri,setTokenUri] = useState(\"\");\r\n  //var [getimageurl,setgetImage] = useState(\"\");\r\n  //const [tfile,setTfile] = useState(\"\");\r\n  const [ipfsHash,setIpfsHash] = useState(null);\r\n  var [buffer,setBuffer] = useState(\"\");\r\n  //const [ethAddress,setEthAddress] = useState(\"\");\r\n  //const [blockNumber,setBlocknumber] = useState(\"\");\r\n  //const [transactionHash,setTransaction] = useState(\"\");\r\n  //const [gasUsed,setGasUsed] = useState(\"\");\r\n  //const [txReceipt,se] = useState(\"\");\r\n\r\n  let tf;\r\n\r\n  let [Img,setImg] = useState(\"\");\r\n\r\n  let address=\"\";\r\n\r\n  //start\r\n\r\n\r\n  const captureFile =(event) => {\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    let reader = new window.FileReader()\r\n\r\n    Compress.imageFileResizer(file, 300, 300, 'JPEG', 10, 0,\r\n    uri => {\r\n      console.log(\"iuri\",uri)\r\nsetImg(uri)\r\n    },\r\n    'base64'\r\n    );\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => convertToBuffer(reader);    \r\n  };\r\nconst convertToBuffer = async(reader) => {\r\n  //file is converted to a buffer for upload to IPFS\r\n    const buffer = await Buffer.from(reader.result);\r\n  //set this buffer -using es6 syntax\r\n    setBuffer(buffer);\r\n};\r\nconst onSubmitImage = async (event) => {\r\n  event.preventDefault();\r\n //bring in user's metamask account address\r\n  const accounts = await web3.eth.getAccounts();\r\n \r\n  console.log('Sending from Metamask account: ' + accounts[0]);\r\n\r\n  await ipfs.add(buffer, (err, ipfsHash) => {\r\n    console.log(err,ipfsHash);\r\n\r\n    console.log(\"buff\",buffer);\r\n\r\n  \r\n    setIpfsHash(ipfsHash[0].hash);\r\n  }) \r\n}; \r\n//end\r\n\r\n  \r\n\r\n   const onSubmitNFT = async (event) => {\r\n\r\n    setLoading(true);\r\n  \r\n    event.preventDefault();\r\n    \r\n      //new write below\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n      //alert(\"waiting for pic url\"); \r\n    \r\n      var ta=tname;\r\n      //var tb=tsymbol;\r\n      var tb=currentSymbol;\r\n      var tc='https://ipfs.io/ipfs/'+ipfsHash;\r\n      var td=toaddress;\r\n      var te=tid;\r\n      tf='https://ipfs.io/ipfs/'+ipfsHash;\r\n\r\n\r\n      if(Img === '')\r\n      {\r\n\r\n        alert(\"Please upload images...\")\r\n\r\n      }\r\n      else{\r\n\r\n\r\n        var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //alert(\"getdata from SYMBOL  \"+tb);\r\n    \r\n\r\n    if(tb===\"BNB\")\r\n    {\r\n\r\n      await lottery.deploy({\r\n    \r\n        data:'',\r\n        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      gas: 6241620,//9088550,\r\n      //gasPrice:'10' //'1000000000'\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    })\r\n     \r\n    address =  localStorage.getItem('myData');\r\n\r\n    //firebase get  value\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    \r\n    }else if(tb===\"ETH\"){\r\n\r\n\r\n      await lottery.deploy({\r\n    \r\n        data:'60806040523480156200001157600080fd5b506040516200474c3803806200474c833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50509291906020018051640100000000811115620000e857600080fd5b82016020810184811115620000fc57600080fd5b81516401000000008111828201871017156200011757600080fd5b505060208083015160409093015191945091925090859085908290829062000165907f01ffc9a70000000000000000000000000000000000000000000000000000000090620002c1811b901c565b6200017d6380ac58cd60e01b620002c160201b60201c565b6200019563780e9d6360e01b620002c160201b60201c565b8151620001aa90600990602085019062000679565b508051620001c090600a90602084019062000679565b50620001d9635b5e139f60e01b620002c160201b60201c565b50505050620001fd620001f16200039060201b60201c565b6200039560201b60201c565b6200020d6200039060201b60201c565b600f80546001600160a01b0319166001600160a01b0392831617908190556040519116906000906000805160206200470a833981519152908290a3601580546001600160a01b038084166001600160a01b031992831617909255601680549285169290911691909117905582516200028d90601490602086019062000679565b506000601355620002a581620003e7602090811b901c565b620002b6816200039560201b60201c565b50505050506200071b565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200035357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b620003b081600e6200047760201b620034a41790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620003f76200051b60201b60201c565b6200046357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62000474816200054a60201b60201c565b50565b620004898282620005f660201b60201c565b15620004f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600f546000906001600160a01b03166200053b62000390602090811b901c565b6001600160a01b031614905090565b6001600160a01b038116620005ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620046e46026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216906000805160206200470a83398151915290600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03821662000659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200472a6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006bc57805160ff1916838001178555620006ec565b82800160010185558215620006ec579182015b82811115620006ec578251825591602001919060010190620006cf565b50620006fa929150620006fe565b5090565b6200039291905b80821115620006fa576000815560010162000705565b613fb9806200072b6000396000f3fe6080604052600436106102725760003560e01c80638f32d59b1161014f578063b5a99345116100c1578063d6dd3cc31161007a578063d6dd3cc314610d70578063dc8e92ea14610d9a578063e564da6914610e48578063e985e9c514610ef8578063f2fde38b14610f33578063fc885bf714610f6657610272565b8063b5a9934514610ad6578063b88d4fde14610aeb578063bfb231d214610bbc578063c87b56dd14610c81578063d4477b3c14610cab578063d50f15cf14610d5b57610272565b80639abc8320116101135780639abc8320146109f0578063a22cb46514610a05578063aa271e1a14610a40578063adecec2d14610a73578063af640d0f14610aac578063b4a99a4e14610ac157610272565b80638f32d59b146108b157806395d89b41146108c6578063983b2d56146108db57806398588a2b1461090e57806398650275146109db57610272565b8063446c33db116101e85780636352211e116101ac5780636352211e1461078a57806370a08231146107b4578063715018a6146107e757806380482491146107fc5780638462151c146108195780638da5cb5b1461089c57610272565b8063446c33db1461064457806345cefcec146106705780634f6ccce71461068557806350655d8c146106af57806350bb4e7f146106c457610272565b80631239ec8c1161023a5780631239ec8c146103f457806318160ddd1461053457806323b872dd1461055b5780632f745c591461059e57806342842e0e146105d757806342966c681461061a57610272565b806301ffc9a71461027757806306fdde03146102bf578063081812fc14610349578063095ea7b31461038f5780630bb78ec1146103ca575b600080fd5b34801561028357600080fd5b506102ab6004803603602081101561029a57600080fd5b50356001600160e01b031916610f90565b604080519115158252519081900360200190f35b3480156102cb57600080fd5b506102d4610faf565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561030e5781810151838201526020016102f6565b50505050905090810190601f16801561033b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561035557600080fd5b506103736004803603602081101561036c57600080fd5b5035611046565b604080516001600160a01b039092168252519081900360200190f35b34801561039b57600080fd5b506103c8600480360360408110156103b257600080fd5b506001600160a01b0381351690602001356110ab565b005b3480156103d657600080fd5b506102d4600480360360208110156103ed57600080fd5b50356111d9565b34801561040057600080fd5b506103c86004803603606081101561041757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561044157600080fd5b82018360208201111561045357600080fd5b803590602001918460208302840111600160201b8311171561047457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156104c357600080fd5b8201836020820111156104d557600080fd5b803590602001918460208302840111600160201b831117156104f657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611274945050505050565b34801561054057600080fd5b50610549611474565b60408051918252519081900360200190f35b34801561056757600080fd5b506103c86004803603606081101561057e57600080fd5b506001600160a01b0381358116916020810135909116906040013561147a565b3480156105aa57600080fd5b50610549600480360360408110156105c157600080fd5b506001600160a01b03813516906020013561148a565b3480156105e357600080fd5b506103c8600480360360608110156105fa57600080fd5b506001600160a01b0381358116916020810135909116906040013561150d565b34801561062657600080fd5b506103c86004803603602081101561063d57600080fd5b5035611528565b6103c86004803603604081101561065a57600080fd5b506001600160a01b038135169060200135611583565b34801561067c57600080fd5b506103c86116ad565b34801561069157600080fd5b50610549600480360360208110156106a857600080fd5b5035611740565b3480156106bb57600080fd5b506103736117a9565b3480156106d057600080fd5b506102ab600480360360608110156106e757600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561071657600080fd5b82018360208201111561072857600080fd5b803590602001918460018302840111600160201b8311171561074957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117b8945050505050565b34801561079657600080fd5b50610373600480360360208110156107ad57600080fd5b50356117d8565b3480156107c057600080fd5b50610549600480360360208110156107d757600080fd5b50356001600160a01b031661182f565b3480156107f357600080fd5b506103c861189a565b6102ab6004803603602081101561081257600080fd5b5035611940565b34801561082557600080fd5b5061084c6004803603602081101561083c57600080fd5b50356001600160a01b0316611b96565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610888578181015183820152602001610870565b505050509050019250505060405180910390f35b3480156108a857600080fd5b50610373611bf7565b3480156108bd57600080fd5b506102ab611c06565b3480156108d257600080fd5b506102d4611c2c565b3480156108e757600080fd5b506103c8600480360360208110156108fe57600080fd5b50356001600160a01b0316611c8d565b34801561091a57600080fd5b506103c8600480360360a081101561093157600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561096057600080fd5b82018360208201111561097257600080fd5b803590602001918460018302840111600160201b8311171561099357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001351515611ce4565b3480156109e757600080fd5b506103c8611ed4565b3480156109fc57600080fd5b506102d4611ee6565b348015610a1157600080fd5b506103c860048036036040811015610a2857600080fd5b506001600160a01b0381351690602001351515611f41565b348015610a4c57600080fd5b506102ab60048036036020811015610a6357600080fd5b50356001600160a01b0316612049565b348015610a7f57600080fd5b506102d460048036036040811015610a9657600080fd5b506001600160a01b03813516906020013561205c565b348015610ab857600080fd5b506105496120dd565b348015610acd57600080fd5b506103736120e3565b348015610ae257600080fd5b506102d46120f2565b348015610af757600080fd5b506103c860048036036080811015610b0e57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115610b4857600080fd5b820183602082011115610b5a57600080fd5b803590602001918460018302840111600160201b83111715610b7b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506121ad945050505050565b348015610bc857600080fd5b50610be660048036036020811015610bdf57600080fd5b503561220e565b6040518085815260200184815260200180602001836003811115610c0657fe5b60ff168152602001828103825284818151815260200191508051906020019080838360005b83811015610c43578181015183820152602001610c2b565b50505050905090810190601f168015610c705780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610c8d57600080fd5b506102d460048036036020811015610ca457600080fd5b50356122c0565b348015610cb757600080fd5b506103c860048036036040811015610cce57600080fd5b810190602081018135600160201b811115610ce857600080fd5b820183602082011115610cfa57600080fd5b803590602001918460208302840111600160201b83111715610d1b57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505050351515905061240e565b348015610d6757600080fd5b5061084c612632565b348015610d7c57600080fd5b5061054960048036036020811015610d9357600080fd5b5035612743565b348015610da657600080fd5b506103c860048036036020811015610dbd57600080fd5b810190602081018135600160201b811115610dd757600080fd5b820183602082011115610de957600080fd5b803590602001918460208302840111600160201b83111715610e0a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612761945050505050565b348015610e5457600080fd5b506103c860048036036040811015610e6b57600080fd5b810190602081018135600160201b811115610e8557600080fd5b820183602082011115610e9757600080fd5b803590602001918460208302840111600160201b83111715610eb857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250612902915050565b348015610f0457600080fd5b506102ab60048036036040811015610f1b57600080fd5b506001600160a01b0381358116916020013516612992565b348015610f3f57600080fd5b506103c860048036036020811015610f5657600080fd5b50356001600160a01b03166129c0565b348015610f7257600080fd5b506102ab60048036036020811015610f8957600080fd5b5035612a25565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561103b5780601f106110105761010080835404028352916020019161103b565b820191906000526020600020905b81548152906001019060200180831161101e57829003601f168201915b505050505090505b90565b600061105182612a3a565b61108f57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613df8602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006110b6826117d8565b9050806001600160a01b0316836001600160a01b0316141561110c57604051600160e51b62461bcd028152600401808060200182810382526021815260200180613ebb6021913960400191505060405180910390fd5b806001600160a01b031661111e612a57565b6001600160a01b0316148061113f575061113f8161113a612a57565b612992565b61117d57604051600160e51b62461bcd028152600401808060200182810382526038815260200180613cfb6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600d6020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561126c5780601f106112415761010080835404028352916020019161126c565b820191906000526020600020905b81548152906001019060200180831161124f57829003601f168201915b505050505081565b60005b8151811015611304576112b18484838151811061129057fe5b60200260200101518484815181106112a457fe5b602002602001015161147a565b6003601260008484815181106112c357fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff021916908360038111156112f757fe5b0217905550600101611277565b507fe0bdff057bc74b2545c13ac89393038d336f254b2245c876efa9669ddcc09b97601260008360008151811061133757fe5b602002602001015181526020019081526020016000206002018383604051808060200180602001806020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113e35780601f106113b8576101008083540402835291602001916113e3565b820191906000526020600020905b8154815290600101906020018083116113c657829003601f168201915b50508481038352865181528651602091820191808901910280838360005b83811015611419578181015183820152602001611401565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015611458578181015183820152602001611440565b50505050905001965050505050505060405180910390a1505050565b60075490565b611485838383612a5b565b505050565b60006114958361182f565b82106114d557604051600160e51b62461bcd02815260040180806020018281038252602b815260200180613c28602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106114f957fe5b906000526020600020015490505b92915050565b611485838383604051806020016040528060008152506121ad565b611539611533612a57565b82612a7a565b61157757604051600160e51b62461bcd028152600401808060200182810382526030815260200180613f5e6030913960400191505060405180910390fd5b61158081612b21565b50565b61158e611533612a57565b6115cc57604051600160e51b62461bcd028152600401808060200182810382526031815260200180613edc6031913960400191505060405180910390fd5b3361160b57604051600160e51b62461bcd028152600401808060200182810382526024815260200180613cab6024913960400191505060405180910390fd5b6000818152600160205260409020546001600160a01b031661162c82612b33565b6001600160a01b038116600090815260036020526040902061164d90612b6e565b33600090815260036020526040902061166590612b85565b60008281526001602052604080822080546001600160a01b03191633908117909155905184926001600160a01b03851691600080516020613e9b8339815191529190a4505050565b6116b5611c06565b6117095760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040517ff58fef8e187ef8dfd7bef096c1ef3e4f3c54f98d95b8ad5659349b07e61204df90600090a16015546001600160a01b0316ff5b600061174a611474565b821061178a57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613f0d602c913960400191505060405180910390fd5b6007828154811061179757fe5b90600052602060002001549050919050565b6015546001600160a01b031681565b60006117c48484612b8e565b6117ce8383612baf565b5060019392505050565b6000818152600160205260408120546001600160a01b03168061150757604051600160e51b62461bcd028152600401808060200182810382526029815260200180613d5d6029913960400191505060405180910390fd5b60006001600160a01b03821661187957604051600160e51b62461bcd02815260040180806020018281038252602a815260200180613d33602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061150790612c49565b6118a2611c06565b6118f65760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600f546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600f80546001600160a01b0319169055565b60008181526012602052604081206001015434101561199a5760408051600160e51b62461bcd02815260206004820152600b6024820152600160a81b6a507269636520697373756502604482015290519081900360640190fd5b600082815260126020526040902060039081015460ff16908111156119bb57fe5b6001146119ff5760408051600160e51b62461bcd0281526020600482015260076024820152600160c81b664e6f2053616c6502604482015290519081900360640190fd5b60008281526012602052611a1234612c4d565b90506000611a203483612c68565b6015546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015611a5b573d6000803e3d6000fd5b506016546040516001600160a01b039091169083156108fc029084906000818181858888f19350505050158015611a96573d6000803e3d6000fd5b505050601554611ab0906001600160a01b03163384612a5b565b60008281526012602090815260409182902060038101805460ff19166002908117909155835186815234948101859052606093810184815292820180546001811615610100026000190116929092049381018490527f46e70e87b058d8f3cde334fc179a61ac8acadcc4fdc26735e4195106b3c88eb394879492939092608083019085908015611b815780601f10611b5657610100808354040283529160200191611b81565b820191906000526020600020905b815481529060010190602001808311611b6457829003601f168201915b505094505050505060405180910390a1919050565b6060611ba182612caa565b805480602002602001604051908101604052809291908181526020018280548015611beb57602002820191906000526020600020905b815481526020019060010190808311611bd7575b50505050509050919050565b600f546001600160a01b031690565b600f546000906001600160a01b0316611c1d612a57565b6001600160a01b031614905090565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561103b5780601f106110105761010080835404028352916020019161103b565b611c9d611c98612a57565b612049565b611cdb57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613d866030913960400191505060405180910390fd5b61158081612cc4565b611cef611c98612a57565b611d2d57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613d866030913960400191505060405180910390fd5b6028841115611d735760408051600160e51b62461bcd0281526020600482015260076024820152600160cc1b6604f7665722034302604482015290519081900360640190fd5b60005b84811015611ecc57601354611d9290600163ffffffff612d0c16565b601381815560009182526012602090815260408084206001018790559154835291208551611dc892600290920191870190613b2f565b5060018215151415611df8576013546000908152601260205260409020600301805460ff19166001179055611e15565b6013546000908152601260205260409020600301805460ff191690555b611e2186601354612b8e565b7fadef11a3979b8ceb0573eb6ef0678134a09c23a0d94e5ea47cd18ac3a9fc0194601354856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611e89578181015183820152602001611e71565b50505050905090810190601f168015611eb65780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1600101611d76565b505050505050565b611ee4611edf612a57565b612d69565b565b6014805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561126c5780601f106112415761010080835404028352916020019161126c565b611f49612a57565b6001600160a01b0316826001600160a01b03161415611fb25760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000611fbf612a57565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155612003612a57565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000611507600e8363ffffffff612db116565b6011602052816000526040600020818154811061207557fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815294509092509083018282801561126c5780601f106112415761010080835404028352916020019161126c565b60135481565b6017546001600160a01b031681565b606060005b6103e88110156121a9576000818152600d602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156121965780601f1061216b57610100808354040283529160200191612196565b820191906000526020600020905b81548152906001019060200180831161217957829003601f168201915b5050600190950194506120f79350505050565b5090565b6121be6121b8612a57565b83612a7a565b6121fc57604051600160e51b62461bcd028152600401808060200182810382526031815260200180613edc6031913960400191505060405180910390fd5b61220884848484612e1b565b50505050565b60126020908152600091825260409182902080546001808301546002808501805488519481161561010002600019011691909104601f8101879004870284018701909752868352929590949192918301828280156122ad5780601f10612282576101008083540402835291602001916122ad565b820191906000526020600020905b81548152906001019060200180831161229057829003601f168201915b5050506003909301549192505060ff1684565b6000818152600d60209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609384939192918301828280156123585780601f1061232d57610100808354040283529160200191612358565b820191906000526020600020905b81548152906001019060200180831161233b57829003601f168201915b5050506000868152601260209081526040918290206002908101805484516001821615610100026000190190911692909204601f81018490048402830184019094528382529596506124079587955090935091908301828280156123fd5780601f106123d2576101008083540402835291602001916123fd565b820191906000526020600020905b8154815290600101906020018083116123e057829003601f168201915b5050505050612e70565b9392505050565b612419611c98612a57565b61245757604051600160e51b62461bcd028152600401808060200182810382526030815260200180613d866030913960400191505060405180910390fd5b60005b825181101561251257600182151514156124be5760016012600085848151811061248057fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff021916908360038111156124b457fe5b021790555061250a565b6000601260008584815181106124d057fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff0219169083600381111561250457fe5b02179055505b60010161245a565b507fefd56044628f374cec68c952a0580a76d23b4bd06d17bb887193f2176ba6c48b82601260008560008151811061254657fe5b60200260200101518152602001908152602001600020600201604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156125a357818101518382015260200161258b565b50505050919091018481038352855460026000196101006001841615020190911604808252602090910191508590801561261e5780601f106125f35761010080835404028352916020019161261e565b820191906000526020600020905b81548152906001019060200180831161260157829003601f168201915b505094505050505060405180910390a15050565b60608061263e33611b96565b905060005b815181101561273e5760016012600084848151811061265e57fe5b6020026020010151815260200190815260200160002060030160009054906101000a900460ff16600381111561269057fe5b141561273657601960008383815181106126a657fe5b60209081029190910181015182528101919091526040016000205460ff166127365760188282815181106126d657fe5b602090810291909101810151825460018181018555600094855292842001558351909160199185908590811061270857fe5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101612643565b505090565b6018818154811061275057fe5b600091825260209091200154905081565b61276c611c98612a57565b6127aa57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613d866030913960400191505060405180910390fd5b60005b81518110156127da576127d28282815181106127c557fe5b6020026020010151612b21565b6001016127ad565b507f68f2536b9ff968bd2acc006b7cf7be7ca83c2f4a462c355e925bb354e5ce43d5601260008360008151811061280d57fe5b60200260200101518152602001908152602001600020600201826040518080602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156128b45780601f10612889576101008083540402835291602001916128b4565b820191906000526020600020905b81548152906001019060200180831161289757829003601f168201915b50508381038252845181528451602091820191808701910280838360005b838110156128ea5781810151838201526020016128d2565b5050505090500194505050505060405180910390a150565b61290d611c98612a57565b61294b57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613d866030913960400191505060405180910390fd5b60005b825181101561148557816012600085848151811061296857fe5b6020026020010151815260200190815260200160002060010181905550808060010191505061294e565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6129c8611c06565b612a1c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61158081612eac565b60196020526000908152604090205460ff1681565b6000908152600160205260409020546001600160a01b0316151590565b3390565b612a66838383612f50565b612a708382613088565b611485828261317d565b6000612a8582612a3a565b612ac357604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613ccf602c913960400191505060405180910390fd5b6000612ace836117d8565b9050806001600160a01b0316846001600160a01b03161480612b095750836001600160a01b0316612afe84611046565b6001600160a01b0316145b80612b195750612b198185612992565b949350505050565b611580612b2d826117d8565b826131bb565b6000818152600260205260409020546001600160a01b03161561158057600090815260026020526040902080546001600160a01b0319169055565b8054612b8190600163ffffffff612c6816565b9055565b80546001019055565b612b988282613203565b612ba2828261317d565b612bab81613328565b5050565b612bb882612a3a565b612bf657604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613e24602c913960400191505060405180910390fd5b8051612c0990600b906020840190613b2f565b506000828152600d602090815260409091208251612c2992840190613b2f565b506000828152600c60209081526040909120825161148592840190613b2f565b5490565b600080612c5b83600261336c565b90506124078160646133c8565b600061240783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061340a565b6001600160a01b0316600090815260056020526040902090565b612cd5600e8263ffffffff6134a416565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6000828201838110156124075760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b612d7a600e8263ffffffff61352816565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216612dfb57604051600160e51b62461bcd028152600401808060200182810382526022815260200180613e506022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b612e26848484612a5b565b612e3284848484613592565b61220857604051600160e51b62461bcd028152600401808060200182810382526032815260200180613c536032913960400191505060405180910390fd5b606061240783836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506136ec565b6001600160a01b038116612ef457604051600160e51b62461bcd028152600401808060200182810382526026815260200180613c856026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b0316612f63826117d8565b6001600160a01b031614612fab57604051600160e51b62461bcd028152600401808060200182810382526029815260200180613e726029913960400191505060405180910390fd5b6001600160a01b038216612ff357604051600160e51b62461bcd028152600401808060200182810382526024815260200180613cab6024913960400191505060405180910390fd5b612ffc81612b33565b6001600160a01b038316600090815260036020526040902061301d90612b6e565b6001600160a01b038216600090815260036020526040902061303e90612b85565b60008181526001602052604080822080546001600160a01b0319166001600160a01b038681169182179092559151849391871691600080516020613e9b83398151915291a4505050565b6001600160a01b0382166000908152600560205260408120546130b290600163ffffffff612c6816565b60008381526006602052604090205490915080821461314d576001600160a01b03841660009081526005602052604081208054849081106130ef57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061312d57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490613176906000198301613ba9565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6131c58282613900565b6000818152600d60205260409020546002600019610100600184161502019091160415612bab576000818152600d60205260408120612bab91613bcd565b6001600160a01b0382166132615760408051600160e51b62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61326a81612a3a565b156132bf5760408051600160e51b62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206132fe90612b85565b60405181906001600160a01b03841690600090600080516020613e9b833981519152908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b60008261337b57506000611507565b8282028284828161338857fe5b041461240757604051600160e51b62461bcd028152600401808060200182810382526021815260200180613dd76021913960400191505060405180910390fd5b600061240783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061392c565b6000818484111561349c57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613461578181015183820152602001613449565b50505050905090810190601f16801561348e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6134ae8282612db1565b156135035760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6135328282612db1565b61357057604051600160e51b62461bcd028152600401808060200182810382526021815260200180613db66021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006135a6846001600160a01b0316613994565b6135b257506001612b19565b6000846001600160a01b031663150b7a026135cb612a57565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613650578181015183820152602001613638565b50505050905090810190601f16801561367d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561369f57600080fd5b505af11580156136b3573d6000803e3d6000fd5b505050506040513d60208110156136c957600080fd5b50516001600160e01b031916600160e11b630a85bd010214915050949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613740576020820181803883390190505b509050806000805b88518110156137995788818151811061375d57fe5b602001015160f81c60f81b83838060010194508151811061377a57fe5b60200101906001600160f81b031916908160001a905350600101613748565b5060005b87518110156137ee578781815181106137b257fe5b602001015160f81c60f81b8383806001019450815181106137cf57fe5b60200101906001600160f81b031916908160001a90535060010161379d565b5060005b86518110156138435786818151811061380757fe5b602001015160f81c60f81b83838060010194508151811061382457fe5b60200101906001600160f81b031916908160001a9053506001016137f2565b5060005b85518110156138985785818151811061385c57fe5b602001015160f81c60f81b83838060010194508151811061387957fe5b60200101906001600160f81b031916908160001a905350600101613847565b5060005b84518110156138ed578481815181106138b157fe5b602001015160f81c60f81b8383806001019450815181106138ce57fe5b60200101906001600160f81b031916908160001a90535060010161389c565b50909d9c50505050505050505050505050565b61390a82826139cb565b6139148282613088565b600081815260066020526040812055612bab81613a93565b6000818361397e57604051600160e51b62461bcd028152602060048201818152835160248401528351909283926044909101919085019080838360008315613461578181015183820152602001613449565b50600083858161398a57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612b195750141592915050565b816001600160a01b03166139de826117d8565b6001600160a01b031614613a2657604051600160e51b62461bcd028152600401808060200182810382526025815260200180613f396025913960400191505060405180910390fd5b613a2f81612b33565b6001600160a01b0382166000908152600360205260409020613a5090612b6e565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b03851690600080516020613e9b833981519152908390a45050565b600754600090613aaa90600163ffffffff612c6816565b60008381526008602052604081205460078054939450909284908110613acc57fe5b906000526020600020015490508060078381548110613ae757fe5b60009182526020808320909101929092558281526008909152604090208290556007805490613b1a906000198301613ba9565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613b7057805160ff1916838001178555613b9d565b82800160010185558215613b9d579182015b82811115613b9d578251825591602001919060010190613b82565b506121a9929150613c0d565b81548183558181111561148557600083815260209020611485918101908301613c0d565b50805460018160011615610100020316600290046000825580601f10613bf35750611580565b601f01602090049060005260206000209081019061158091905b61104391905b808211156121a95760008155600101613c1356fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776eddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a723058202be340baf6ab6dcebd69151f52f6264f9d0f202d4f7ae567514e09d65f22c29100294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373',\r\n        arguments: [ta,tb,Img,accounts[0],'0xD264b074c4a772E56536005Ae629518ee1bCc83a']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      gas: 9088550,\r\n      gasPrice:1000000000\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    })\r\n     \r\n     address=  localStorage.getItem('myData');\r\n\r\n    //firebase get  value\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    }\r\n    else{\r\n\r\n    }\r\n  \r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_receiver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"sendss\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      }\r\n    ];\r\n    \r\n    var geta=new web3.eth.Contract(abi,address);\r\n    \r\n    \r\n    //let a=this.state.toaddress;\r\n    //let b=this.state.tokenid;\r\n    //let c=this.state.tokenuri;\r\n    \r\n    \r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    await geta.methods.mintWithTokenURI(accounts[0],te,Img).send({\r\n      from: accounts[0],\r\n\r\n      //gas: 21000\r\n      \r\n     }).on('transactionHash',function(hash){\r\n\r\n      console.log(\"hashget\",hash)\r\n                //start\r\n\r\n\r\n                    //this line firebase code added below\r\n                    //const accounts = await web3.eth.getAccounts();\r\n\r\n                    let getaddress=localStorage.getItem('myaddress')\r\n                    \r\n                    let getData=localStorage.getItem('myData')\r\n                    \r\n                        fireDb.database().ref(\"contractaddress\").child(accounts[0]).push(getData, (err) => {\r\n                          //   console.log(obj, \"obj\");\r\n                          if (err)\r\n                              console.log(err);\r\n                          else \r\n                        setCurrentid(\"\");\r\n                        });\r\n                      \r\n                    \r\n\r\n                        let ref2=fireDb.database().ref(`imageref/${accounts[0]}`);\r\n\r\n                        let dateset=new Date().toDateString();\r\n\r\n                        console.log(\"dateget\",dateset)\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheck\",db)\r\n\r\n                        ref2.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",previousoaddress:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                        let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`);\r\n                \r\n\r\n                        ref23.child(db).set({id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:db,userName:ta,userSymbol:tb,ipfsUrl:tf,ownerAddress:accounts[0],soldd:\"\",extra1:\"\",datesets:dateset,whois:''})\r\n\r\n\r\n                      \r\n                    \r\n                        //fireDb.database().ref(`imageref/${accounts[0]}`).child(db).push({\r\n                          //id:te,imageUrl:Img,priceSet:\"\",cAddress:getData,keyId:\"\"\r\n                        //});\r\n                    \r\n          //end          \r\n\r\n\r\n\r\n\r\n\r\n\r\n     })\r\n\r\n     setLoading(false);\r\n\r\n     //alert(\"Your token has been deployed and mint successfully......\")\r\n\r\n     setIsOpen(true);\r\n\r\n\r\n     //window.location.reload(false)\r\n\r\n\r\n      }\r\n      \r\n      \r\n      //alert(\"symbol\"+tb)\r\n      \r\n    \r\n      //alert(\"im work ta tb tc  td te tf  \"+ta+\" \"+tb+\" \"+tc+\" \"+td+\" \"+te+\" \"+tf);\r\n    \r\n      \r\n    \r\n      //const accounts = await  web3.eth.getAccounts();\r\n\r\n      \r\n}\r\n\r\n  const funcall=async()=>{\r\n\r\n              //db store here\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n     \r\n     //alert('transaction success')}).catch(function(e){ \r\n      \r\n     // })   \r\n     //.then(function (error, result) {\r\n\r\n    //   if (!error) {\r\n    //       console.log(\"noerror\",'ok')\r\n    //       console.log(\"mintcheck\",mint)\r\n    //   } else {\r\n\r\n    //     console.log(\"Error\",\"errorelse\")\r\n\r\n    //   }\r\n      \r\n    // }\r\n  \r\n    \r\n    \r\n    //await geta.methods.tokenURI(te).send({\r\n    //from: accounts[0]\r\n    //value: this.setState({c:accounts[0]})\r\n    \r\n    //});\r\n    \r\n    //this.setState({ message: 'You have been entered!' });\r\n    \r\n    //var data =await lottery.methods.tokenURI(te).call();\r\n    \r\n    //this.setState({da: String(te)})\r\n    \r\n    //this.setState({ message: 'You have been entered!' });\r\n    \r\n    //alert(\" and \"+tid +\" and \"+te+\"and   data   \");\r\n    \r\n    \r\n    //alert(localStorage.getItem('myData'));\r\n    \r\n    \r\n    //transfer\r\n    \r\n    //await geta.methods.tokenURI(te).send({\r\n      //from: accounts[0]\r\n      //value: this.setState({c:accounts[0]})\r\n      \r\n    //});\r\n    \r\n    \r\n    //alert(\"NFT NAME    \"+ta+\"   NFT SYMBOL    \"+tb+\"    TOKEN URI    \"+tc+\"   TOKEN ADDRESS    \"+td+\"    TOKEN ID   \"+te+\"  TOKEN URI  \"+tf);\r\n    \r\n    \r\n    \r\n    \r\n    \r\n      //end above\r\n    \r\n    \r\n      //alert(\"waiting for data clear\");\r\n    \r\n      //document.getElementById(\"nameid\").innerHTML=\"\";\r\n      //document.getElementById(\"symbolid\").innerHTML=\"\";\r\n      //document.getElementById(\"addressid\").innerHTML=\"\";\r\n      //document.getElementById(\"idid\").innerHTML=\"\";\r\n      //document.getElementById(\"fileid\").innerHTML=\"\";\r\n    \r\n    \r\n      //this.tname.value = \"\";\r\n      //this.tsymbol.value = \"\";\r\n      //this.toaddress.value = \"\";\r\n      //this.tid.value = \"\";\r\n      //this.tfile.value = \"\";\r\n    \r\n    \r\n  //}\r\n\r\n  //useEffect(()=>{onSubmitNFT()},[])\r\n\r\n\r\n  // const getkeycheck =async()=>{\r\n\r\n  //   const accounts = await web3.eth.getAccounts();\r\n\r\n  //   alert(accounts[0])\r\n\r\n  //   // let ref2=fireDb.database().ref(`imageref/${accounts[0]}`);\r\n\r\n  //   //                     const db = ref2.push({foo: 'bar'}).key;\r\n\r\n                         \r\n  //   //                     console.log(\"dbcheck\",db)\r\n                      \r\n\r\n  //   // //let getk=firebase.database.ref('imageref/').child(`${accounts[0]}`).key()\r\n\r\n  //   // let ref3=firebase.database().ref(\"imageref/\");\r\n\r\n  //   // const db2 = ref3.push().key;\r\n\r\n\r\n  //   // console.log(\"getkk\",db2)\r\n\r\n  //   // // getk.push({\r\n  //   // //   id:te,imageUrl:Img,priceSet:\"\",cAddress:getData\r\n  //   // // }, (err) => {\r\n  //   // //   //   console.log(obj, \"obj\");\r\n  //   // // });\r\n\r\n\r\n\r\n  // }\r\n\r\n  // const handleLogout=()=>{\r\n    \r\n  //   fireDb.auth().signOut();\r\n    \r\n  //     }\r\n    \r\n\r\n  \r\n\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"App\"  >\r\n\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n\r\n{/* <div style={{backgroundColor:'white',height:'43px',width:'1017px',marginLeft:'20px',marginBlock:'15px', display:'-webkit-inline-flex'}}> */}\r\n\r\n<div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n              {' '}\r\n</Link>\r\n\r\n              \r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {' '}\r\n              \r\n\r\n              {/* <button onClick={handleLogout}>Logout</button> */}\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n      \r\n\r\n<br></br>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n<center>\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'600px',width:'500px'}}>\r\n\r\n  \r\n\r\n\r\n  <br></br>\r\n  <h1>CREATE NFT-TOKEN</h1>\r\n\r\n  <br></br>\r\n\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n\r\n<label for=\"name\">NFT  Name    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<input\r\nid=\"nameid\"\r\n  type='text'\r\n  name=\"tname\"\r\n  required\r\n  onChange={event => setName(event.target.value)}\r\n  \r\n/>\r\n<br></br>\r\n      <br></br>\r\n\r\n\t  <label for=\"symbol\">NFT  Symbol    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n    <select style={{backgroundColor:'white',height:'20px',width:'160px'}}\r\n        onChange={(event) => changeFruit(event.target.value)}\r\n        value={currentSymbol}>\r\n\r\n        <option value=\"ETH\">ETH     </option> \r\n        <option value=\"BNB\">BNB     </option>\r\n        <option value=\"ALGORAND\">ALGORAND  </option>\r\n      </select>\r\n{/* <input\r\n  id=\"symbolid\"\r\n  type='text'\r\n  name=\"tsymbol\"\r\n  required\r\n  onChange={event => settSymbol( event.target.value)}\r\n  \r\n/> */}\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<label for=\"id\">NFT Token-Id   {' '}   </label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n<input\r\nid=\"idid\"\r\n  type='text'\r\n  name=\"tid\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<form onSubmit={onSubmitImage}>\r\n\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label for=\"images\">Choose Your Image     </label>\r\n            \r\n            <input style={{backgroundColor:'white',height:'22px',width:'230px'}}\r\n             name=\"tfile\" id=\"fileid\" type = \"file\" onChange = {captureFile} required />\r\n\t\t\t\r\n             {/* <button \r\n             type=\"submit\"> \r\n             Upload Image NFT\r\n             </button> */}\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t</form>\r\n\r\n\r\n\r\n  {/* {isLoading ? \"\":\r\n              (<button  */}\r\n              <button\r\n                type=\"submit\"> \r\n                Create NFT\r\n                </button>\r\n   {/* )} */}\r\n  \r\n\r\n\r\n\r\n{/* <button \r\n\r\n\r\n\r\n\r\n             type=\"submit\"> \r\n             Upload and Create NFT\r\n\r\n             </button> */}\r\n\r\n</form>\r\n\r\n{/* <div style={{backgroundColor:'red',height:'100px',width:'500px'}}> */}\r\n\r\n{isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been deployed and mint successfully......</p>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />}\r\n\r\n    {/* </div> */}\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n{/* <div style={{backgroundColor:'white',height:'600px',width:'500px'}}>\r\n    {/* <input\r\n      type=\"button\"\r\n      value=\"Click to Open Popup l\"\r\n      onClick={togglePopup}\r\n    /> */}\r\n    {/* <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> */}\r\n    {/* {isOpen && <Popup\r\n      content={<>\r\n        <b>Design your Popups</b>\r\n        <p>Hello</p>\r\n        <button type=\"button\" onClick={togglePopup}>Test button</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />} */}\r\n  {/* </div> */} \r\n\r\n\r\n\r\n</center>\r\n\r\n\r\n{isLoading ? <div><h4>Fetching........</h4>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '}\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n{/* <div>\r\n\r\n\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Loading......</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Your Request has been Loading....!</Modal.Body>\r\n        <Modal.Footer>\r\n\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getkeycheck}\r\n              >\r\n              onclickkey\r\n              </button> */}\r\n\r\n<br></br>\r\n<br></br>\r\n  {/* <table bordered responsive>\r\n                \r\n                <tbody>\r\n                  <tr>\r\n                    <td>Name</td>\r\n                    <td>{tname}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Symbol</td>\r\n                    <td>{tsymbol}</td>\r\n                  </tr>\r\n\t\t\t\t  \r\n\t\t\t\t  <tr>\r\n                    <td>Token-Id</td>\r\n                    <td>{tid}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-URL</td>\r\n                    <td>https://ipfs.io/ipfs/{ipfsHash}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-View</td>\r\n\r\n                    <td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> \t\t\t\r\n\t\t\t\t\t</td>\r\n                  </tr>         \r\n                </tbody>\r\n\r\n            </table> */}\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n            {/* <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            \r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <NewPage />\r\n            </Route>\r\n            <Route path=\"/tokenpage\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <PrintallImage />\r\n            </Route>\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </Router> */}\r\n\r\n\r\n        \r\n\r\n\r\n      </div>      \r\n    \r\n  );\r\n}\r\n\r\nexport default Nft;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Testing.js",["254","255","256","257","258","259","260","261","262","263","264","265","266"],"import React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport getaaa from \"./abinft\";\r\n\r\nfunction Test(){\r\n     \r\n  var names = [];\r\n \r\n  const [afternames,setAfternames] = useState([]);\r\n  const [tid,setId] = useState(\"\"); \r\n    const testSample =async()=>{\r\n\r\n       \r\n    \r\n    \r\n            console.log(\"waiting for pic url\");\r\n          \r\n           \r\n          \r\n          \r\n              \r\n          console.log(\"completed\");    \r\n          \r\n          \r\n          console.log(\"check\"+localStorage.getItem('myData'));\r\n      \r\n      \r\n          console.log(\"geta\"+getaaa);\r\n         \r\n          const accounts = await web3.eth.getAccounts();\r\n      \r\n          console.log(accounts[0])\r\n      \r\n      \r\n      \r\n      \r\n      \r\n            var printgeta=await getaaa.methods.tokensOfOwner(accounts[0]).call();\r\n      \r\n      \r\n            //var get=printgeta.split(\",\")[0];\r\n      \r\n            for(var i=0;i<printgeta.length;i++){\r\n      \r\n              names.push(printgeta[i]);\r\n      \r\n            }\r\n      \r\n            //console.log(\"split owner address  \"+printgeta.length)\r\n      \r\n            console.log(\"owner address\"+printgeta)\r\n      \r\n      \r\n            \r\n            var after =[];      \r\n            for(i=0;i<printgeta.length;i++){\r\n      \r\n              //var nameget=names[i];\r\n              after.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      \r\n              //afternames.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      \r\n             // event.preventDefault();\r\n      \r\n              //console.log(\"console.log kulla \"+afternames.push(await getaaa.methods.tokenURI(names[i]).call()))\r\n      \r\n              console.log(names[i])\r\n      \r\n            }\r\n            setAfternames(after)\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    {testSample()}\r\n    return(\r\n        <div>\r\n            <ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n            testSample\r\n        </div>\r\n    )\r\n}\r\nexport default Test;",["267","268"],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Printallimage.js",["269","270","271"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Myitem from \"./Myitem\";\r\nimport getaaa from \"./abinft\";\r\n\r\n\r\nfunction Printallimage() {\r\n \r\n\r\n  const[afternames,setAfternames]=useState([]);\r\n  useEffect(()=>{onSubmitNFT()},[])\r\n      const onSubmitNFT = async () => {\r\n      console.log(\"waiting for pic url\");\r\n     // event.preventDefault();    \r\n        var names =[];\r\n        var ima =[];\r\n        var p =[];\r\n    console.log(\"geta\"+getaaa);\r\n   \r\n    //event.preventDefault();\r\n    \r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    console.log(accounts[0])\r\n    \r\n    var items = await getaaa.methods.totalSupply().call();\r\n      console.log(items)\r\n      for(var i=0;i<items;i++){\r\n        var v = await getaaa.methods.tokenByIndex(i).call();\r\n        console.log(\"id\" + v)\r\n        \r\n       \r\n          names.push(v)\r\n         \r\n        \r\n      }\r\n      \r\n   \r\n    for( i=0;i<names.length;i++){\r\n      \r\n\r\n      ima.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      console.log(names[i])\r\n      //var a=document.createElement(\"img\");\r\n     // var  b=document.createElement(\"button\")\r\n    //  var t = document.createElement(\"textbox\")\r\n\r\n      var  c=document.createElement(\"li\")\r\n\r\n      //var  d=document.createElement(\"li\")\r\n\r\n      var  ebr=document.createElement(\"br\")\r\n\r\n      //b.innerHTML= \"    \" + \" Buy Token\";\r\n    \r\n\r\n      // a.src=ima[i]\r\n      // a.id=ima[i]\r\n      // a.tid = names[i]\r\n      // a.width=200\r\n      // a.height=200\r\n     // t.innerText= \"Price\" + \"     \" +p[i]\r\n      \r\n      //b.src=ima[i]\r\n     // b.id=ima[i]\r\n      //b.tid = names[i]\r\n      c.style.listStyleType=\"none\"\r\n    //  c.append(a)\r\n      //c.append(t)\r\n     // c.append(ebr)\r\n      //c.append(b)\r\n      console.log(\"wait for displaying images\")\r\n  document.getElementById(\"prag\").append(c)\r\n\r\n//  document.getElementById(\"prag\").append(ebr)\r\n\r\n\r\n//    document.getElementById(\"prag\").append(d)\r\n\r\n      document.getElementById(\"ram\").append(c)\r\n      //b.onclick = async(event) =>{\r\n        //var thing = event.target.tid;\r\n       // await getaaa.methods.buyThing(thing).send({from:accounts[0]});\r\n       //console.log(\"Token Purchased Id\" + thing)\r\n        \r\n     // }\r\n\r\n    }\r\n    setAfternames(ima)\r\n\r\n   \r\n    \r\n   \r\n}\r\n\r\n\r\n  \r\n\r\n  return (    \r\n    \r\n\r\n    <div className=\"App\">\r\n\r\n\r\n<h1>Sales images</h1>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Myitem\");\r\n                }}\r\n              >\r\n               Myitem\r\n              </button>\r\n<button\r\n\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/nft\");\r\n                }}>\r\n                Go Deploy Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Go Transfer page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/tokencreate\");\r\n                }}>\r\n                Tokencreate Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepage\");\r\n                }}>\r\n                sale Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Saleimagepage\");\r\n                }}>\r\n                Image for sale \r\n              </button>\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n</form>\r\n\r\n{afternames.map((a)=>{\r\n        console.log(`a`, a)\r\n        return (\r\n          <div>\r\n            <img src={a} alt=\"\"  height =\"100px\" width=\"100px\"/><br />\r\n            \r\n            </div>\r\n            \r\n              \r\n              \r\n        )\r\n      })}\r\n<center>\r\n<br></br>\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Printallimage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Salepage.js",["272","273","274","275","276","277","278"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport getaaa from \"./abinft\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Myitem from \"./Myitem\";\r\n\r\n\r\nfunction Salepage() {\r\n\r\n\r\n \r\n  var names=[];\r\n const [afternames,setAfternames] = useState([]);\r\n const [name,setnames] = useState([]);\r\n const [tid,setId] = useState(\"\"); \r\n \r\n\r\n\r\n   useEffect(()=>{onSubmitNFT()},[])\r\n      const onSubmitNFT = async () => {\r\n    \r\n    \r\n      console.log(\"waiting for pic url\");\r\n        \r\n    console.log(\"completed\");    \r\n \r\n    \r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    console.log(accounts[0])\r\n\r\n\r\n\r\n\r\n\r\n      var printgeta=await getaaa.methods.tokensOfOwner(accounts[0]).call();\r\n\r\n\r\n      //var get=printgeta.split(\",\")[0];\r\n\r\n      for(var i=0;i<printgeta.length;i++){\r\n\r\n        names.push(printgeta[i]);\r\n\r\n      }\r\n      setnames(names);    \r\n      //console.log(\"split owner address  \"+printgeta.length)\r\n\r\n      console.log(\"owner address\"+printgeta)\r\n\r\n\r\n      \r\n      var after =[];      \r\n      for(i=0;i<printgeta.length;i++){\r\n\r\n        after.push(await getaaa.methods.tokenURI(names[i]).call());\r\n\r\n        console.log(names[i])\r\n\r\n      }\r\n      setAfternames(after)\r\n  \r\n  console.log(after.length)\r\n\r\n  for(var i=0 ;i<after.length;i++)\r\n  {\r\n      var a=document.createElement(\"img\")\r\n      var t= document.createElement(\"textbox\")\r\n      var  b=document.createElement(\"button\")\r\n\r\n      var  c=document.createElement(\"li\")\r\n\r\n      var  d=document.createElement(\"li\")\r\n\r\n      var  ebr=document.createElement(\"br\")\r\n\r\n\r\n\r\n     // if(pa == 1){\r\n        t=\"Added for sale\";\r\n      //}\r\n     // else{\r\n        b.innerHTML=\"Enable Sale\";\r\n      //}\r\n\r\n\r\n       \r\n        \r\n    \r\n\r\n        a.src=after[i]\r\n        a.id=after[i]\r\n        a.tid = names[i]\r\n        a.width=400\r\n        a.height=400\r\n        \r\n        b.src=after[i]\r\n        b.id=after[i]\r\n        b.tid = names[i]\r\n        c.style.listStyleType=\"none\"\r\n        c.append(a)\r\n        c.append(ebr)\r\n        const pricea = await getaaa.methods.items(names[i]).call(); \r\n      var pa = pricea.state;\r\n        if(pa == 1){\r\n          c.append(t)\r\n        }\r\n        else{\r\n          c.append(b)\r\n        }\r\n      \r\n        \r\n               \r\n\r\n        document.getElementById(\"prag\").append(c)\r\n\r\n        document.getElementById(\"prag\").append(ebr)\r\n\r\n\r\n        document.getElementById(\"prag\").append(d)\r\n\r\n        document.getElementById(\"ram\").append(c)\r\n\r\n\r\n        a.onclick = (event) =>{\r\n\r\n          console.log(event.target.id)\r\n        // pp.push(afternames.pop(event.target.tid))\r\n           \r\n          \r\n        }\r\n        \r\n        b.onclick = async(event) =>{\r\n          var isd = event.target.tid;\r\n\t\t  console.log(event.target.tid)\r\n\t\t  const accounts = await  web3.eth.getAccounts();\r\n      await getaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n         // salepage.settokenstate();\r\n\t\t  console.log(\"checking\")\r\n\t\t  var price = window.prompt(\"enter the price for your token\");\r\n\t\t  await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n  \t\tconst priceamount = await getaaa.methods.items(isd).call();\r\n\t\t  console.log(priceamount.price)\r\n         \r\n          \r\n        }\r\n\r\n        \r\n    //console.log(afternames[i])\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n \r\n\r\n      } \r\n\r\n}\r\n  \r\n\r\n  return (    \r\n\r\n    <div className=\"App\">\r\n\r\n\r\n     \r\n      \r\n<h1>Print Your NFT Image</h1>\r\n\r\n\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/nft\");\r\n                }}>\r\n                Go Deploy Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Myitem\");\r\n                }}\r\n              >\r\n               Myitem\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Go Transfer page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/tokencreate\");\r\n                }}>\r\n                Tokencreate Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Saleimagepage\");\r\n                }}\r\n              >\r\n              Images for Sale\r\n              </button>\r\n\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n      \r\n<center>\r\n<br></br>\r\n\r\n\r\n\t\t<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n\r\n\r\n<button \r\n             type=\"submit\"> \r\n             Press Button To Get Your NFT Image Print\r\n             </button>\r\n\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n            <Route path=\"/Saleimagepage\">\r\n              <Saleimagepage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Salepage;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Approveaddresspage.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Myitem.js",["279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\nimport getaaa from \"./abinft\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Salepage from \"./Salepage\";\r\nimport firebase from \"./firebase\";\r\n\r\nfunction Myitem() {\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [contactObjects, setContactObjects] = useState([]);\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n  var studentlist = [];\r\n\r\n  var stuset=[];\r\n\r\n  //const accounts = await web3.eth.getAccounts();\r\n\r\n  \r\n\r\n  const publicAddress = web3.eth.coinbase;//.toLowerCase();\r\n\r\n\r\n  var getaddress=localStorage.getItem('myaddress')\r\n\r\n  const addOrEdit = (obj) => {\r\n\r\n    var getaddress=localStorage.getItem('myaddress')\r\n\r\n    alert(\"getadd\"+getaddress)\r\n  \r\n\r\n    alert(\"cid\"+currentid)\r\n\r\n\r\n    alert(firebase.child(\"demonft\"))\r\n\r\n    if (currentid == \"\")\r\n    firebase.child(\"demonft\").child(getaddress).push(1, (err) => {\r\n      //   console.log(obj, \"obj\");\r\n      if (err)\r\n          console.log(err);\r\n      else \r\n    setCurrentid(\"\");\r\n    });\r\n  else\r\n    firebase.child('demonft').child(getaddress).set(currentid, (err) => {\r\n      if (err) \r\n  console.log(err);\r\n      else \r\n  setCurrentid(\"\");\r\n    });\r\n\r\n  }\r\n\r\n\r\n  //useEffect(() => {\r\n    //firebase.child(\"demonft\").child(getaddress).on(\"value\", (snapshot) => {\r\n      //if (snapshot.val() != null)\r\n        //setContactObjects({\r\n          //...snapshot.val(),\r\n        //});\r\n      //else setContactObjects({});\r\n    //});\r\n  //}, []);\r\n\r\n\r\n  \r\n\r\n const getdatafb = ()=>{\r\n\r\n  var getaddress=localStorage.getItem('myaddress')\r\n\r\n  alert(\"getdata from firebase\"+getaddress)\r\n    \r\n    firebase.child(\"demonft\").on(\"value\",snapshot => {\r\n      \r\n      snapshot.forEach(snap => {        \r\n          studentlist.push(snap.val())                \r\n          \r\n      })\r\n    })\r\n\r\n    stuset = studentlist.filter(function(item, pos, self) {\r\n      return self.indexOf(item) == pos;\r\n  })\r\n   var items = stuset.map((item) =>\r\n    item+','\r\n  );\r\n    \r\n  alert(\"stud\"+stuset)\r\n  alert(\"stud items\"+items)\r\n    \r\n    alert(\"length\"+stuset.length)\r\n    for(var i=0;i<stuset.length;i++){\r\n\r\n      if(getaddress == stuset[i]) {\r\n\r\n        alert(\"print equal one \"+stuset[i])\r\n      }\r\n      \r\n    }\r\n\r\n }\r\n\r\n\r\n\r\n  \r\n\r\n  return (    \r\n\r\n    <div className=\"App\">\r\n\r\n\r\n     \r\n      \r\n<h1>My Item</h1>\r\n\r\n\r\n\r\n\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Go Transfer page\r\n              </button>\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepage\");\r\n                }}\r\n              >\r\n             Sale Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Saleimagepage\");\r\n                }}\r\n              >\r\n              Images for Sale\r\n              </button>\r\n\r\n<br>\r\n</br>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<form onSubmit={addOrEdit}>\r\n\r\n  <label>enter your name</label>\r\n\r\n<input\r\n  id=\"idids\"\r\n  type='text'\r\n  name=\"tids\"\r\n  required\r\n  onChange={event => setCurrentid( event.target.value)}\r\n  \r\n/>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n  <button type=\"submit\" value=\"Submit\" >submit</button>\r\n\r\n</form>\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getdatafb}\r\n              >\r\n              Get Firebase Data\r\n              </button>\r\n\r\n\r\n      \r\n<center>\r\n<br></br>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n           \r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n           \r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n            <Route path=\"/Saleimagepage\">\r\n              <Saleimagepage />\r\n            </Route>\r\n            <Route path=\"/Salepage\">\r\n              <Salepage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Myitem;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\utils\\history.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\ipfs.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\web3.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\nftcontract.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\abinft.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\firebase.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Newdeploy.js",["292","293","294","295"],"import './App.css';\r\nimport {useState} from 'react';\r\nimport web3 from './web3';\r\nimport lottery from './nftcontract';//this line import lottery folder\r\nimport ipfs from './ipfs';\r\n//import storehash from './storehash';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport history from \"./utils/history\";\r\n//import First from \"./First\";\r\n//import Second from \"./Second\";\r\nimport NewPage from './Newpage';\r\nimport Tokencreate from './Tokencreate';\r\nimport PrintallImage from './Printallimage';\r\nimport Sendpage from './Sendpage';\r\nimport firebase from \"./firebase\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  //firebase \r\n\r\n  var studentlist = [];\r\n\r\n  var stuset=[];\r\n\r\n\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n\r\n  const [toaddress,setToaddress] = useState(\"\");\r\n  const [tid,setId] = useState(\"\");\r\n  //const [turi,setUri] = useState(\"\");\r\n  const [tname,setName] = useState(\"\");\r\n  const [tsymbol] = useState(\"\");\r\n  //const [tokenuri,setTokenUri] = useState(\"\");\r\n  //var [getimageurl,setgetImage] = useState(\"\");\r\n  //const [tfile,setTfile] = useState(\"\");\r\n  const [ipfsHash,setIpfsHash] = useState(null);\r\n  var [buffer,setBuffer] = useState(\"\");\r\n  //const [ethAddress,setEthAddress] = useState(\"\");\r\n  //const [blockNumber,setBlocknumber] = useState(\"\");\r\n  //const [transactionHash,setTransaction] = useState(\"\");\r\n  //const [gasUsed,setGasUsed] = useState(\"\");\r\n  //const [txReceipt,se] = useState(\"\");\r\n\r\n\r\n  //start\r\n\r\n\r\n  const captureFile =(event) => {\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    let reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => convertToBuffer(reader);    \r\n  };\r\nconst convertToBuffer = async(reader) => {\r\n  //file is converted to a buffer for upload to IPFS\r\n    const buffer = await Buffer.from(reader.result);\r\n  //set this buffer -using es6 syntax\r\n    setBuffer(buffer);\r\n};\r\nconst onSubmitImage = async (event) => {\r\n  event.preventDefault();\r\n //bring in user's metamask account address\r\n  const accounts = await web3.eth.getAccounts();\r\n \r\n  console.log('Sending from Metamask account: ' + accounts[0]);\r\n\r\n  await ipfs.add(buffer, (err, ipfsHash) => {\r\n    console.log(err,ipfsHash);\r\n    setIpfsHash(ipfsHash[0].hash);\r\n  }) \r\n}; \r\n//end\r\n\r\n  \r\n\r\n   const onSubmitNFT = async (event) => {\r\n\r\n\r\n    //alert(localStorage.getItem('myimageuri'));\r\n      \r\n\r\n    event.preventDefault();\r\n    \r\n      //new write below\r\n\r\n      const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n      alert(\"waiting for pic url\"); \r\n    \r\n      var ta=tname;\r\n      var tb=tsymbol;\r\n      var tc='https://ipfs.io/ipfs/'+ipfsHash;\r\n      var td=toaddress;\r\n      var te=tid;\r\n      var tf='https://ipfs.io/ipfs/'+ipfsHash;\r\n      \r\n      \r\n    \r\n      //alert(\"im work ta tb tc  td te tf  \"+ta+\" \"+tb+\" \"+tc+\" \"+td+\" \"+te+\" \"+tf);\r\n    \r\n      \r\n    \r\n      //const accounts = await  web3.eth.getAccounts();\r\n    \r\n    \r\n      await lottery.deploy({\r\n    \r\n        data:'60806040523480156200001157600080fd5b506040516200469338038062004693833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b50509291906020018051640100000000811115620000e857600080fd5b82016020810184811115620000fc57600080fd5b81516401000000008111828201871017156200011757600080fd5b505060208083015160409093015191945091925090859085908290829062000165907f01ffc9a70000000000000000000000000000000000000000000000000000000090620002c1811b901c565b6200017d6380ac58cd60e01b620002c160201b60201c565b6200019563780e9d6360e01b620002c160201b60201c565b8151620001aa90600990602085019062000679565b508051620001c090600a90602084019062000679565b50620001d9635b5e139f60e01b620002c160201b60201c565b50505050620001fd620001f16200039060201b60201c565b6200039560201b60201c565b6200020d6200039060201b60201c565b600f80546001600160a01b0319166001600160a01b03928316179081905560405191169060009060008051602062004651833981519152908290a3601580546001600160a01b038084166001600160a01b031992831617909255601680549285169290911691909117905582516200028d90601490602086019062000679565b506000601355620002a581620003e7602090811b901c565b620002b6816200039560201b60201c565b50505050506200071b565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200035357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b620003b081600e6200047760201b6200339e1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620003f76200051b60201b60201c565b6200046357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62000474816200054a60201b60201c565b50565b620004898282620005f660201b60201c565b15620004f657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600f546000906001600160a01b03166200053b62000390602090811b901c565b6001600160a01b031614905090565b6001600160a01b038116620005ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806200462b6026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216906000805160206200465183398151915290600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03821662000659576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620046716022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006bc57805160ff1916838001178555620006ec565b82800160010185558215620006ec579182015b82811115620006ec578251825591602001919060010190620006cf565b50620006fa929150620006fe565b5090565b6200039291905b80821115620006fa576000815560010162000705565b613f00806200072b6000396000f3fe6080604052600436106102675760003560e01c806395d89b4111610144578063b88d4fde116100b6578063d6dd3cc31161007a578063d6dd3cc314610d39578063dc8e92ea14610d63578063e564da6914610e11578063e985e9c514610ec1578063f2fde38b14610efc578063fc885bf714610f2f57610267565b8063b88d4fde14610ab4578063bfb231d214610b85578063c87b56dd14610c4a578063d4477b3c14610c74578063d50f15cf14610d2457610267565b8063a22cb46511610108578063a22cb465146109ce578063aa271e1a14610a09578063adecec2d14610a3c578063af640d0f14610a75578063b4a99a4e14610a8a578063b5a9934514610a9f57610267565b806395d89b411461088f578063983b2d56146108a457806398588a2b146108d757806398650275146109a45780639abc8320146109b957610267565b806345cefcec116101dd57806370a08231116101a157806370a082311461077d578063715018a6146107b057806380482491146107c55780638462151c146107e25780638da5cb5b146108655780638f32d59b1461087a57610267565b806345cefcec146106395780634f6ccce71461064e57806350655d8c1461067857806350bb4e7f1461068d5780636352211e1461075357610267565b80631239ec8c1161022f5780631239ec8c146103e957806318160ddd1461052957806323b872dd146105505780632f745c591461059357806342842e0e146105cc57806342966c681461060f57610267565b806301ffc9a71461026c57806306fdde03146102b4578063081812fc1461033e578063095ea7b3146103845780630bb78ec1146103bf575b600080fd5b34801561027857600080fd5b506102a06004803603602081101561028f57600080fd5b50356001600160e01b031916610f59565b604080519115158252519081900360200190f35b3480156102c057600080fd5b506102c9610f78565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103035781810151838201526020016102eb565b50505050905090810190601f1680156103305780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034a57600080fd5b506103686004803603602081101561036157600080fd5b503561100f565b604080516001600160a01b039092168252519081900360200190f35b34801561039057600080fd5b506103bd600480360360408110156103a757600080fd5b506001600160a01b038135169060200135611074565b005b3480156103cb57600080fd5b506102c9600480360360208110156103e257600080fd5b50356111a2565b3480156103f557600080fd5b506103bd6004803603606081101561040c57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561043657600080fd5b82018360208201111561044857600080fd5b803590602001918460208302840111600160201b8311171561046957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156104b857600080fd5b8201836020820111156104ca57600080fd5b803590602001918460208302840111600160201b831117156104eb57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061123d945050505050565b34801561053557600080fd5b5061053e61143d565b60408051918252519081900360200190f35b34801561055c57600080fd5b506103bd6004803603606081101561057357600080fd5b506001600160a01b03813581169160208101359091169060400135611443565b34801561059f57600080fd5b5061053e600480360360408110156105b657600080fd5b506001600160a01b0381351690602001356114a2565b3480156105d857600080fd5b506103bd600480360360608110156105ef57600080fd5b506001600160a01b03813581169160208101359091169060400135611525565b34801561061b57600080fd5b506103bd6004803603602081101561063257600080fd5b5035611540565b34801561064557600080fd5b506103bd611595565b34801561065a57600080fd5b5061053e6004803603602081101561067157600080fd5b5035611628565b34801561068457600080fd5b50610368611691565b34801561069957600080fd5b506102a0600480360360608110156106b057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156106df57600080fd5b8201836020820111156106f157600080fd5b803590602001918460018302840111600160201b8311171561071257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506116a0945050505050565b34801561075f57600080fd5b506103686004803603602081101561077657600080fd5b503561170e565b34801561078957600080fd5b5061053e600480360360208110156107a057600080fd5b50356001600160a01b0316611765565b3480156107bc57600080fd5b506103bd6117d0565b6102a0600480360360208110156107db57600080fd5b5035611876565b3480156107ee57600080fd5b506108156004803603602081101561080557600080fd5b50356001600160a01b0316611acc565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610851578181015183820152602001610839565b505050509050019250505060405180910390f35b34801561087157600080fd5b50610368611b2d565b34801561088657600080fd5b506102a0611b3c565b34801561089b57600080fd5b506102c9611b62565b3480156108b057600080fd5b506103bd600480360360208110156108c757600080fd5b50356001600160a01b0316611bc3565b3480156108e357600080fd5b506103bd600480360360a08110156108fa57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561092957600080fd5b82018360208201111561093b57600080fd5b803590602001918460018302840111600160201b8311171561095c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001351515611c15565b3480156109b057600080fd5b506103bd611e05565b3480156109c557600080fd5b506102c9611e17565b3480156109da57600080fd5b506103bd600480360360408110156109f157600080fd5b506001600160a01b0381351690602001351515611e72565b348015610a1557600080fd5b506102a060048036036020811015610a2c57600080fd5b50356001600160a01b0316611f7a565b348015610a4857600080fd5b506102c960048036036040811015610a5f57600080fd5b506001600160a01b038135169060200135611f8d565b348015610a8157600080fd5b5061053e61200e565b348015610a9657600080fd5b50610368612014565b348015610aab57600080fd5b506102c9612023565b348015610ac057600080fd5b506103bd60048036036080811015610ad757600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115610b1157600080fd5b820183602082011115610b2357600080fd5b803590602001918460018302840111600160201b83111715610b4457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506120de945050505050565b348015610b9157600080fd5b50610baf60048036036020811015610ba857600080fd5b503561213f565b6040518085815260200184815260200180602001836003811115610bcf57fe5b60ff168152602001828103825284818151815260200191508051906020019080838360005b83811015610c0c578181015183820152602001610bf4565b50505050905090810190601f168015610c395780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b348015610c5657600080fd5b506102c960048036036020811015610c6d57600080fd5b50356121f1565b348015610c8057600080fd5b506103bd60048036036040811015610c9757600080fd5b810190602081018135600160201b811115610cb157600080fd5b820183602082011115610cc357600080fd5b803590602001918460208302840111600160201b83111715610ce457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505050351515905061233f565b348015610d3057600080fd5b50610815612563565b348015610d4557600080fd5b5061053e60048036036020811015610d5c57600080fd5b5035612674565b348015610d6f57600080fd5b506103bd60048036036020811015610d8657600080fd5b810190602081018135600160201b811115610da057600080fd5b820183602082011115610db257600080fd5b803590602001918460208302840111600160201b83111715610dd357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612692945050505050565b348015610e1d57600080fd5b506103bd60048036036040811015610e3457600080fd5b810190602081018135600160201b811115610e4e57600080fd5b820183602082011115610e6057600080fd5b803590602001918460208302840111600160201b83111715610e8157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250612833915050565b348015610ecd57600080fd5b506102a060048036036040811015610ee457600080fd5b506001600160a01b03813581169160200135166128c3565b348015610f0857600080fd5b506103bd60048036036020811015610f1f57600080fd5b50356001600160a01b03166128f1565b348015610f3b57600080fd5b506102a060048036036020811015610f5257600080fd5b5035612956565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110045780601f10610fd957610100808354040283529160200191611004565b820191906000526020600020905b815481529060010190602001808311610fe757829003601f168201915b505050505090505b90565b600061101a8261296b565b61105857604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613d5f602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061107f8261170e565b9050806001600160a01b0316836001600160a01b031614156110d557604051600160e51b62461bcd028152600401808060200182810382526021815260200180613e026021913960400191505060405180910390fd5b806001600160a01b03166110e7612988565b6001600160a01b03161480611108575061110881611103612988565b6128c3565b61114657604051600160e51b62461bcd028152600401808060200182810382526038815260200180613c626038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600d6020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156112355780601f1061120a57610100808354040283529160200191611235565b820191906000526020600020905b81548152906001019060200180831161121857829003601f168201915b505050505081565b60005b81518110156112cd5761127a8484838151811061125957fe5b602002602001015184848151811061126d57fe5b6020026020010151611443565b60036012600084848151811061128c57fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff021916908360038111156112c057fe5b0217905550600101611240565b507fe0bdff057bc74b2545c13ac89393038d336f254b2245c876efa9669ddcc09b97601260008360008151811061130057fe5b602002602001015181526020019081526020016000206002018383604051808060200180602001806020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113ac5780601f10611381576101008083540402835291602001916113ac565b820191906000526020600020905b81548152906001019060200180831161138f57829003601f168201915b50508481038352865181528651602091820191808901910280838360005b838110156113e25781810151838201526020016113ca565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015611421578181015183820152602001611409565b50505050905001965050505050505060405180910390a1505050565b60075490565b61145461144e612988565b8261298c565b61149257604051600160e51b62461bcd028152600401808060200182810382526031815260200180613e236031913960400191505060405180910390fd5b61149d838383612a33565b505050565b60006114ad83611765565b82106114ed57604051600160e51b62461bcd02815260040180806020018281038252602b815260200180613b8f602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061151157fe5b906000526020600020015490505b92915050565b61149d838383604051806020016040528060008152506120de565b61154b61144e612988565b61158957604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ea56030913960400191505060405180910390fd5b61159281612a52565b50565b61159d611b3c565b6115f15760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6040517ff58fef8e187ef8dfd7bef096c1ef3e4f3c54f98d95b8ad5659349b07e61204df90600090a16015546001600160a01b0316ff5b600061163261143d565b821061167257604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613e54602c913960400191505060405180910390fd5b6007828154811061167f57fe5b90600052602060002001549050919050565b6015546001600160a01b031681565b60006116b26116ad612988565b611f7a565b6116f057604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b6116fa8484612a64565b6117048383612a85565b5060019392505050565b6000818152600160205260408120546001600160a01b03168061151f57604051600160e51b62461bcd028152600401808060200182810382526029815260200180613cc46029913960400191505060405180910390fd5b60006001600160a01b0382166117af57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180613c9a602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061151f90612b1f565b6117d8611b3c565b61182c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600f546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600f80546001600160a01b0319169055565b6000818152601260205260408120600101543410156118d05760408051600160e51b62461bcd02815260206004820152600b6024820152600160a81b6a507269636520697373756502604482015290519081900360640190fd5b600082815260126020526040902060039081015460ff16908111156118f157fe5b6001146119355760408051600160e51b62461bcd0281526020600482015260076024820152600160c81b664e6f2053616c6502604482015290519081900360640190fd5b6000828152601260205261194834612b23565b905060006119563483612b3e565b6015546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015611991573d6000803e3d6000fd5b506016546040516001600160a01b039091169083156108fc029084906000818181858888f193505050501580156119cc573d6000803e3d6000fd5b5050506015546119e6906001600160a01b03163384612a33565b60008281526012602090815260409182902060038101805460ff19166002908117909155835186815234948101859052606093810184815292820180546001811615610100026000190116929092049381018490527f46e70e87b058d8f3cde334fc179a61ac8acadcc4fdc26735e4195106b3c88eb394879492939092608083019085908015611ab75780601f10611a8c57610100808354040283529160200191611ab7565b820191906000526020600020905b815481529060010190602001808311611a9a57829003601f168201915b505094505050505060405180910390a1919050565b6060611ad782612b80565b805480602002602001604051908101604052809291908181526020018280548015611b2157602002820191906000526020600020905b815481526020019060010190808311611b0d575b50505050509050919050565b600f546001600160a01b031690565b600f546000906001600160a01b0316611b53612988565b6001600160a01b031614905090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156110045780601f10610fd957610100808354040283529160200191611004565b611bce6116ad612988565b611c0c57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b61159281612b9a565b611c206116ad612988565b611c5e57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b6028841115611ca45760408051600160e51b62461bcd0281526020600482015260076024820152600160cc1b6604f7665722034302604482015290519081900360640190fd5b60005b84811015611dfd57601354611cc390600163ffffffff612be216565b601381815560009182526012602090815260408084206001018790559154835291208551611cf992600290920191870190613a96565b5060018215151415611d29576013546000908152601260205260409020600301805460ff19166001179055611d46565b6013546000908152601260205260409020600301805460ff191690555b611d5286601354612a64565b7fadef11a3979b8ceb0573eb6ef0678134a09c23a0d94e5ea47cd18ac3a9fc0194601354856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611dba578181015183820152602001611da2565b50505050905090810190601f168015611de75780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1600101611ca7565b505050505050565b611e15611e10612988565b612c3f565b565b6014805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156112355780601f1061120a57610100808354040283529160200191611235565b611e7a612988565b6001600160a01b0316826001600160a01b03161415611ee35760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000611ef0612988565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611f34612988565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b600061151f600e8363ffffffff612c8716565b60116020528160005260406000208181548110611fa657fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529450909250908301828280156112355780601f1061120a57610100808354040283529160200191611235565b60135481565b6017546001600160a01b031681565b606060005b6103e88110156120da576000818152600d602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156120c75780601f1061209c576101008083540402835291602001916120c7565b820191906000526020600020905b8154815290600101906020018083116120aa57829003601f168201915b5050600190950194506120289350505050565b5090565b6120ef6120e9612988565b8361298c565b61212d57604051600160e51b62461bcd028152600401808060200182810382526031815260200180613e236031913960400191505060405180910390fd5b61213984848484612cf1565b50505050565b60126020908152600091825260409182902080546001808301546002808501805488519481161561010002600019011691909104601f8101879004870284018701909752868352929590949192918301828280156121de5780601f106121b3576101008083540402835291602001916121de565b820191906000526020600020905b8154815290600101906020018083116121c157829003601f168201915b5050506003909301549192505060ff1684565b6000818152600d60209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609384939192918301828280156122895780601f1061225e57610100808354040283529160200191612289565b820191906000526020600020905b81548152906001019060200180831161226c57829003601f168201915b5050506000868152601260209081526040918290206002908101805484516001821615610100026000190190911692909204601f810184900484028301840190945283825295965061233895879550909350919083018282801561232e5780601f106123035761010080835404028352916020019161232e565b820191906000526020600020905b81548152906001019060200180831161231157829003601f168201915b5050505050612d46565b9392505050565b61234a6116ad612988565b61238857604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b60005b825181101561244357600182151514156123ef576001601260008584815181106123b157fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff021916908360038111156123e557fe5b021790555061243b565b60006012600085848151811061240157fe5b6020026020010151815260200190815260200160002060030160006101000a81548160ff0219169083600381111561243557fe5b02179055505b60010161238b565b507fefd56044628f374cec68c952a0580a76d23b4bd06d17bb887193f2176ba6c48b82601260008560008151811061247757fe5b60200260200101518152602001908152602001600020600201604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156124d45781810151838201526020016124bc565b50505050919091018481038352855460026000196101006001841615020190911604808252602090910191508590801561254f5780601f106125245761010080835404028352916020019161254f565b820191906000526020600020905b81548152906001019060200180831161253257829003601f168201915b505094505050505060405180910390a15050565b60608061256f33611acc565b905060005b815181101561266f5760016012600084848151811061258f57fe5b6020026020010151815260200190815260200160002060030160009054906101000a900460ff1660038111156125c157fe5b141561266757601960008383815181106125d757fe5b60209081029190910181015182528101919091526040016000205460ff1661266757601882828151811061260757fe5b602090810291909101810151825460018181018555600094855292842001558351909160199185908590811061263957fe5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101612574565b505090565b6018818154811061268157fe5b600091825260209091200154905081565b61269d6116ad612988565b6126db57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b60005b815181101561270b576127038282815181106126f657fe5b6020026020010151612a52565b6001016126de565b507f68f2536b9ff968bd2acc006b7cf7be7ca83c2f4a462c355e925bb354e5ce43d5601260008360008151811061273e57fe5b60200260200101518152602001908152602001600020600201826040518080602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156127e55780601f106127ba576101008083540402835291602001916127e5565b820191906000526020600020905b8154815290600101906020018083116127c857829003601f168201915b50508381038252845181528451602091820191808701910280838360005b8381101561281b578181015183820152602001612803565b5050505090500194505050505060405180910390a150565b61283e6116ad612988565b61287c57604051600160e51b62461bcd028152600401808060200182810382526030815260200180613ced6030913960400191505060405180910390fd5b60005b825181101561149d57816012600085848151811061289957fe5b6020026020010151815260200190815260200160002060010181905550808060010191505061287f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6128f9611b3c565b61294d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61159281612d82565b60196020526000908152604090205460ff1681565b6000908152600160205260409020546001600160a01b0316151590565b3390565b60006129978261296b565b6129d557604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613c36602c913960400191505060405180910390fd5b60006129e08361170e565b9050806001600160a01b0316846001600160a01b03161480612a1b5750836001600160a01b0316612a108461100f565b6001600160a01b0316145b80612a2b5750612a2b81856128c3565b949350505050565b612a3e838383612e26565b612a488382612f70565b61149d8282613065565b611592612a5e8261170e565b826130a3565b612a6e82826130eb565b612a788282613065565b612a8181613222565b5050565b612a8e8261296b565b612acc57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613d8b602c913960400191505060405180910390fd5b8051612adf90600b906020840190613a96565b506000828152600d602090815260409091208251612aff92840190613a96565b506000828152600c60209081526040909120825161149d92840190613a96565b5490565b600080612b31836002613266565b90506123388160646132c2565b600061233883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613304565b6001600160a01b0316600090815260056020526040902090565b612bab600e8263ffffffff61339e16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6000828201838110156123385760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b612c50600e8263ffffffff61342216565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216612cd157604051600160e51b62461bcd028152600401808060200182810382526022815260200180613db76022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b612cfc848484612a33565b612d088484848461348c565b61213957604051600160e51b62461bcd028152600401808060200182810382526032815260200180613bba6032913960400191505060405180910390fd5b606061233883836040518060200160405280600081525060405180602001604052806000815250604051806020016040528060008152506135e6565b6001600160a01b038116612dca57604051600160e51b62461bcd028152600401808060200182810382526026815260200180613bec6026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b0316612e398261170e565b6001600160a01b031614612e8157604051600160e51b62461bcd028152600401808060200182810382526029815260200180613dd96029913960400191505060405180910390fd5b6001600160a01b038216612ec957604051600160e51b62461bcd028152600401808060200182810382526024815260200180613c126024913960400191505060405180910390fd5b612ed2816137fa565b6001600160a01b0383166000908152600360205260409020612ef390613835565b6001600160a01b0382166000908152600360205260409020612f149061384c565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054612f9a90600163ffffffff612b3e16565b600083815260066020526040902054909150808214613035576001600160a01b0384166000908152600560205260408120805484908110612fd757fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061301557fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b038416600090815260056020526040902080549061305e906000198301613b10565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6130ad8282613855565b6000818152600d60205260409020546002600019610100600184161502019091160415612a81576000818152600d60205260408120612a8191613b34565b6001600160a01b0382166131495760408051600160e51b62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6131528161296b565b156131a75760408051600160e51b62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206131e69061384c565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000826132755750600061151f565b8282028284828161328257fe5b041461233857604051600160e51b62461bcd028152600401808060200182810382526021815260200180613d3e6021913960400191505060405180910390fd5b600061233883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613881565b6000818484111561339657604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561335b578181015183820152602001613343565b50505050905090810190601f1680156133885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6133a88282612c87565b156133fd5760408051600160e51b62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b61342c8282612c87565b61346a57604051600160e51b62461bcd028152600401808060200182810382526021815260200180613d1d6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006134a0846001600160a01b03166138e9565b6134ac57506001612a2b565b6000846001600160a01b031663150b7a026134c5612988565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561354a578181015183820152602001613532565b50505050905090810190601f1680156135775780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561359957600080fd5b505af11580156135ad573d6000803e3d6000fd5b505050506040513d60208110156135c357600080fd5b50516001600160e01b031916600160e11b630a85bd010214915050949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561363a576020820181803883390190505b509050806000805b88518110156136935788818151811061365757fe5b602001015160f81c60f81b83838060010194508151811061367457fe5b60200101906001600160f81b031916908160001a905350600101613642565b5060005b87518110156136e8578781815181106136ac57fe5b602001015160f81c60f81b8383806001019450815181106136c957fe5b60200101906001600160f81b031916908160001a905350600101613697565b5060005b865181101561373d5786818151811061370157fe5b602001015160f81c60f81b83838060010194508151811061371e57fe5b60200101906001600160f81b031916908160001a9053506001016136ec565b5060005b85518110156137925785818151811061375657fe5b602001015160f81c60f81b83838060010194508151811061377357fe5b60200101906001600160f81b031916908160001a905350600101613741565b5060005b84518110156137e7578481815181106137ab57fe5b602001015160f81c60f81b8383806001019450815181106137c857fe5b60200101906001600160f81b031916908160001a905350600101613796565b50909d9c50505050505050505050505050565b6000818152600260205260409020546001600160a01b03161561159257600090815260026020526040902080546001600160a01b0319169055565b805461384890600163ffffffff612b3e16565b9055565b80546001019055565b61385f8282613920565b6138698282612f70565b600081815260066020526040812055612a81816139fa565b600081836138d357604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561335b578181015183820152602001613343565b5060008385816138df57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612a2b5750141592915050565b816001600160a01b03166139338261170e565b6001600160a01b03161461397b57604051600160e51b62461bcd028152600401808060200182810382526025815260200180613e806025913960400191505060405180910390fd5b613984816137fa565b6001600160a01b03821660009081526003602052604090206139a590613835565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600754600090613a1190600163ffffffff612b3e16565b60008381526008602052604081205460078054939450909284908110613a3357fe5b906000526020600020015490508060078381548110613a4e57fe5b60009182526020808320909101929092558281526008909152604090208290556007805490613a81906000198301613b10565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ad757805160ff1916838001178555613b04565b82800160010185558215613b04579182015b82811115613b04578251825591602001919060010190613ae9565b506120da929150613b74565b81548183558181111561149d5760008381526020902061149d918101908301613b74565b50805460018160011615610100020316600290046000825580601f10613b5a5750611592565b601f01602090049060005260206000209081019061159291905b61100c91905b808211156120da5760008155600101613b7a56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820f6409254bfbd94bc9adc60fce67f169d714c135a3de7163a6a089576bf91cce500294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373',\r\n        arguments: [ta,tb,tc,accounts[0],'0xEB50a80F7DE37AF8669b0C4973B2A33E8502c5a7']        \r\n        })\r\n      .send({\r\n      from: accounts[0],\r\n      gas: 4796559,\r\n      gasPrice: '20000000000'\r\n    })\r\n    .then(function(newContractInstance){\r\n      console.log(newContractInstance.options.address) // instance with the new contract address\r\n       //acc=newContractInstance.options.address\r\n      alert(newContractInstance.options.address);\r\n\r\n\r\n\r\n\r\n//this line firebase code added below\r\nvar getaddress=localStorage.getItem('myaddress')\r\n\r\nif (currentid == \"\")\r\n    firebase.child(\"contractaddress\").child(getaddress).push(newContractInstance.options.address, (err) => {\r\n      //   console.log(obj, \"obj\");\r\n      if (err)\r\n          console.log(err);\r\n      else \r\n    setCurrentid(\"\");\r\n    });\r\n  else\r\n    firebase.child(\"contractaddress\").child(getaddress).set(currentid, (err) => {\r\n      if (err) \r\n  console.log(err);\r\n      else \r\n  setCurrentid(\"\");\r\n    });\r\n\r\n    \r\n      localStorage.setItem('myData', newContractInstance.options.address);\r\n    \r\n    \r\n    \r\n        \r\n      alert(\"completed\");\r\n    \r\n      //alert(this.state.tname+\" and \"+this.state.tsymbol +\" and \"+this.state.tokenuri);\r\n    })\r\n    \r\n    \r\n    \r\n    alert(localStorage.getItem('myData'));\r\n    \r\n    var address =  localStorage.getItem('myData');\r\n\r\n\r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n    var geta=new web3.eth.Contract(abi,address);\r\n    \r\n    \r\n    //let a=this.state.toaddress;\r\n    //let b=this.state.tokenid;\r\n    //let c=this.state.tokenuri;\r\n    \r\n    \r\n    \r\n    alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    await geta.methods.mintWithTokenURI(accounts[0],te,tf).send({\r\n      from: accounts[0]\r\n      \r\n    });\r\n\r\n    \r\n  };\r\n\r\n  const minttoken = ()=>{\r\n\r\n\r\n    //firebase get  value\r\n\r\n    var getaddress=localStorage.getItem('myaddress')\r\n\r\n    alert(\"getdata from firebase\"+getaddress)\r\n    \r\n    firebase.child(\"contractaddress\").child(getaddress).on(\"value\",snapshot => {\r\n      \r\n      snapshot.forEach(snap => {        \r\n          studentlist.push(snap.val())                \r\n          \r\n      })\r\n    })\r\n\r\n    stuset = studentlist.filter(function(item, pos, self) {\r\n      return self.indexOf(item) == pos;\r\n  })\r\n   var items = stuset.map((item) =>\r\n    item+','\r\n  );\r\n    \r\n  alert(\"stud\"+stuset)\r\n  alert(\"stud items\"+items)\r\n    \r\n    alert(\"length\"+stuset.length)\r\n    for(var i=0;i<stuset.length;i++){\r\n\r\n      if(getaddress == stuset[i]) {\r\n\r\n        alert(\"print equal one \"+stuset[i])\r\n      }\r\n      else{\r\n\r\n        alert(\"print Nothing \")\r\n      }\r\n      \r\n    }\r\n\r\n\r\n\r\n  }\r\n    \r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n<center>\r\n<br></br>\r\n<h1>DEPLOY NFT Token</h1>\r\n\r\n<form onSubmit={onSubmitImage}>\r\n\r\n\r\n\t\t  <label for=\"images\">Upload Your Image     </label>\r\n            <input \r\n\t\t\tname=\"tfile\"\r\n\t\t\tid=\"fileid\"\r\n              type = \"file\"\r\n              onChange = {captureFile}\r\n\t\t\t  required\r\n            />\r\n\t\t\t\r\n             <button \r\n             type=\"submit\"> \r\n             Upload Image NFT\r\n             </button>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t</form>\r\n\r\n\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n\r\n<label for=\"name\">Create Your NFT  Name    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<input\r\nid=\"nameid\"\r\n  type='text'\r\n  name=\"tname\"\r\n  required\r\n  onChange={event => setName(event.target.value)}\r\n  \r\n/>\r\n<br></br>\r\n      <br></br>\r\n\r\n\t  <label for=\"symbol\">Create Your NFT  Symbol    </label>\r\n\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n<input\r\n  id=\"symbolid\"\r\n  type='text'\r\n  name=\"tsymbol\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n<br></br>\r\n      <br></br>\r\n\r\n\t  <label for=\"id\">Create Your Unique Token-Id {' '}   </label>\r\n\r\n<input\r\nid=\"idid\"\r\n  type='text'\r\n  name=\"tid\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button \r\n             type=\"submit\"> \r\n             Upload and Create NFT\r\n             </button>\r\n\r\n</form>\r\n\r\n\r\n\r\n<br>\r\n</br>\r\n<br>\r\n</br>\r\n\r\n<button type=\"submit\" onClick={minttoken}> Mint Token </button>\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}>\r\n            Get Single Image Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Tokencreate\");\r\n                }}\r\n              >\r\n                Token-Create page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Sendpage\");\r\n                }}>\r\n                Send Pagess\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                PrintallImage page\r\n              </button>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n  <table bordered responsive>\r\n                \r\n                <tbody>\r\n                  <tr>\r\n                    <td>Name</td>\r\n                    <td>{tname}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Symbol</td>\r\n                    <td>{tsymbol}</td>\r\n                  </tr>\r\n\t\t\t\t  \r\n\t\t\t\t  <tr>\r\n                    <td>Token-Id</td>\r\n                    <td>{tid}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-URL</td>\r\n                    <td>https://ipfs.io/ipfs/{ipfsHash}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-View</td>\r\n\r\n                    <td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> \t\t\t\r\n\t\t\t\t\t</td>\r\n                  </tr>         \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            \r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <NewPage />\r\n            </Route>\r\n            <Route path=\"/tokenpage\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <PrintallImage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Mycontractdata.js",["296","297","298","299","300","301","302"],"import React from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\nimport {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport ipfs from './ipfs';\r\n\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n//import First from \"./First\";\r\n//import Second from \"./Second\";\r\nimport Nft from \"./Nft\";\r\nimport Newpage from \"./Newpage\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport PrintallImage from \"./Printallimage\";\r\nimport firebase from \"./firebase\";\r\n\r\n\r\nfunction Mycontractdata() {\r\n\r\n  const [toaddress,setToaddress] = useState(\"\");\r\n  const [tid,setId] = useState(\"\");\r\n  //const [turi,setUri] = useState(\"\");\r\n  //const [tname,setName] = useState(\"\");\r\n  //const [tsymbol,setSymbol] = useState(\"\");\r\n  //const [tokenuri,setTokenUri] = useState(\"\");\r\n  //var [getimageurl,setgetImage] = useState(\"\");\r\n  //const [tfile,setTfile] = useState(\"\");\r\n  const [ipfsHash,setIpfsHash] = useState(null);\r\n  var [buffer,setBuffer] = useState(\"\");\r\n  //const [ethAddress,setEthAddress] = useState(\"\");\r\n  //const [blockNumber,setBlocknumber] = useState(\"\");\r\n  //const [transactionHash,setTransaction] = useState(\"\");\r\n  //const [gasUsed,setGasUsed] = useState(\"\");\r\n  //const [txReceipt,se] = useState(\"\");\r\n\r\n  //const [dataset,setdatas] = useState(\"\");\r\n\r\n  //const [address,setaddress] = useState(\"\");\r\n  //const [geta,setgeta] = useState(\"\");\r\n\r\n  //var [printgeta,setgetaprint] =useState(\"\");\r\n\r\n  //fb \r\n  var studentlist = [];\r\n\r\n  var stuset=[];\r\n\r\n\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n\r\n\r\n\r\n\r\n  //getimage\r\n\r\n\r\n  //start\r\n\r\n\r\n  const captureFile =(event) => {\r\n    event.stopPropagation()\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    let reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n    reader.onloadend = () => convertToBuffer(reader);    \r\n  };\r\nconst convertToBuffer = async(reader) => {\r\n  //file is converted to a buffer for upload to IPFS\r\n    const buffer = await Buffer.from(reader.result);\r\n  //set this buffer -using es6 syntax\r\n    setBuffer(buffer);\r\n};\r\nconst onSubmitImage = async (event) => {\r\n  event.preventDefault();\r\n //bring in user's metamask account address\r\n  const accounts = await web3.eth.getAccounts();\r\n \r\n  console.log('Sending from Metamask account: ' + accounts[0]);\r\n\r\n  await ipfs.add(buffer, (err, ipfsHash) => {\r\n    console.log(err,ipfsHash);\r\n    setIpfsHash(ipfsHash[0].hash);\r\n  }) \r\n}; \r\n//end\r\n\r\n\r\n\r\n  //end \r\n    \r\n      //new write below\r\n\r\n\r\n      const onSubmitNFT = async (event) => {\r\n\r\n\r\n\r\n    \r\n    \r\n      alert(\"waiting for pic url\");\r\n    \r\n      //var ta=tname;\r\n      //var tb=tsymbol;\r\n      //var tc='https://ipfs.io/ipfs/'+ipfsHash;\r\n      var td=toaddress;\r\n      var te=tid;\r\n      var tf='https://ipfs.io/ipfs/'+ipfsHash;\r\n      \r\n      \r\n    \r\n      //alert(\"im work ta tb tc  td te tf  \"+ta+\" \"+tb+\" \"+tc+\" \"+td+\" \"+te+\" \"+tf);\r\n    \r\n      event.preventDefault();\r\n    \r\n      const accounts = await  web3.eth.getAccounts();\r\n\r\n\r\n \r\n \r\n      //var poda ='0x84a394eC66fac3B2967d48ACCB102852F9ef3Ec1';\r\n\r\n      for(var i=0;i<=stuset.length;i++){\r\n\r\n        alert(\"stu \"+stuset[i])  \r\n\r\n    \r\n    \r\n      var poda = stuset[i]\r\n    \r\n    \r\n        \r\n    alert(\"completed\");    \r\n    \r\n    \r\n    alert(poda);\r\n\r\n\r\n    //var poda=localStorage.getItem('myData');\r\n\r\n    \r\n\r\n    //write con add below\r\n\r\n    //setaddress(localStorage.getItem('myData'));\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n\r\n\r\n    alert(\"after abi\"+poda);\r\n    var getaaaa=new web3.eth.Contract(abi,poda);\r\n    \r\n    \r\n    \r\n\r\n    alert(\"geta\"+getaaaa);\r\n    \r\n    alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n    \r\n    await getaaaa.methods.mintWithTokenURI(toaddress,tid,tf).send({\r\n    from: accounts[0]\r\n    //value: this.setState({c:accounts[0]})\r\n    \r\n    });\r\n\r\n\r\n    //var printgeta=await getaaaa.methods.mintWithTokenURI(\"toadd\",\"toid\",\"touri\").call();\r\n\r\n\r\n    //setgetaprint(await getaaa.methods.tokenURI(te).call());\r\n\r\n\r\n    //localStorage.setItem('prints',printgeta);\r\n\r\n\r\n    //alert(\"printgeta\"+printgeta);\r\n\r\n    //alert(\"data print\"+printgeta);\r\n  \r\n\r\n    \r\n    \r\n    alert(\" and \"+tid +\" and \"+te+\"and   data   \");\r\n    \r\n    \r\n    \r\n    \r\n  } \r\n    \r\n  };\r\n\r\n\r\n\r\n  //\r\n\r\n\r\n  const getcname =async (event) =>{\r\n\r\n    //\r\n\r\n    \r\n    \r\n      const accounts = await  web3.eth.getAccounts();\r\n\r\n\r\n      for(var i=0;i<=stuset.length;i++){\r\n\r\n        alert(\"stu \"+stuset[i])  \r\n\r\n      \r\n      var poda = stuset[i]\r\n    \r\n        \r\n    alert(\"completed\");    \r\n    \r\n    \r\n    alert(poda);\r\n\r\n\r\n    //var poda=localStorage.getItem('myData');\r\n\r\n    \r\n\r\n    //write con add below\r\n\r\n    //setaddress(localStorage.getItem('myData'));\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n\r\n\r\n    alert(\"after abi\"+poda);\r\n    var getaaaa=new web3.eth.Contract(abi,poda);\r\n    \r\n    \r\n    \r\n\r\n    alert(\"geta\"+getaaaa);\r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n\r\n\r\n    //\r\n\r\n\r\n    var a=await getaaaa.methods.name().call();\r\n\r\n    alert(\"getname\"+a)\r\n      \r\n  }\r\n  }\r\n\r\n\r\n  const getcsymbol =async (event) =>{\r\n\r\n\r\n    const accounts = await  web3.eth.getAccounts();\r\n\r\n\r\n      for(var i=0;i<stuset.length;i++){\r\n\r\n        alert(\"stu \"+stuset[i])  \r\n\r\n      \r\n      var poda = stuset[i]\r\n    \r\n        \r\n    alert(\"completed\");    \r\n    \r\n    \r\n    alert(poda);\r\n\r\n\r\n    //var poda=localStorage.getItem('myData');\r\n\r\n    \r\n\r\n    //write con add below\r\n\r\n    //setaddress(localStorage.getItem('myData'));\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n\r\n\r\n    alert(\"after abi\"+poda);\r\n    var getaaaa=new web3.eth.Contract(abi,poda);\r\n    \r\n    \r\n    \r\n\r\n    alert(\"geta\"+getaaaa);\r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n\r\n\r\n    //\r\n\r\n\r\n    var b= await getaaaa.methods.symbol().call();\r\n\r\n    alert(\"getsymbol\"+b)\r\n  }\r\n\r\n  }\r\n\r\n  const getcurl =async (event) =>{\r\n\r\n    const accounts = await  web3.eth.getAccounts();\r\n\r\n\r\n      for(var i=0;i<stuset.length;i++){\r\n\r\n        alert(\"stu \"+stuset[i])  \r\n\r\n      \r\n      var poda = stuset[i]\r\n    \r\n        \r\n    alert(\"completed\");    \r\n    \r\n    \r\n    alert(poda);\r\n\r\n\r\n    //var poda=localStorage.getItem('myData');\r\n\r\n    \r\n\r\n    //write con add below\r\n\r\n    //setaddress(localStorage.getItem('myData'));\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n\r\n\r\n    alert(\"after abi\"+poda);\r\n    var getaaaa=new web3.eth.Contract(abi,poda);\r\n    \r\n    \r\n    \r\n\r\n    alert(\"geta\"+getaaaa);\r\n    \r\n    //alert(\"im work a +b\"+td+\" \"+te+\" \"+tf);\r\n    \r\n    event.preventDefault();\r\n    \r\n    //const accounts = await web3.eth.getAccounts();\r\n    \r\n    \r\n\r\n\r\n    //\r\n\r\n\r\n    var c=await getaaaa.methods.totalSupply().call();\r\n\r\n    alert(\"getsymbol\"+c)\r\n  }\r\n  }\r\n\r\n  \r\n    \r\n\r\n  const getcontractarray = () =>{\r\n\r\n\r\n\r\n    alert(\"stud\"+stuset)\r\n    //alert(\"stud items\"+items)\r\n\r\n    for(var i=0;i<stuset.length;i++){\r\n\r\n        alert(\"stu \"+stuset[i])  \r\n\r\n    }\r\n      \r\n      alert(\"length\"+stuset.length)  \r\n\r\n  }\r\n\r\n  const getcontract = () =>{\r\n\r\n    alert(\"getcontract\")\r\n\r\n\r\n    //firebase get  value\r\n\r\n    var getaddress=localStorage.getItem('myaddress')\r\n\r\n    alert(\"getdata from firebase\"+getaddress)\r\n    \r\n    firebase.child(\"contractaddress\").child(getaddress).on(\"value\",snapshot => {\r\n      \r\n      snapshot.forEach(snap => {        \r\n          studentlist.push(snap.val())                \r\n          \r\n      })\r\n    })\r\n\r\n    stuset = studentlist.filter(function(item, pos, self) {\r\n      return self.indexOf(item) == pos;\r\n  })\r\n   var items = stuset.map((item) =>\r\n    item+','\r\n  );\r\n    \r\n  alert(\"stud\"+stuset)\r\n  alert(\"stud items\"+items)\r\n    \r\n    alert(\"length\"+stuset.length)\r\n    for(var i=0;i<stuset.length;i++){\r\n\r\n      if(getaddress == stuset[i]) {\r\n\r\n        alert(\"print equal one \"+stuset[i])\r\n      }\r\n      else{\r\n\r\n        alert(\"print Nothing \")\r\n      }\r\n      \r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  //</div><td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> \t\t\t\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n<center>\r\n<br></br>\r\n<h1>NFT-Token Create Page</h1>\r\n\r\n<form onSubmit={onSubmitImage}>\r\n\r\n\r\n\t\t  <label for=\"images\">Upload Your Image     </label>\r\n            <input \r\n\t\t\tname=\"tfile\"\r\n\t\t\tid=\"fileid\"\r\n              type = \"file\"\r\n              onChange = {captureFile}\r\n\t\t\t  required\r\n            />\r\n\t\t\t\r\n             <button \r\n             type=\"submit\"> \r\n             Upload Image\r\n             </button>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t\t\t <br></br>\r\n\t</form>\r\n\r\n\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n\r\n\r\n<label for=\"address\">Enter Your Mint Address  </label>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n<input\r\nid=\"addressid\"\r\n  type='text'\r\n  name=\"toaddress\"\r\n  required\r\n  onChange={event => setToaddress( event.target.value)}\r\n  \r\n/>\r\n<br></br>\r\n      <br></br>\r\n\r\n\t  <label for=\"id\">Create Your Unique Token-Id {' '}   </label>\r\n\r\n<input\r\nid=\"idid\"\r\n  type='text'\r\n  name=\"tid\"\r\n  required\r\n  onChange={event => setId( event.target.value)}\r\n  \r\n/>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button \r\n             type=\"submit\"> \r\n             Create NFT Token-Id\r\n             </button>\r\n\r\n</form>\r\n\r\n<br></br>\r\n<br></br>\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button \r\n             type=\"submit\"\r\n             onClick={getcontract}> \r\n             Get All Contract\r\n             </button>\r\n\r\n             <button \r\n             type=\"submit\"\r\n             onClick={getcontractarray}> \r\n             Get All Contract\r\n             </button>\r\n\r\n             <button \r\n             type=\"submit\"\r\n             onClick={getcname}> \r\n             Get All Name\r\n             </button>\r\n             <button \r\n             type=\"submit\"\r\n             onClick={getcurl}> \r\n             Get All Url\r\n             </button>\r\n             <button \r\n             type=\"submit\"\r\n             onClick={getcsymbol}> \r\n             Get All Symbol\r\n             </button>\r\n\r\n\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}>\r\n                Get Single Image Page\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Send-page\r\n              </button>\r\n\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/nft\");\r\n                }}>\r\n                Nft deploy Pages\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/printallimage\");\r\n                }}\r\n              >\r\n                PrintallImage page\r\n              </button>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n  <table bordered responsive>\r\n                \r\n                <tbody>\r\n                <tr>\r\n                    <td>To-Address</td>\r\n                    <td>{toaddress}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Token-Id</td>\r\n                    <td>{tid}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-URL</td>\r\n                    <td>https://ipfs.io/ipfs/{ipfsHash}</td>\r\n                  </tr>\r\n\t\t\t\t  <tr>\r\n                    <td>Image-View</td>\r\n\r\n                    <td><img src={localStorage.getItem('myimageuri')}  alt={'C - language'} /> \t\t\t\r\n\t\t\t\t\t</td>\r\n                  </tr>         \r\n                </tbody>\r\n\r\n            </table>\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <PrintallImage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n\r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Mycontractdata;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Salepagecopy.js",["303","304","305","306"],"import React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\nimport {abi} from './data'\r\nimport Popup from './Popup';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport Footer from './footer'\r\n\r\nfunction Salepagecopy() {\r\n\r\n  const [tprice,setTprice] = useState(\"\");\r\n  const [isOpenset, setIsOpenset] = useState(false);\r\n  const [isOpensetFirst, setIsOpensetFirst] = useState(false);\r\n  const [a, setSelectImage] = useState({});\r\n  const [tsAddress,settsAddress] = useState(\"\");\r\n  \r\n  console.log(`agets`, a);\r\n \r\n  const togglePopupset = () => {\r\n    setIsOpenset(false);    \r\n  }\r\n\r\n  const [isOpensetsend, setIsOpensetsend] = useState(false);\r\n \r\n  const togglePopupsetsend = () => {\r\n    setIsOpensetsend(false);\r\n\r\n    //window.location.reload(false)\r\n    \r\n  }\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [isOpen, setIsOpen] = useState(false);//update prize\r\n \r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n\r\n    //window.location.reload(false)\r\n    \r\n  }\r\n  const [isOpen2, setIsOpen2] = useState(false);\r\n \r\n  const togglePopup2 = () => {\r\n    setIsOpen2(false);\r\n    window.location.reload(false)\r\n    \r\n  }\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\nconst[getIm,setgetIm]=useState([]);\r\n\r\nlet btn;\r\nvar accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        // btn.innerHTML = \"CONNECTED\"\r\n        btn.innerHTML = accounts[0];\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n  //new function start\r\n\r\n  const getImgpa = async() =>{\r\n\r\n    setLoading(true);\r\n    const accounts = await web3.eth.getAccounts();\r\n    let req = [];\r\n    let req2 = [];\r\n    //let kreq =[];\r\n    firebase.database().ref(\"imageref\").child(accounts[0]).on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          console.log(\"keycheck\",d.key)\r\n          req.push(d.val())\r\n          //req.push(d.key)\r\n          \r\n        });\r\n        \r\n      }\r\n\r\n    });\r\n\r\n    setgetImgreff(req);\r\n\r\n    //change here\r\n\r\n    getImgreff.map((a)=>{\r\n      \r\n    req2.push({\r\n\r\n          addAddress:a.ownerAddress,\r\n          addPrices:a.priceSet,\r\n          addcAdd:a.cAddress,\r\n          addIds:a.id,\r\n          addImgs:a.imageUrl,\r\n          addKeyI:a.keyId,\r\n        addName:a.userName,\r\n      addSymbol:a.userSymbol,\r\n    addIpfs:a.ipfsUrl,\r\n    addsold:a.soldd,\r\n    addextra1:a.extra1,\r\n    addPoAddress:a.previousoaddress,\r\n    adddatesets:a.dateset,\r\n    addwhois:a.whois    \r\n  })\r\n    })\r\n\r\n    setgetIm(req2)\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n  //end here\r\n\r\n\r\n\r\n//  const newget = async()=>{\r\n//   const accounts = await web3.eth.getAccounts();\r\n//   let n =[]\r\n//   getAddressDb.forEach(async(add)=>{\r\n//     let poda = add\r\n//         let getaaaa=new web3.eth.Contract(abi,poda);\r\n        \r\n        \r\n//         let printgeta=await getaaaa.methods.tokensOfOwner(accounts[0]).call();\r\n\r\n//         printgeta.forEach((p=>{\r\n//         n.push(p)\r\n// }))\r\n//       setnames(n);    \r\n      \r\n//     })\r\n//  }\r\n\r\n//   const s =  async ()=>{\r\n//   const accounts = await web3.eth.getAccounts();\r\n\r\n//   let after = []\r\n//    getAddressDb.forEach(async(a)=>{\r\n//        let poda = a\r\n//         let getaaaa=new web3.eth.Contract(abi,poda);\r\n//         names.forEach(async (n)=>{\r\n//           console.log(`n`, n)\r\n//           // console.log(`object`,n, await getaaaa.methods.tokenURI(n).call())     }) \r\n//           after.push({\r\n//             add:poda,\r\n//             addId:n,\r\n//             addImgSrc:await getaaaa.methods.tokenURI(n).call()})\r\n//    })\r\n//   })\r\n\r\n//    console.log(`after`, after)\r\n// setAfternames(after)\r\n//  }\r\n\r\n\r\n   \r\nconst setprice =async ()=>{\r\n\r\n  setIsOpensetFirst(false)\r\n\r\n             var isd = a.addIds;//a\r\n             console.log(\"targetid\",isd)\r\n\r\n            console.log(`a`, a)\r\n            let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n            const accounts = await  web3.eth.getAccounts();\r\n            console.log(\"checking\")\r\n            \r\n\r\n            let price=tprice;\r\n\r\n            if(accounts[0] === a.addAddress)\r\n            {\r\n\r\n              await getaaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n           // salepage.settokenstate();\r\n            await getaaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n            const priceamount = await getaaaa.methods.items(isd).call();\r\n            console.log(priceamount.price)\r\n            // await getaaaa.methods.setApprovalForAll(a.addcAdd,\"true\").send({from:accounts[0]})\r\n            await getaaaa.methods.approve(a.addcAdd,a.addIds).send({from:accounts[0]})\r\n\r\n            let refsellers=fireDb.database().ref(`sellerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n            const keysellers = refsellers.push().key;\r\n          \r\n          \r\n            refsellers.child(keysellers).set({\r\n              id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n              soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n            })\r\n          \r\n          \r\n            \r\nfireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI).update({\r\n              id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n              soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n});\r\nfireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI).set({\r\n              id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n              soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n}).then(()=> {\r\n  setTprice(\"\");\r\n  //setIsOpensetFirst(false);\r\n  setIsOpen(true);\r\n });  \r\n\r\n\r\n}\r\nelse{\r\nalert(\"Your are not owner so you does not update or set prizes......\")\r\n}\r\n}\r\n\r\nconst send=async()=>{\r\n\r\n  setIsOpensetsend(false)\r\n\r\n  let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n  const accounts = await  web3.eth.getAccounts();\r\n\r\n  let toaddressget=tsAddress;\r\n  \r\n\r\n  if(toaddressget === null){\r\n\r\n    alert(\"please enter address\")\r\n\r\n  }\r\n  else if(toaddressget === accounts[0])\r\n  {\r\n    alert(\"you are entered owner address so you does not send this address\")\r\n\r\n  }else{\r\n\r\n    await getaaaa.methods.safeTransferFrom(accounts[0],toaddressget,a.addIds).send({\r\n      from:accounts[0]\r\n    });\r\n  \r\n    console.log(\"checkinga\",a.addOwnerAddress)\r\n\r\n\r\n    let refsellers=fireDb.database().ref(`buyerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n    const keysellers = refsellers.push().key;\r\n  \r\n  \r\n    refsellers.child(keysellers).set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n      soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Buyers'\r\n    })\r\n  \r\n    \r\n    \r\n      fireDb.database().ref(`imageref/${toaddressget}`).child(a.addKeyI).update({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\",addPoAddress:accounts[0],\r\n        datesets:new Date().toDateString(),whois:'Buyers'\r\n      })\r\n\r\n\r\n      fireDb.database().ref('imageref').child(accounts[0]).child(a.addKeyI).remove().then(()=> {\r\n        settsAddress(\"\")\r\n        setIsOpen2(true);\r\n        \r\n       });\r\n\r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n//update prize\r\n\r\nconst setprices =async ()=>{\r\n\r\n\r\nvar isd = a.addIds;//a\r\nconsole.log(\"targetid\",isd)\r\nconsole.log(`a`, a)\r\nconst accounts = await  web3.eth.getAccounts();\r\nconsole.log(\"checking\")\r\nlet price=tprice;\r\nif(price !== '')\r\n {\r\n\r\n  let refsellers=fireDb.database().ref(`sellerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n  const keysellers = refsellers.push().key;\r\n\r\n\r\n  refsellers.child(keysellers).set({\r\n    id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n    soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n  })\r\n\r\n\r\n  \r\n    \r\n\r\n    // refsellers.child(a.addKeyI).set({\r\n    //         id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n    //         ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Sellers'});\r\n\r\n\r\n   fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI).update({\r\n     id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n     soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n});\r\n\r\n  fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI).set({\r\n     id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n     soldd:\"\",extra1:\"readytosold\",datesets:new Date().toDateString(),whois:'Sellers'\r\n   \r\n   });\r\n\r\n   //previousoaddress:a.addOwnerAddress\r\n\r\n   fireDb.database().ref(`imagerefexplore/${a.addPoAddress}`).child(a.addKeyI).remove().then(()=> {\r\n     setTprice(\"\");\r\n     setIsOpenset(false);\r\n     setIsOpen(true);\r\n    });  \r\n  }\r\n}\r\n\r\nreturn (    \r\n    \r\n  <>\r\n\r\n    <div>\r\n\r\n<div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n<div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n  \r\n\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n<br></br>\r\n<br></br>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n{/* {isLoading ? <div><h4>Fetching........</h4>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '} */}\r\n\r\n\r\n{getIm.length === 0 ? null : \r\n<div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap',marginBottom:'10px'}}>\r\n{getIm.map((a)=>{\r\n  console.log(\"getas\", a.extra1)\r\n\r\n  // if(a.addPrices === ''){\r\n  return (\r\n    <div style={{backgroundColor:'black',height:'350px',width:'300px',marginLeft:'60px',marginBottom:'15px'}}>\r\n\r\n      {/* onClick={() => alert(a.addImgs)} */}\r\n\r\n\r\n\r\n      \r\n      <div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n\r\n        <center>\r\n\r\n  <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}}    alt={\"\"} />\r\n\r\n  {/* </Link> */}\r\n\r\n\r\n  {' '}\r\n  <br></br>\r\n  \r\n  <h6 style={{color:'white'}}>Name : {a.addName}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addSymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    <h6 style={{color:'white'}}>address: {a.addAddress}</h6>\r\n    \r\n\r\n    {/* <button onClick={()=>setprice(a)} style={{width:'80px',height:'43px'}} >SetPrice</button>   */}\r\n  {/* <h4>Added to sale </h4> */}\r\n  {a.addPrices ===''?\r\n  <button onClick={()=>{\r\n    setSelectImage(a)\r\n    setIsOpensetFirst(true)\r\n  }} style={{width:'80px',height:'43px'}} >SetPrice</button>  \r\n\r\n  \r\n  :\r\n<>\r\n  <button onClick={()=>{\r\n      setSelectImage(a)\r\n      setIsOpenset(true)\r\n    }}  >UpdatePrice and sell</button>  \r\n\r\n  {' '}\r\n  \r\n  {/* <button onClick={()=>send(a)} style={{width:'80px',height:'43px'}}>Send</button> */}\r\n\r\n  <button onClick={()=>\r\n    {setSelectImage(a)\r\n    setIsOpensetsend(true)\r\n    }} style={{width:'80px',height:'43px'}}>Send</button>\r\n\r\n</>\r\n  }\r\n  </center>\r\n\r\n  </div>\r\n\r\n  {isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token prize has been updated successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopup}\r\n    />}\r\n  \r\n  </div>\r\n  )\r\n})}\r\n</div>\r\n}\r\n<br></br>\r\n<br></br>\r\n<br></br>\r\n<br></br>\r\n<br></br>\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n</Online>\r\n\r\n</div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n\r\n    {/* {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center> */}\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */}\r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n    <div>\r\n    \r\n    {isOpensetFirst && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Enter prize </p>\r\n        <center>\r\n      <input\r\n        type=\"text\"\r\n        value={tprice}\r\n        placeholder=\"Enter Prize\"\r\n        onChange={e => {\r\n          setTprice(e.target.value);\r\n        }}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n\r\n        <button type=\"button\" onClick={()=>{setprice()}}>submit</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopupset}\r\n    />}\r\n\r\n    {isOpenset && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Enter prize </p>\r\n        <center>\r\n      <input\r\n        type=\"text\"\r\n        value={tprice}\r\n        placeholder=\"Enter Prize\"\r\n        onChange={e => {\r\n          setTprice(e.target.value);\r\n        }}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n\r\n        <button type=\"button\" onClick={()=>{setprices()}}>submit</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopupset}\r\n    />}\r\n</div>\r\n\r\n\r\n\r\n<div>\r\n\r\n{isOpensetsend && <Popup content={<>\r\n    <b>Notification</b>\r\n    <p>Send Address </p>\r\n    <center>\r\n    <input\r\n        type=\"text\"\r\n        value={tsAddress}\r\n        placeholder=\"Enter Address\"\r\n        onChange={e => {\r\n          settsAddress(e.target.value);\r\n        }}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n\r\n        <button type=\"button\" onClick={()=>{send()}}>submit</button>\r\n    </center>\r\n  </>}\r\n   handleClose={togglePopupsetsend}\r\n/>}\r\n</div>\r\n\r\n{isOpen2 && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been sent successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup2}>close</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopup2}\r\n    />}\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n\r\n  <Footer/>\r\n  \r\n  </div>\r\n\r\n</>\r\n\r\n);\r\n}\r\n\r\nexport default Salepagecopy;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Printallimagecopy.js",["307","308","309"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Myitem from \"./Myitem\";\r\nimport getaaa from \"./abinft\";\r\n\r\n\r\nfunction Printallimagecopy() {\r\n \r\n\r\n  const[afternames,setAfternames]=useState([]);\r\n  useEffect(()=>{onSubmitNFT()},[])\r\n      const onSubmitNFT = async () => {\r\n      console.log(\"waiting for pic url\");\r\n     // event.preventDefault();    \r\n        var names =[];\r\n        var ima =[];\r\n        var p =[];\r\n    console.log(\"geta\"+getaaa);\r\n   \r\n    //event.preventDefault();\r\n    \r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    console.log(accounts[0])\r\n    \r\n    var items = await getaaa.methods.totalSupply().call();\r\n      console.log(items)\r\n      for(var i=0;i<items;i++){\r\n        var v = await getaaa.methods.tokenByIndex(i).call();\r\n        console.log(\"id\" + v)\r\n        \r\n       \r\n          names.push(v)\r\n         \r\n        \r\n      }\r\n      \r\n   \r\n    for( i=0;i<names.length;i++){\r\n      \r\n\r\n      ima.push(await getaaa.methods.tokenURI(names[i]).call());\r\n      console.log(names[i])\r\n      //var a=document.createElement(\"img\");\r\n     // var  b=document.createElement(\"button\")\r\n    //  var t = document.createElement(\"textbox\")\r\n\r\n      var  c=document.createElement(\"li\")\r\n\r\n      //var  d=document.createElement(\"li\")\r\n\r\n      var  ebr=document.createElement(\"br\")\r\n\r\n      //b.innerHTML= \"    \" + \" Buy Token\";\r\n    \r\n\r\n      // a.src=ima[i]\r\n      // a.id=ima[i]\r\n      // a.tid = names[i]\r\n      // a.width=200\r\n      // a.height=200\r\n     // t.innerText= \"Price\" + \"     \" +p[i]\r\n      \r\n      //b.src=ima[i]\r\n     // b.id=ima[i]\r\n      //b.tid = names[i]\r\n      c.style.listStyleType=\"none\"\r\n    //  c.append(a)\r\n      //c.append(t)\r\n     // c.append(ebr)\r\n      //c.append(b)\r\n      console.log(\"wait for displaying images\")\r\n  document.getElementById(\"prag\").append(c)\r\n\r\n//  document.getElementById(\"prag\").append(ebr)\r\n\r\n\r\n//    document.getElementById(\"prag\").append(d)\r\n\r\n      document.getElementById(\"ram\").append(c)\r\n      //b.onclick = async(event) =>{\r\n        //var thing = event.target.tid;\r\n       // await getaaa.methods.buyThing(thing).send({from:accounts[0]});\r\n       //console.log(\"Token Purchased Id\" + thing)\r\n        \r\n     // }\r\n\r\n    }\r\n    setAfternames(ima)\r\n\r\n   \r\n    \r\n   \r\n}\r\n\r\n\r\n  \r\n\r\n  return (    \r\n    \r\n\r\n    <div className=\"App\">\r\n\r\n\r\n<h1>Buy images</h1>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Myitem\");\r\n                }}\r\n              >\r\n               Myitem\r\n              </button>\r\n<button\r\n\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/nft\");\r\n                }}>\r\n                Go Deploy Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/sendpage\");\r\n                }}\r\n              >\r\n                Go Transfer page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/tokencreate\");\r\n                }}>\r\n                Tokencreate Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/newpage\");\r\n                }}\r\n              >\r\n                Get Single Image Page\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Printallimage\");\r\n                }}\r\n              >\r\n                Print all Image Page\r\n              </button>\r\n\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepage\");\r\n                }}>\r\n                sale Page \r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Saleimagepage\");\r\n                }}>\r\n                Image for sale \r\n              </button>\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n<form onSubmit={onSubmitNFT} id=\"create-course-form\" >\r\n</form>\r\n\r\n{afternames.map((a)=>{\r\n        console.log(`a`, a)\r\n        return (\r\n          <div>\r\n            <img src={a} alt=\"\"  height =\"100px\" width=\"100px\"/><br />\r\n            \r\n            </div>\r\n            \r\n              \r\n              \r\n        )\r\n      })}\r\n<center>\r\n<br></br>\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Printallimagecopy;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Followingpage.js",["310","311","312","313","314","315","316"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\nimport web3 from './web3';\r\nimport { Router, Route, Switch ,Link} from \"react-router-dom\";\r\n\r\n// import Myitem from \"./Myitem\";\r\n// import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\n// import fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import firebase from \"firebase\";\r\n// import {abi} from './datas'\r\n// import Mypurchasepage from './Mypurchasepage'\r\n// import Explore from './Explore'\r\n// import Createandpurchasepage from './Createandpurchasepage'\r\n// import Receivedpage from './Receivedpage';\r\n\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\nimport Footer from './footer'\r\n\r\n\r\n\r\nfunction Followingpage() {\r\n\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        // btn.innerHTML = \"CONNECTED\"\r\n        btn.innerHTML = accounts[0];\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n  \r\n\r\n// const[getImgreff,setgetImgreff]=useState([]);\r\n\r\n// const[getIm,setgetIm]=useState([]);\r\n\r\n//   //temp start\r\n\r\n\r\n//   const getImgpa = async() =>{\r\n//     let req = [];\r\n//     let req2 = [];\r\n//     firebase.database().ref(\"imageref\").on(\"value\", (data) => {\r\n//       if (data) {\r\n//         data.forEach((d) => {\r\n//           req.push(d.val())\r\n          \r\n//         });\r\n        \r\n//       }\r\n\r\n//     });\r\n\r\n//     setgetImgreff(req)\r\n\r\n//       getImgreff.map((a)=>{\r\n//       console.log(`a`, a)\r\n    \r\n//       Object.keys(a).map((b)=>{\r\n    \r\n//         console.log(`bb`, b)\r\n//         console.log(`bbnext`, a[b].imageUrl)\r\n//         console.log(`bbaddess`,a[b].cAddress)\r\n//         console.log(`bbprice`,a[b].priceSet)\r\n//         console.log(`bbname`,a[b].userName)\r\n//         console.log(`bbsymbol`,a[b].userSymbol)\r\n//         console.log(`bbipfs`,a[b].ipfsUrl)\r\n//         console.log(`bboaddress`,a[b].owneraddress)\r\n        \r\n// //change here\r\n//         req2.push({\r\n//           //addAcc:\r\n//           addPrices:a[b].priceSet,\r\n//           addcAdd:a[b].cAddress,\r\n//           addIds:a[b].id,\r\n//           addImgs:a[b].imageUrl,\r\n//         addUname:a[b].userName,\r\n//       addUsymbol:a[b].userSymbol,\r\n//     addIpfs:a[b].ipfsUrl,\r\n//     addOwnerAddress:a[b].owneraddress})\r\n              \r\n//       })\r\n//     })\r\n    \r\n//     setgetIm(req2)\r\n    \r\n//     console.log(\"cfb\",req) \r\n\r\n//   }\r\n\r\n\r\n//   useEffect(()=>{getImgpa()},[])\r\n\r\n  \r\n// // const onSubmitNFTTs = async (event) => {\r\n\r\n// //   var ref=firebase.database().ref(\"contractaddress/\");\r\n\r\n// //         ref.on('value',function(data){\r\n\r\n// //             var register=data.val();\r\n\r\n// //             var key=Object.keys(register)\r\n\r\n// //             var length=key.length;\r\n\r\n// //             //console.log(\"getdataprag\",length)\r\n\r\n// //             for(var p=0;p<length;p++){\r\n\r\n// //                 var k2=key[p];\r\n\r\n// //                 var ref2=firebase.database().ref(\"contractaddress/\").child(k2);\r\n\r\n// //                 ref2.on('value',function(data2){\r\n\r\n// //                   let addressset =[];\r\n\r\n// //                     var register2=data2.val();\r\n\r\n// //                     var key2=Object.keys(register2)\r\n\r\n// //                     var length2=key2.length;\r\n\r\n// //                     console.log(\"loglength\",length2)\r\n\r\n// //                     for(var k=0;k<length2;k++){\r\n\r\n                      \r\n\r\n// //                       var keyss=key2[k]\r\n\r\n// //                       var leftside=register2[keyss];//getting\r\n\r\n// //                       console.log(\"lenfirst\",leftside)                  \r\n\r\n// //                       addressset.push(leftside)\r\n                      \r\n// //                     }            \r\n// //                     setGetAddressDb(addressset)\r\n                    \r\n// //                 })\r\n// //             }\r\n// //         });\r\n  \r\n// //         var names =[];\r\n// //   var ima =[];\r\n// //   var p =[];\r\n// //   var ps =[];\r\n\r\n\t\r\n// // \tfor(var ill=0;ill<getAddressDb.length;ill++){\r\n\r\n// //         //alert(\"stu \"+getAddressDb[ill])  \r\n    \r\n// //       var poda = getAddressDb[ill]//'0x5e0c8fe9af42c6e486e6cdf00891b6b003b59e1a'//stuset[i]\r\n\r\n// //       console.log(\"getadbss\",getAddressDb[ill]);\r\n\t\r\n// //     var getaaa=new web3.eth.Contract(abi,poda);\r\n\r\n  \r\n// // const accounts = await web3.eth.getAccounts();\r\n\r\n// // console.log(accounts[0])\r\n\r\n// //   var items = await getaaa.methods.totalSupply().call();\r\n// //   console.log(\"totalsup\",items)\r\n// //   for(var ikk=0;ikk<items;ikk++){\r\n// //   var v = await getaaa.methods.tokenByIndex(ikk).call();\r\n// //   console.log(\"id\" + v)\r\n// //   var s = await getaaa.methods.items(v).call();\r\n// //   console.log(\"ids\" + v)\r\n// //   var state = s.state;\r\n// //   console.log(\"idss\" + v)\r\n// //   if(state == 1){\r\n// //     names.push(v)\r\n// //     console.log(\"For Sale\" + v)\r\n// //     p.push(s.price)\r\n// //     ps.push(v)\r\n// //   }\r\n// //   console.log(\"idpush\" + p)\r\n// // }\r\n\r\n// // console.log(\"getlen\",names.length)\r\n\r\n// // for(var ijj=0;ijj<names.length;ijj++){\r\n\r\n// //   let cler=await getaaa.methods.tokenURI(names[ijj]).call();\r\n\r\n// //   if(cler !== ''){\r\n\r\n// //     ima.push({\r\n// //       add:poda,\r\n// //       addId: p[ijj],\r\n// //       addv:ps[ijj],\r\n// //       addsrc: await getaaa.methods.tokenURI(names[ijj]).call()\r\n// //     })\r\n    \r\n\r\n// //   }\r\n\r\n\r\n// // console.log(\"getnamea\",names[ijj])\r\n// // //var a=document.createElement(\"img\");\r\n// // //var  b=document.createElement(\"button\")\r\n// // var t = document.createElement(\"textbox\")\r\n\r\n// // //console.log(\"getima\",ima)\r\n\r\n// // //t.innerText= \"Price\" + \"     \" +p[ijj]\r\n\r\n// // //console.log(\"parea\",t.innerText)\r\n\r\n// // }\r\n// // //array store\r\n// // console.log(\"getima\",ima)\r\n\r\n// //   }\r\n\r\n// //   setAfternames(ima)\r\n\r\n// //   setnames(p)\r\n\r\n// // }\r\n\r\n// //useEffect(()=>{onSubmitNFTTs()},[])\r\n\r\n// //console.log(\"afterget\",afternames)\r\n// //button \r\n\r\n// const buynow= async(a) =>{\r\n\r\n\r\n//     let getaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n//     console.log(\"insidebutton\",a.addcAdd)\r\n//     console.log(\"insidebuttonid\",a.addPrices)\r\n\r\n//     const accounts = await web3.eth.getAccounts();\r\n  \r\n//     let thing = a.addIds;\r\n\r\n//     console.log(\"thingget\",a.addIds)\r\n\r\n//     console.log(\"ownerget\",a.addOwnerAddress)\r\n\r\n//     let s = await getaaa.methods.items(thing).call();\r\n\r\n//     console.log(\"sget\",s)\r\n\r\n//     let state = s.price;\r\n\r\n//     console.log(\"stateget\",a.addPrices)\r\n    \r\n//     //alert(state)\r\n//     await getaaa.methods.buyThing(thing).send({from:accounts[0], value: web3.utils.toWei(a.addPrices, 'ether')});\r\n//     console.log(\"Token Purchased Id\" + thing)\r\n\r\n  \r\n\r\n//     fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI).update({\r\n//       id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI\r\n    \r\n//     });\r\n\r\n//     fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n        \r\n   \r\n//   }  \r\n\r\n\r\n\r\n\r\n\r\n\r\n//   //temp end\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n\r\n      <div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n      <Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n      \r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n{/* \r\n    {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center>\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */} \r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n              {/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getImgpa}\r\n              >\r\n              \r\n              </button> */}\r\n\r\n\r\n\r\n              {/* {afternames.length === 0 ? null : \r\n<div style={{width:'800px',height:'70vh',backgroundColor:'blue',display:'flex',flexDirection:'column',flexWrap:'wrap'}}>\r\n{afternames.map((a)=>{\r\n  console.log(`a`, a)\r\n\r\n  if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n  return (\r\n    <div>\r\n\r\n  <img   src={a.addsrc}  style={{height:300,width:300}}     />\r\n  <br></br>\r\n  <h5>hello{a.addId}</h5>\r\n  <br></br>\r\n  <button onClick={()=>buynow(a)} >BuyNow</button>\r\n  \r\n  </div>\r\n  )\r\n\r\n})\r\n\r\n} */}\r\n\r\n\r\n\r\n\r\n{/* {name.map((b)=>{\r\n\r\nreturn (\r\n  <div>\r\n\r\n\r\n<h5>hello{b}</h5>\r\n</div>\r\n)\r\n\r\n})}\r\n */}\r\n\r\n\r\n  \r\n{/* </div>\r\n} */}\r\n\r\n\r\n\r\n{/* {getIm.length === 0 ? null :( \r\n<div style={{width:'800px',height:'70vh',backgroundColor:'skyblue',display:'flex',flexDirection:'column',flexWrap:'wrap'}}>\r\n{getIm.map((a)=>{\r\n  console.log(`a`, a)\r\n\r\n  // Object.keys(a).map((b)=>{\r\n\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)\r\n\r\n        \r\n  // })\r\n  //if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n\r\n\r\n  return (\r\n    <div style={{backgroundColor:'skyblue',height:'500px',width:'500px'}}>\r\n\r\n  <img   src={a.addImgs}  style={{height:300,width:300}}     />\r\n  \r\n  \r\n  {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n\r\n  {/* <h3>Name : {a.addUname}</h3>\r\n  \r\n  <h3>Symbol : {a.addUsymbol}</h3>\r\n  \r\n  <h3>price : {a.addPrices}</h3>\r\n  \r\n  \r\n  { <button onClick={()=>buynow(a)} >BuyNow</button> }\r\n\r\n  {' '}\r\n  \r\n  </div>\r\n  )\r\n\r\n})\r\n\r\n\r\n\r\n}\r\n</div>\r\n)\r\n}                     */} \r\n\r\n            {/* <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            \r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n            \r\n            \r\n          </Switch>\r\n        </Router> */}\r\n\r\n\r\n\r\n<div>\r\n\r\n\r\n<ul id=\"prabha\">\r\n\r\n</ul>\r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n\r\n<Footer/>\r\n\r\n</div>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Followingpage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Activitypage.js",["317"],"import React,{useEffect} from \"react\";\r\n// import history from \"./utils/history\";\r\n\r\nimport { Link} from \"react-router-dom\";\r\n\r\n// import Myitem from \"./Myitem\";\r\n// import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\n// import fireDb from \"./firebase\";\r\n// import Followingpage from \"./Followingpage\";\r\n//import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import Myitem from \"./Myitem\";\r\n// import Nft from \"./Nft\";\r\n// import Explore from \"./Explore\";\r\n// import Createandpurchasepage from './Createandpurchasepage'\r\n\r\nimport web3 from './web3';\r\n//import Receivedpage from './Receivedpage';\r\n\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\nimport Footer from './footer'\r\n\r\n\r\nfunction Activitypage() {\r\n\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        // btn.innerHTML = \"CONNECTED\"\r\n\r\n        btn.innerHTML = accounts[0];\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n\r\n      <div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n      <Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n\r\n    {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center>\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        </center>\r\n      </>}\r\n    //  handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            {/* <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            \r\n            <Route path=\"/Followingpage\">\r\n              <Followingpage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </Router>\r\n */}\r\n\r\n\r\n \r\n\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n\r\n  <Footer/>\r\n  \r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Activitypage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Howitworkpage.js",["318","319","320","321","322","323"],"import React,{useState,useEffect} from \"react\";\r\n//import history from \"./utils/history\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport { Router, Route, Switch,Link } from \"react-router-dom\";\r\n\r\n// import Myitem from \"./Myitem\";\r\n// import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\n// import fireDb from \"./firebase\";\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// //import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import Mypurchasepage from './Mypurchasepage'\r\n// import Explore from \"./Explore\";\r\n// import Createandpurchasepage from './Createandpurchasepage'\r\nimport web3 from './web3';\r\n//import Receivedpage from './Receivedpage';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\nimport Footer from './footer'\r\n\r\n\r\nfunction Howitworkpage() {\r\n\r\n    const handle = useFullScreenHandle();\r\n  const [name,setName] = useState(\"ramachandran\");\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n  const callBtn = () =>{\r\n\r\n    setName(\"Pragadesh\");\r\n\r\n    alert(name);\r\n\r\n    \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n<div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n<div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n{/* \r\n    {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n     handleClose={togglePopup}\r\n    />}\r\n */}\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<center>\r\n\r\n      <ReactPlayer style={{backgroundColor:'white',height:'500px',width:'1000px',marginBlock:'5px',border: '2px solid white',borderRadius:'5px',display:'flex'}}\r\n        url=\"https://www.youtube.com/watch?v=dA1lXZhWPoQ\"\r\n        \r\n/>\r\n\r\n<FullScreen handle={handle}>\r\n        Any fullscreen content here\r\n      </FullScreen>\r\n\r\n</center>\r\n\r\n<center>\r\n<div style={{backgroundColor:'white',height:'500px',width:'640px',marginBlock:'5px',border: '2px solid white',borderRadius:'5px',display:'flex'}}>\r\n<h1>document here...</h1>\r\n  </div>\r\n  <br></br>\r\n  <div style={{backgroundColor:'white',height:'500px',width:'640px',marginBlock:'5px',border: '2px solid white',borderRadius:'5px',display:'flex'}}>\r\n<h1>document here....</h1>\r\n  </div>\r\n  </center>\r\n\r\n  <div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n\r\n  <Footer/>\r\n  \r\n  </div>\r\n\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Howitworkpage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Communitypage.js",["324","325","326","327","328","329","330"],"import React,{useState,useEffect} from \"react\";\r\n//import history from \"./utils/history\";\r\n\r\nimport { Router, Route, Switch,Link } from \"react-router-dom\";\r\n\r\n// import Myitem from \"./Myitem\";\r\n// import Nft from \"./Nft\";\r\n// //import firebase from \"./firebase\";\r\n// import fireDb from \"./firebase\";\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n//import Communitypage from \"./Communitypage\";\r\n\r\n// import Mypurchasepage from './Mypurchasepage'\r\n// import Explore from './Explore'\r\n// import Createandpurchasepage from './Createandpurchasepage'\r\n\r\nimport web3 from './web3';\r\n//import Receivedpage from './Receivedpage';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\nimport Footer from './footer'\r\n\r\n\r\nfunction Communitypage() {\r\n\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        // btn.innerHTML = \"CONNECTED\"\r\n\r\n        btn.innerHTML = accounts[0];\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n\r\n      <div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n      \r\n\r\n\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1050px',marginLeft:'150px',marginBlock:'15px'}}>\r\n      <Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    {/* <Offline>\r\n\r\n\r\n    {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center>\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */}\r\n\r\n\r\n    {/* </Offline> */} \r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            {/* <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            \r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Followingpage\">\r\n              <Followingpage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n            \r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n\r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n */}\r\n\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px',position:'relative'}} >\r\n\r\n  <Footer/>\r\n  \r\n  </div> \r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Communitypage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Createpage.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Connectwalletpage.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Allcontractpage.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\n//import getaaa from \"./abinft\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Myitem from \"./Myitem\";\r\nimport Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\n\r\nimport Followingpage from \"./Followingpage\";\r\nimport Activitypage from \"./Activitypage\";\r\nimport Howitworkpage from \"./Howitworkpage\";\r\nimport Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport fireDb from \"./firebase\";\r\nimport Mypurchasepage from './Mypurchasepage'\r\n\r\nfunction Allcontractpage() {\r\n\r\n\r\n  var abcd;\r\n\r\n    //fb \r\n  var studentlist = [];\r\n\r\n  var stuset=[];\r\n\r\n\r\n  const [currentid, setCurrentid] = useState(\"\");\r\n\r\n \r\n  var names=[];\r\n const [afternames,setAfternames] = useState([]);\r\n const [name,setnames] = useState([]);\r\n const [tid,setId] = useState(\"\"); \r\n\r\n var [getAddressDb,setGetAddressDb]=useState([]);\r\n \r\n console.log(\"initialgetaddress\",getAddressDb)\r\n\r\n\r\n //useEffect(()=>{onGetdb()},[])\r\n\r\n\r\n const onget = async() =>{\r\n }\r\n\r\n      const onSubmitNFT = async (event) => {\r\n\r\n\r\n        var ref=firebase.database().ref(\"contractaddress/\");\r\n\r\n        ref.on('value',function(data){\r\n\r\n            var register=data.val();\r\n\r\n            var key=Object.keys(register)\r\n\r\n            var length=key.length;\r\n\r\n            //console.log(\"getdataprag\",length)\r\n\r\n            for(var p=0;p<length;p++){\r\n\r\n                var k2=key[p];\r\n\r\n                var ref2=firebase.database().ref(\"contractaddress/\").child(k2);\r\n\r\n                ref2.on('value',function(data2){\r\n\r\n                  let addressset =[];\r\n\r\n                    var register2=data2.val();\r\n\r\n                    var key2=Object.keys(register2)\r\n\r\n                    var length2=key2.length;\r\n\r\n                    console.log(\"loglength\",length2)\r\n\r\n                    for(var k=0;k<length2;k++){\r\n\r\n                      \r\n\r\n                      var keyss=key2[k]\r\n\r\n                      var leftside=register2[keyss];//getting\r\n\r\n                      console.log(\"lenfirst\",leftside)                  \r\n\r\n                      addressset.push(leftside)\r\n                      \r\n                    }            \r\n                    setGetAddressDb(addressset)\r\n                    \r\n                })\r\n            }\r\n        })\r\n    \r\n        \r\n        //event.preventDefault();\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    \r\n   //setGetAddressDb(address)\r\n\r\n   //alert(\"newgetadddb\",getAddressDb.length)\r\n\t\r\n\tfor(var i=0;i<getAddressDb.length;i++){\r\n\r\n        //alert(\"stu \"+getAddressDb[i])  \r\n    \r\n\r\n\r\n      \r\n      var poda = getAddressDb[i]//'0x5e0c8fe9af42c6e486e6cdf00891b6b003b59e1a'//stuset[i]\r\n    \r\n    const abi = [\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"_tokenURIs\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"giver\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"name\": \"values\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchTransfer\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenOfOwnerByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"burn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"destroyAndSend\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"index\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenByIndex\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"maker\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintWithTokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"buyThing\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"tokensOfOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"isOwner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"addMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"amountToMint\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"isForSale\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"batchMint\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"renounceMinter\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"baseUri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isMinter\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"auri\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"id\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"Owner\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getAllURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"items\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"price\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"state\",\r\n            \"type\": \"uint8\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"_tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"isEnabled\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenState\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"printitems\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"printitem\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"tokenIds\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"batchBurn\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"name\": \"setPrice\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"setTokenPrice\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ispushed\",\r\n        \"outputs\": [\r\n          {\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"fee\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"name\": \"creator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"error\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ErrorOut\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"recipients\",\r\n            \"type\": \"address[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchTransfered\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchBurned\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"ids\",\r\n            \"type\": \"uint256[]\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"BatchForSale\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"metaId\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"value\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Bought\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"Destroy\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"previousOwner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"newOwner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterAdded\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"account\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"MinterRemoved\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      }\r\n    ];\r\n\r\n\r\n    //alert(\"after abi\"+poda);\r\n\t\r\n    var getaaaa=new web3.eth.Contract(abi,poda);\r\n\r\n\r\n    var textprint=document.createElement(\"textbox\")\r\n\r\n    abcd=await getaaaa.methods.name().call();\r\n\r\n    //alert(\"getname\"+abcd)\r\n\r\n    var bcd=await getaaaa.methods.symbol().call();\r\n\r\n    //alert(\"getname\"+bcd)\r\n\r\n    var cde=await getaaaa.methods.totalSupply().call();\r\n\r\n    \r\n    textprint.id=abcd\r\n\r\n    //document.getElementById(\"prabha\").append(textprint)\r\n\r\n\r\n\r\n      const printgeta=await getaaaa.methods.tokensOfOwner(accounts[0]).call();\r\n\r\n      //alert(\"printgeta\"+printgeta.length)\r\n\r\n\r\n      //var get=printgeta.split(\",\")[0];\r\n\r\n      for(var k=0;k<printgeta.length;k++){\r\n\r\n        names.push(printgeta[k]);\r\n\r\n      }\r\n      setnames(names);    \r\n      //console.log(\"split owner address  \"+printgeta.length)\r\n\r\n      console.log(\"owner address\"+printgeta)\r\n\r\n\r\n      \r\n      var after =[];      \r\n      for(var li=0;li<printgeta.length;li++){\r\n\r\n        //event.preventDefault();\r\n\r\n        after.push(await getaaaa.methods.tokenURI(names[li]).call());\r\n\r\n        console.log(names[li])\r\n\r\n      }\r\n      setAfternames(after)\r\n  \r\n  console.log(after.length)\r\n\r\n  for(var lk=0 ;lk<after.length;lk++)\r\n  {\r\n      var a=document.createElement(\"img\")\r\n\r\n      var t= document.createElement(\"textbox\")\r\n\r\n      var  b=document.createElement(\"button\")\r\n\r\n      var  c=document.createElement(\"li\")\r\n\r\n      var  d=document.createElement(\"li\")\r\n\r\n      var  ebr=document.createElement(\"br\")\r\n\r\n      \r\n\r\n\r\n     // if(pa == 1){\r\n        t=\"Added for sale\";\r\n      //}\r\n     // else{\r\n        b.innerHTML=\"Buynow\";\r\n      //}\r\n\r\n\r\n        a.src=after[lk]\r\n        a.id=after[lk]\r\n        a.tid = names[lk]\r\n        a.width=400\r\n        a.height=400\r\n        \r\n        b.src=after[lk]\r\n        b.id=after[lk]\r\n        b.tid = names[lk]\r\n        c.style.listStyleType=\"none\"\r\n        c.append(a)\r\n        c.append(ebr)\r\n        const pricea = await getaaaa.methods.items(names[lk]).call(); \r\n      var pa = pricea.state;\r\n        if(pa == 1){\r\n          c.append(t)\r\n        }\r\n        else{\r\n          c.append(b)\r\n        }\r\n      \r\n        \r\n               \r\n\r\n        \r\n        \r\n\r\n        document.getElementById(\"prag\").append(c)\r\n\r\n        document.getElementById(\"prag\").append(ebr)\r\n\r\n\r\n        document.getElementById(\"prag\").append(d)\r\n\r\n        document.getElementById(\"ram\").append(c)\r\n\r\n\r\n        a.onclick = (event) =>{\r\n\r\n          console.log(event.target.id)\r\n        // pp.push(afternames.pop(event.target.tid))\r\n           \r\n          \r\n        }\r\n\r\n\r\n        b.onclick = async(event) =>{\r\n\r\n            var isd = event.target.tid;\r\n            console.log(event.target.tid)\r\n            const accounts = await  web3.eth.getAccounts();\r\n        await getaaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n           // salepage.settokenstate();\r\n            console.log(\"checking\")\r\n            var price = window.prompt(\"enter the price for your token\");\r\n            await getaaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n          const priceamount = await getaaaa.methods.items(isd).call();\r\n            console.log(priceamount.price)\r\n           \r\n            \r\n          }\r\n  \r\n  \r\n        \r\n        \r\n\r\n        \r\n    //console.log(afternames[i])\r\n\r\n      \r\n        }\r\n}\r\n}\r\nuseEffect(()=>{onSubmitNFT()},[])\r\n  \r\n\r\n  return (    \r\n\r\n    <div className=\"App\">\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Allcontractpage\");\r\n                }}>\r\n                Explore\r\n              </button>\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepagecopy\");\r\n                }}>\r\n                My items\r\n              </button>\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Followingpage\");\r\n                }}\r\n              >\r\n                Following\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Activitypage\");\r\n                }}>\r\n                Activity\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Howitworkpage\");\r\n                }}\r\n              >\r\n                How it work\r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Communitypage\");\r\n                }}\r\n              >\r\n                Community\r\n              </button>\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                     history.push(\"/Nft\");\r\n                }}\r\n              >\r\n              Create\r\n              </button>\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Mypurchasepage\");\r\n                }}>\r\n               Mypurchase\r\n              </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={onget}\r\n              >\r\n              Get db \r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={onSubmitNFT}\r\n              >\r\n              Get all img url\r\n              </button>\r\n\r\n\r\n\r\n\r\n      \r\n<center>\r\n<br></br>\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n</center>\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/Followingpage\">\r\n              <Followingpage />\r\n            </Route>\r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n\r\n\r\n\r\n        \r\n        <div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n<ul id=\"prabha\">\r\n\r\n</ul>\r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    \r\n\t  \r\n      </div>      \r\n  );\r\n}\r\n\r\nexport default Allcontractpage;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\data.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\datas.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Mypurchasepage.js",["351","352","353","354","355"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\nimport web3 from './web3';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Myitem from \"./Myitem\";\r\nimport Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\nimport Activitypage from \"./Activitypage\";\r\nimport Howitworkpage from \"./Howitworkpage\";\r\nimport Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport {abi} from './datas'\r\nimport Explore from './Explore'\r\n//import Mypurchasepage from './Mypurchasepage'\r\nimport Createandpurchasepage from './Createandpurchasepage'\r\nimport Receivedpage from './Receivedpage';\r\n\r\n\r\n\r\n\r\nfunction Mypurchasepage() {\r\n\r\n\r\n  const [pa,setPa]=useState();\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\n\r\nconst[getIm,setgetIm]=useState([]);\r\n\r\nconst [isLoading, setLoading] = useState(false)\r\n\r\n\r\n\r\nlet btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n\r\n\r\n  //temp start\r\n\r\n\r\n\r\n\r\n  const getImgpa = async() =>{\r\n\r\n    setLoading(true)\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    let req = [];\r\n    let req2 = [];\r\n    //let kreq =[];imagerefbuy//imagepurcre\r\n    firebase.database().ref(\"imageref\").child(accounts[0]).on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          console.log(\"keycheck\",d.key)\r\n          req.push(d.val())\r\n          //req.push(d.key)\r\n          \r\n        });\r\n        \r\n      }\r\n\r\n    });\r\n\r\n    setgetImgreff(req)\r\n\r\n    getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n    \r\n      //Object.keys(a).map((b)=>{\r\n    \r\n        console.log(`bba`, a)\r\n        console.log(`bbnexta`, a.imageUrl)\r\n        console.log(`bbaddessa`,a.cAddress)\r\n        console.log(`bbpricea`,a.priceSet)\r\n        console.log(`bbkeyid`,a.keyIds)\r\n        //console.log(`bbowner`,)\r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addPrices:a.priceSet,\r\n          addcAdd:a.cAddress,\r\n          addIds:a.id,\r\n          addImgs:a.imageUrl,\r\n          addKeyI:a.keyId,\r\n        addName:a.userName,\r\n      addSymbol:a.userSymbol,\r\n    addIpfs:a.ipfsUrl})\r\n              \r\n      //})\r\n    })\r\n\r\n\r\n    \r\n    setgetIm(req2)\r\n    \r\n    console.log(\"cfba\",req)\r\n\r\n    setPa(0)\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n\r\n  \r\n\r\n// const buynow= async(a) =>{\r\n\r\n\r\n//     let getaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n//     console.log(\"insidebutton\",a.addcAdd)\r\n//     console.log(\"insidebuttonid\",a.addPrices)\r\n\r\n//     const accounts = await web3.eth.getAccounts();\r\n  \r\n//     let thing = a.addIds;\r\n\r\n//     console.log(\"thingget\",a.addIds)\r\n\r\n//     console.log(\"ownerget\",a.addOwnerAddress)\r\n\r\n//     let s = await getaaa.methods.items(thing).call();\r\n\r\n//     console.log(\"sget\",s)\r\n\r\n//     let state = s.price;\r\n\r\n//     console.log(\"stateget\",a.addPrices)\r\n    \r\n//     //alert(state)\r\n//     await getaaa.methods.buyThing(thing).send({from:accounts[0], value: web3.utils.toWei(a.addPrices, 'ether')});\r\n//     console.log(\"Token Purchased Id\" + thing)\r\n\r\n  \r\n\r\n//     fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI).update({\r\n//       id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI\r\n    \r\n//     });\r\n\r\n//     fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n        \r\n   \r\n//   }  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  //temp end\r\n\r\n\r\n\r\n  const setprice =async (a,event)=>{\r\n\r\n    \r\n               var isd = a.addIds;//a\r\n               console.log(\"targetid\",isd)\r\n  \r\n              console.log(`a`, a)\r\n              // let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n              const accounts = await  web3.eth.getAccounts();\r\n              // await getaaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n             // salepage.settokenstate();\r\n              console.log(\"checking\")\r\n              let price = window.prompt(\"enter the price for your token\");\r\n  \r\n              if(price !== '')\r\n              {\r\n\r\n                fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI).update({\r\n                  id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n                  soldd:\"\",extra1:\"readytosold\"\r\n    \r\n                \r\n                });\r\n    \r\n    \r\n                fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI).set({\r\n                  id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n                  soldd:\"\",extra1:\"readytosold\"\r\n                \r\n                });\r\n    \r\n    \r\n                fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI).update({\r\n                  id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n                  soldd:\"\",extra1:\"readytosold\"\r\n    \r\n                \r\n                });\r\n\r\n                fireDb.database().ref(`imagerefsended/${accounts[0]}`).child(a.addKeyI).update({\r\n                  id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n                  soldd:\"\",extra1:\"readytosold\"\r\n            \r\n                \r\n                });\r\n\r\n                fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI).update({\r\n                  id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n                  soldd:\"\",extra1:\"readytosold\"\r\n            \r\n                \r\n                });\r\n            \r\n  \r\n\r\n              }\r\n\r\n              else{\r\n\r\n                alert(\"please updated prize\")\r\n\r\n              }\r\n\r\n  \r\n              window.location.reload(false) \r\n  \r\n  }\r\n  \r\n  const send=async(a)=>{\r\n  \r\n    //let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n    //const accounts = await  web3.eth.getAccounts();\r\n    //console.log(\"logd1\",accounts[0])\r\n    //console.log(\"logd2\",a.addKeyI)\r\n  \r\n  \r\n    //console.log(\"logdele\",ab)\r\n  \r\n    let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n    const accounts = await  web3.eth.getAccounts();\r\n  \r\n    let toaddressget = window.prompt(\"enter for your sender address\");\r\n  \r\n    if(toaddressget === null){\r\n  \r\n      alert(\"please enter address\")\r\n  \r\n    }\r\n    else{\r\n  \r\n  \r\n      \r\n    await getaaaa.methods.safeTransferFrom(accounts[0],toaddressget,a.addIds).send({\r\n      from:accounts[0]\r\n    });\r\n  \r\n    console.log(\"checkinga\",a.addOwnerAddress)\r\n  \r\n    // fireDb.database().ref(`imagerefbuy/${toaddressget}`).child(a.addKeyI).set({\r\n    //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n    //   userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget\r\n    // })\r\n  \r\n    // fireDb.database().ref(`imageref/${toaddressget}`).child(a.addKeyI).set({\r\n    //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n    //   userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget\r\n    // })\r\n\r\n\r\n\r\n      fireDb.database().ref(`imagerefsended/${toaddressget}`).child(a.addKeyI).set({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n      fireDb.database().ref(`imagerefexplore/${toaddressget}`).child(a.addKeyI).update({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n    fireDb.database().ref('imageref').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n  try{\r\n\r\n    fireDb.database().ref('imagerefbuy').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n\r\n    fireDb.database().ref('imagepurcre').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n  }catch(error)\r\n  {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  }  \r\n\r\n\r\n  alert(\"Your token has been sent successfully......\")\r\n\r\n  window.location.reload(false)\r\n  \r\n  }\r\n  \r\n  \r\n  \r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n\r\n      <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Explore\");\r\n                }}>\r\n                Explore\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepagecopy\");\r\n                }}>\r\n                My items\r\n              </button>\r\n\r\n              {\" \"}\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Followingpage\");\r\n                }}\r\n              >\r\n                Following\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Activitypage\");\r\n                }}>\r\n                Activity\r\n              </button>\r\n\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Howitworkpage\");\r\n                }}\r\n              >\r\n                How it work\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Communitypage\");\r\n                }}\r\n              >\r\n                Community\r\n              </button>\r\n\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                     history.push(\"/Nft\");\r\n                }}\r\n              >\r\n              Create\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n\r\n                // onClick={() => {\r\n                //   history.push(\"/Mypurchasepage\");\r\n                // }}\r\n                \r\n              >\r\n              Mypurchase\r\n              </button>\r\n\r\n\r\n              {\" \"}\r\n\r\n              {/* <button\r\n              \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Createandpurchasepage\");\r\n                }}\r\n                \r\n                >\r\n               Create and Purchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n              <button\r\n              \r\n              class=\"btn btn-info btn-block\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/Receivedpage\");\r\n              }}>\r\n             Received_Token\r\n            </button>\r\n            {\" \"}\r\n */}\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n{isLoading ? <div><h4>Fetching........</h4>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '}\r\n\r\n\r\n\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n              {/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getImgpa}\r\n              >\r\n\r\n                Refresh\r\n              \r\n              </button> */}\r\n\r\n\r\n\r\n              \r\n\r\n\r\n\r\n\r\n{getIm.length === 0 ? null :( \r\n  <div style={{backgroundColor:'skyblue',display:'flex',flexWrap:'wrap'}}>\r\n{getIm.map((a)=>{\r\n  console.log(`a`, a)\r\n\r\n  // Object.keys(a).map((b)=>{\r\n\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)\r\n\r\n        \r\n  // })\r\n//   if((a.addId !== ' ') && (a.addsrc !== ' ')){\r\n\r\n// }\r\n//   else{\r\n\r\n//     return(\r\n//     <div style={{backgroundColor:'skyblue',height:'500px',width:'500px'}}>\r\n\r\n//   <img   src={a.addImgs}  style={{height:300,width:300}}     />\r\n  \r\n  \r\n//   {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n\r\n//   <h3>Name : {a.addUname}</h3>\r\n  \r\n//   <h3>Symbol : {a.addUsymbol}</h3>\r\n  \r\n//   <h3>price : {a.addPrices}</h3>\r\n  \r\n  \r\n//   <h3>Already Solded</h3>\r\n\r\n//   {' '}\r\n  \r\n//   </div>\r\n//     )\r\n\r\n//   }\r\n\r\n//   return (\r\n//     <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n\r\n// <br></br>\r\n\r\n//   <img   src={a.addImgs}  style={{height:300,width:300}}  alt={\"\"}   />\r\n  \r\n  \r\n//   <br></br>\r\n//   <br></br>\r\n\r\n//   {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n\r\n//   <h3>Name : {a.addName}</h3>\r\n  \r\n//   <h3>Symbol : {a.addSymbol}</h3>\r\n  \r\n//   <h3>price : {a.addPrices}</h3>\r\n\r\n//   <button onClick={()=>setprice(a)} >Updateprize</button> \r\n  \r\n//   {' '}\r\n  \r\n//   <button onClick={()=>send(a)} >send</button> \r\n  \r\n//   </div>\r\n//   )\r\n\r\n  //above end\r\n\r\n  if(a.addPrices === ''){\r\n    return (\r\n      <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n  \r\n    <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n    {' '}\r\n    <br></br>\r\n    \r\n    <h3>Name : {a.addName}</h3>\r\n    \r\n    <h3>Symbol : {a.addSymbol}</h3>\r\n    \r\n    <h3>price : {a.addPrices}</h3>\r\n  \r\n  \r\n    {/* <h4>Added to sale </h4> */}\r\n    \r\n    {/* <button onClick={()=>setprice(a)} >UpdatePrice</button>   */}\r\n  \r\n    {' '}\r\n  \r\n    {/* <button onClick={()=>send(a)} >Send</button> */}\r\n    \r\n    </div>\r\n    )\r\n    \r\n    }else if(a.addImgSrc !== '' && a.addPrices !== ''){\r\n  \r\n  \r\n      return (\r\n        <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n    \r\n      <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n      {' '}\r\n      <br></br>\r\n      \r\n      <h3>Name : {a.addName}</h3>\r\n      \r\n      <h3>Symbol : {a.addSymbol}</h3>\r\n      \r\n      <h3>price : {a.addPrices}</h3>\r\n      \r\n      {/* <button  >SetPrice</button> */}\r\n  \r\n  <button onClick={()=>setprice(a)} >UpdatePrice</button>  \r\n  {' '}\r\n    \r\n      <button onClick={()=>send(a)} >Send</button>\r\n      \r\n      </div>\r\n      )\r\n  \r\n  \r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\n}\r\n</div>\r\n)\r\n}\r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            \r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n\r\n\r\n            \r\n            \r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n\r\n<div>\r\n\r\n\r\n<ul id=\"prabha\">\r\n\r\n</ul>\r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Mypurchasepage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Explore.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"import moment from 'moment';\r\nimport React, { useState,useEffect } from \"react\";\r\n//import history from \"./utils/history\";\r\nimport web3 from './web3';\r\n// Router, Route, Switch,\r\nimport { Link } from \"react-router-dom\";\r\n//import Myitem from \"./Myitem\";\r\n//import Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\n//import Activitypage from \"./Activitypage\";\r\n//import Howitworkpage from \"./Howitworkpage\";\r\n//import Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport {abi} from './datas'\r\n//import Mypurchasepage from './Mypurchasepage'\r\nimport {tra} from './trans'\r\n//import Createandpurchasepage from './Createandpurchasepage'\r\n//import Receivedpage from './Receivedpage';\r\nimport Popup from './Popup';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport Footer from './footer'\r\nimport Logo from './logo.svg';\r\n//import JSONDATA from './MOCK_DATA.json';\r\n// import SearchBar from './SearchBar';\r\n//import CountryList from './CountryList';\r\n\r\nimport \"./App.css\"\r\nimport DarkMode from \"./DarkMode\"\r\n\r\nconst Explore=({handleLogout})=> {\r\n\r\n  // const [initialData,setinitialDate]=useState('Sellers');\r\n\r\n  //\r\n  const [searchTerm,setSearchTerm]=useState('');\r\n  console.log('returnsearch',searchTerm)\r\n  // const [input, setInput] = useState('');\r\n  // const [countryListDefault, setCountryListDefault] = useState();\r\n  // const [countryList, setCountryList] = useState();\r\n  // const fetchData = async () => {\r\n  //   return await fetch('https://restcountries.eu/rest/v2/all')\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //        setCountryList(data) \r\n  //        setCountryListDefault(data)\r\n  //      });}\r\n  // const updateInput = async (input) => {\r\n  //    const filtered = countryListDefault.filter(country => {\r\n  //     return country.name.toLowerCase().includes(input.toLowerCase())\r\n  //    })\r\n  //    setInput(input);\r\n  //    setCountryList(filtered);\r\n  // }\r\n  // useEffect( () => {fetchData()},[]);\r\n//\r\n  const [selected, setSelected] = React.useState(\"Sellers\");\r\n\r\n  const [selecteds, setSelecteds] = React.useState(\"1\");\r\n\r\n  const changeSelectOptionHandler = (event) => {\r\n    setSelected(event.target.value);\r\n  };\r\n\r\n  const changeSelectOptionHandlers = (event) => {\r\n    setSelecteds(event.target.value);\r\n  };\r\n\r\n  // const [currentSymbol, setCurrentSymbol] = useState('Sellers')\r\n  // const changeFruit = (newFruit) => {\r\n  //   setCurrentSymbol(newFruit)\r\n  // }\r\n  // const [currentSymbols, setCurrentSymbols] = useState('1 day')\r\n  // const changeFruits = (newFruit) => {\r\n  //   setCurrentSymbols(newFruit)\r\n  // }\r\n\r\n  const [isOpenFeed, setIsOpenFeed] = useState(false); \r\n  const togglePopupFeed = () => {\r\n    setIsOpenFeed(false);\r\n    //window.location.reload(false)    \r\n  }\r\n  const [Feedbackc,setFeedbackc]=useState('');\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n  // window.location.reload(false)    \r\n  }\r\n    //fb   \r\n  //const [currentid, setCurrentid] = useState(\"\");\r\n //const [afternames,setAfternames] = useState([]);\r\n //const [name,setnames] = useState([]);\r\n //const [tid,setId] = useState(\"\"); \r\n//const [getAddressDb,setGetAddressDb]=useState([]);\r\n//const [getAddressDbs,setGetAddressDbs]=useState([]);\r\n//console.log(\"initialgetaddresss\",getAddressDbs)\r\n //console.log(\"initialgetaddress\",getAddressDb)\r\n //console.log(\"ipname\",name)\r\n\r\nconst[getImgbuyers,setgetImgbuyers]=useState([]);\r\nconst[getImbuyers,setgetImbuyers]=useState([]);//\r\nconsole.log(\"firb1\",getImgbuyers)\r\nconsole.log(\"firb2\",getImbuyers)\r\n\r\n\r\n\r\nconst[getImgsellers,setgetImgsellers]=useState([]);\r\nconst[getImsellers,setgetImsellers]=useState([]);//\r\nconsole.log(\"firs1\",getImgsellers)\r\nconsole.log(\"firs2\",getImsellers)\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\nconst[getIm,setgetIm]=useState([]);\r\nconsole.log(\"fir1\",getImgreff)\r\nconsole.log(\"fir2\",getIm)\r\n//temp start\r\nconst[Loader,setLoader]=useState(false);\r\nlet btn;\r\nvar accounts;\r\n\r\n//buyers start\r\n\r\nconst getbuyers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"buyerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgbuyers(req)\r\n\r\n  getImgbuyers.map((a)=>{\r\n    console.log(`abb`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImbuyers(req2)    \r\n  console.log(\"cfbb\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getbuyers()},[getImbuyers])\r\n\r\n\r\n\r\n\r\n\r\n//end buyers\r\n\r\n//sellers start\r\n\r\nconst getSellers = async() =>{\r\n  setLoader(true)\r\n  setLoading(true)\r\n  //window.location.reload(false)\r\n  let req = [];\r\n  let req2 = [];//imagerefexplore\r\n  firebase.database().ref(\"sellerssavedb\").on(\"value\", (data) => {\r\n    if (data) {\r\n      data.forEach((d) => {\r\n        req.push(d.val())          \r\n      });        \r\n    }\r\n  });\r\n  setgetImgsellers(req)\r\n\r\n  getImgsellers.map((a)=>{\r\n    console.log(`abs`, a)\r\n  \r\n    Object.keys(a).map((b)=>{\r\n    //  console.log(`bb`, b)\r\n      req2.push({\r\n        //addAcc:\r\n        addKeyI:a[b].keyId,\r\n        addPrices:a[b].priceSet,\r\n        addcAdd:a[b].cAddress,\r\n        addIds:a[b].id,\r\n        addImgs:a[b].imageUrl,\r\n      addUname:a[b].userName,\r\n    addUsymbol:a[b].userSymbol,\r\n  addIpfs:a[b].ipfsUrl,\r\n  addOwnerAddress:a[b].ownerAddress,\r\n  addsold:a[b].soldd,\r\n  addextra1:a[b].extra1,\r\n  adddate:a[b].datesets\r\n})              \r\n    })\r\n  })    \r\n  setgetImsellers(req2)    \r\n  console.log(\"cfbs\",req) \r\n  setLoader(false)\r\n  setLoading(false)\r\n}\r\nuseEffect(()=>{getSellers()},[getImsellers])\r\n\r\n\r\n\r\n//sellers stop\r\n\r\nconst connectmm = async () => {\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n    //if(getaddress !== \"\"){\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n    //}\r\n    //else{\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n      //alert(\"acc\"+accounts[0])\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n      if(accounts[0] !== \"\"){\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = accounts[0];\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  const getImgpa = async() =>{\r\n    setLoader(true)\r\n    setLoading(true)\r\n    //window.location.reload(false)\r\n    let req = [];\r\n    let req2 = [];//imagerefexplore\r\n    firebase.database().ref(\"imagerefexplore\").on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          req.push(d.val())          \r\n        });        \r\n      }\r\n    });\r\n    setgetImgreff(req)\r\n\r\n    getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n    \r\n      Object.keys(a).map((b)=>{\r\n      //  console.log(`bb`, b)\r\n      //   console.log(`bbnext`, a[b].imageUrl)\r\n      //   console.log(`bbaddess`,a[b].cAddress)\r\n      //   console.log(`bbprice`,a[b].priceSet)\r\n      //   console.log(`bbname`,a[b].userName)\r\n      //   console.log(`bbsymbol`,a[b].userSymbol)\r\n      //   console.log(`bbipfs`,a[b].ipfsUrl)\r\n      //   console.log(`bboaddress`,a[b].ownerAddress)      \r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addKeyI:a[b].keyId,\r\n          addPrices:a[b].priceSet,\r\n          addcAdd:a[b].cAddress,\r\n          addIds:a[b].id,\r\n          addImgs:a[b].imageUrl,\r\n        addUname:a[b].userName,\r\n      addUsymbol:a[b].userSymbol,\r\n    addIpfs:a[b].ipfsUrl,\r\n    addOwnerAddress:a[b].ownerAddress,\r\n    addsold:a[b].soldd,\r\n    addextra1:a[b].extra1\r\n  })              \r\n      })\r\n    })    \r\n    setgetIm(req2)    \r\n    console.log(\"cfb\",req) \r\n    setLoader(false)\r\n    setLoading(false)\r\n  }\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n\r\n  \r\nconst buynow= async(a) =>{\r\n\r\n//eth 0xED3c6A02F152CaeA0f6F86EFADF55e638543DED3\r\n  //bnb 0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18\r\n    let gettrans=new web3.eth.Contract(tra,'0x2cA1655cceB43D27027e6676E880D1Ce4e7d7d18');\r\n\r\n    //let gettrans=new web3.eth.Contract(tra,a.addOwnerAddress);\r\n\r\n    let getaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n\r\n    console.log(\"insidebutton\",a.addcAdd)\r\n    console.log(\"insidebuttonid\",a.addPrices)\r\n    console.log(\"insidebuttonids\",a.addOwnerAddress)\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n//tra start\r\n\r\n  //  await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n  //    from:accounts[0], \r\n  //    value: web3.utils.toWei(a.addPrices, 'ether')\r\n  //  });\r\n\r\n  if(a.addOwnerAddress === accounts[0])\r\n  {\r\n\r\n    alert(\"you are owner so you does not purchase this token\")\r\n\r\n  }\r\n  else{\r\n\r\n\r\n    await gettrans.methods.sendss(a.addOwnerAddress).send({\r\n      from: accounts[0],\r\n      //value:web3.utils.toWei(a.addPrices,'BNB')\r\n      value: web3.utils.toWei(a.addPrices, 'ether')//ether\r\n     }); \r\n     //alert(\"amount has been sent\")\r\n //end trans\r\n \r\n     //let thing = a.addIds;\r\n \r\n     console.log(\"thingget\",a.addIds)\r\n \r\n     console.log(\"ownerget\",a.addOwnerAddress)\r\n \r\n     console.log(\"keyget\",a.addKeyI)\r\n \r\n     //let s = await getaaa.methods.items(thing).call();\r\n \r\n     //console.log(\"sget\",s)\r\n \r\n     //let state = a.addPrices;\r\n \r\n     console.log(\"stateget\",a.addPrices)\r\n  \r\n     await getaaa.methods.transferFrom(a.addOwnerAddress,accounts[0],a.addIds).send({\r\n       from:accounts[0]\r\n     });\r\n\r\n    //  let refbuyers=fireDb.database().ref(`buyersdb/${accounts[0]}`).child(a.addKeyI);//ref1\r\n     //const keybuyers = refbuyers.push().key;\r\n\r\n   \r\n    let ref1=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);//ref1\r\n    let ref12=fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI);//ref12\r\n    //let ref12new=fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI);//ref12new\r\n    let ref2=fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI); \r\n     let ref23=fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI);\r\n     let ref233=fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI);\r\n     //const dbc = ref23.push().key;\r\n \r\n     console.log(\"ref2get\",ref2)\r\n     ref1.set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",previousoaddress:a.addOwnerAddress,datesets:new Date().toDateString(),whois:'Buyers'}) \r\n       ref2.set({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       ref23.set({\r\n         id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n         ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n         ref233.update({\r\n           id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n           ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n           ref12.update({\r\n            id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n            ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'})\r\n       fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n\r\n       let refsellers=fireDb.database().ref(`buyerssavedb/${accounts[0]}`);//.child(a.addKeyI);//ref1\r\n      const keysellers = refsellers.push().key;\r\n  \r\n  \r\n    refsellers.child(keysellers).set({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n      ipfsUrl:a.addIpfs,ownerAddress:accounts[0],soldd:\"solded\",extra1:\"buyed\",datesets:new Date().toDateString(),whois:'Buyers'\r\n    })\r\n       //fireDb.database().ref(`imagerefexplore/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       //fireDb.database().ref(`imagepurcre/${a.addOwnerAddress}`).child(a.addKeyI).remove();\r\n       // let ref3=fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI);\r\n       // ref3.set({\r\n       //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addUname,userSymbol:a.addUsymbol,\r\n       //   ipfsUrl:a.addIpfs,ownerAddress:accounts[0]}) \r\n     // fireDb.database().ref(`imagerefbuy/${a.addOwnerAddress}`).child(a.addKeyI).set({\r\n     //   id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI     \r\n     // });\r\n //    fireDb.database().ref(`imageref/${a.addOwnerAddress}`).child(a.addKeyI).remove();  \r\n //alert(\" Received successfully......\")\r\n setIsOpen(true);\r\n  } \r\n//window.location.reload(false)   \r\n}  \r\n  // const imgcall = (a) => {\r\n  //   alert(`Hello, ${a.keyId}`);\r\n  // };\r\n  //temp end\r\n  const feedbackset=()=>{\r\n    //alert(\"im here\"+Feedbackc)\r\n    //setFeedbackc\r\n  const mail = localStorage.getItem(\"mymailid\");\r\n  let reffeedback=fireDb.database().ref(`feedbacksave/`);\r\n  const db = reffeedback.push().key;\r\n  console.log(\"dbcheckappjs\",db)\r\n  reffeedback.child(db).set({id:db,profileimageUrl:\"\",name:\"\",emailid:mail,feedbacks:Feedbackc});\r\n  setFeedbackc('');\r\n  setIsOpenFeed(true);\r\n  }\r\n  \r\n  \r\n\r\n  const filterdata=()=>{\r\n\r\n    let getprice;\r\n    \r\n    if(selected === 'Sellers') {\r\n\r\n      if(selecteds === '1')\r\n      {\r\n          let data = getImsellers.filter((val)=>{\r\n          let date=moment()\r\n          let createddate=moment(val.adddate)\r\n          getprice = val.addPrices\r\n          for(let i=0;i<15;i++){\r\n\r\n          if(getprice >= 1)\r\n          // alert(\"price\"+getprice)\r\n          return date===createddate \r\n          }\r\n        })\r\n        return data;\r\n      }    \r\n        let data = getImsellers.filter((val)=>{\r\n          let date=moment().subtract(1,\"days\")\r\n          let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n          let createddate=moment(val.adddate)\r\n          getprice = val.addPrices\r\n          for(let i=0;i<15;i++){\r\n\r\n            if(getprice >= 1)\r\n          // alert(\"price2\"+getprice2)\r\n              return moment(createddate).isBetween(weekdate,date)\r\n\r\n          }\r\n           \r\n          \r\n        })\r\n\r\n        return data;    \r\n    }\r\n\r\n\r\n    if(selecteds === '1')\r\n    {\r\n      let data = getImbuyers.filter((val)=>{\r\n        let date=moment()\r\n        let createddate=moment(val.adddate)\r\n        getprice = val.addPrices\r\n        for(let i=0;i<15;i++){\r\n\r\n        if(getprice >= 1)\r\n        return date===createddate \r\n        }\r\n      })\r\n      return data;\r\n    }    \r\n      let data = getImbuyers.filter((val)=>{\r\n\r\n        let date=moment().subtract(1,\"days\")\r\n        let weekdate=moment().subtract(parseInt(selecteds),\"days\")\r\n        let createddate=moment(val.adddate)\r\n        getprice = val.addPrices\r\n\r\n        for(let i=0;i<15;i++){\r\n\r\n        if(getprice >= 2)\r\n        return moment(createddate).isBetween(weekdate,date)\r\n      \r\n    }\r\n  })\r\n      return data;    \r\n\r\n\r\n\r\n    // alert(\"price2\"+getprice)\r\n\r\n    //return getImbuyers;\r\n\r\n  }\r\n\r\n  const filterdatas=()=>{\r\n\r\n    if(searchTerm === '') return getIm\r\n    let data= getIm.filter((val)=>{\r\n      return val.addUname.toLowerCase().trim().includes(searchTerm.toLowerCase().trim())\r\n      \r\n    })\r\n    console.log('returndata',data)\r\n    return data;\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n      <div style={{backgroundColor:'white',height:'100px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n<div style={{marginLeft:'0px',height:'40px',width:'100px',color:'white'}}>\r\n\r\n      <img src={Logo} alt=\"Logo\" />\r\n\r\n      <div style={{marginLeft:'10px',marginTop:'',height:'100px',width:'100px'}}>\r\n    \r\n      {/* onClick={event=>{setSearchTerm(event.target.value)}} */}\r\n      {/* onChange={event => {setSearchTerm(event.target.value)}} */}\r\n      {/* value={searchTerm} */}\r\n      <input type=\"text\"  placeholder=\"Search...\"  onChange={event => {setSearchTerm(event.target.value)}}/>\r\n      {\r\n        searchTerm !== '' &&\r\n      <>\r\n      {filterdata().map((val,key)=>{\r\n        \r\n        return (\r\n        <div className='user' key={key}>\r\n          <h5 onClick={()=>setSearchTerm(val.title)} style={{cursor:'pointer'}}>{val.title}</h5>\r\n        </div>\r\n        )\r\n      })}\r\n      </>\r\n}\r\n</div>\r\n</div>\r\n\r\n      {/* <img style={{width:\"100px\",height:\"100px\"}} src=\"/logo.svg\" alt=\"\"/> */}\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1154px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n      <Link\r\n              to=\"/\">              \r\n              <button\r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n              {' '}\r\n            <Link\r\n              to=\"/explore\">             \r\n              <button              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"                \r\n              >\r\n                Explore\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/followingpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n              >\r\n               How it works\r\n              </button>\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // \r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n              {\" \"}\r\n              <button style={{whitespace: 'nowrap', \r\n  width:'200px', \r\n  overflow:'hidden',\r\n  textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n              {\" \"}\r\n{/* <h2>Welcome</h2> */}\r\n<button onClick={handleLogout}>Logout</button>\r\n{/* </nav> */}\r\n\r\n\r\n\r\n\r\n</div>\r\n</div>\r\n              <br></br>     \r\n<div>\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n\r\n    {/* {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center> */}\r\n        {/* <button type=\"button\" onClick={togglePopup}>close</button> */}\r\n        {/* </center> */}\r\n      {/* </>} */}\r\n    {/* //  handleClose={togglePopup} */}\r\n    {/* />} */}\r\n\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n{/* <center> */}\r\n\r\n{/* {isLoading ? <div>\r\n              <img style={{width:\"300px\",height:\"300px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '} */}\r\n\r\n{/* </center> */}\r\n<div  style={{backgroundColor:'white',marginBlock:'5px',display:'flex',width:'1500px'}}>\r\n<h4 style={{color:'skyblue'}}>Top &nbsp;\r\n\r\n      <select onChange={changeSelectOptionHandler}>\r\n            <option value='Sellers'>Sellers</option>\r\n            <option value='Buyers'>Buyers</option>\r\n          </select>\r\n\r\n      &nbsp;in&nbsp;\r\n      \r\n{/* style={{color:'white'}} */}\r\n\r\n      <select onChange={changeSelectOptionHandlers}>\r\n            <option value='1'>1 day</option>\r\n            <option value='8'>7 days</option>\r\n            <option value='32'>30 days</option>\r\n          </select>\r\n\r\n&nbsp;\r\n\r\n      {/* onClick={()=>{feedbackset()}} */}\r\n\r\n      {/* <button type=\"button\" onClick={()=>{filterSet()}}  style={{height:'5px',backgroundColor:'white',border:'none',color:'skyblue',fontSize:'15px'}}>Filter</button> */}\r\n\r\n\r\n      </h4>\r\n\r\n\r\n</div>    \r\n\r\n{getImsellers.length === 0 ? null :( \r\n  <div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap',marginBottom:'5px'}}>\r\n{filterdata().map((a)=>{  \r\n    return (\r\n      <div style={{backgroundColor:'black',height:'360px',width:'300px',marginLeft:'60px',marginTop:'30px',marginBottom:'10px'}}>\r\n\r\n<div style={{border: '2px solid white',borderRadius:'5px',marginBottom:'10px'}}>\r\n\r\n<center>\r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{/* onClick={()=>buynow(a)} */}\r\n{ <button  >BuyNow</button> }\r\n  \r\n    {' '}\r\n</>\r\n    ):(\r\n\r\n      <h4 style={{color:'white'}}>Already solded</h4>\r\n    )}\r\n</center>\r\n</div>\r\n\r\n</div>\r\n)})}\r\n  </div>\r\n)}\r\n  \r\n\r\n<div>\r\n\r\n{/* {Loader?\r\n<h1>Loading.....</h1>\r\n: */}\r\n<>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n{getIm.length === 0 ? null :( \r\n<div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap',marginBottom:'20px'}}>\r\n{/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n{filterdatas().map((a)=>{\r\n  console.log(`a`, a)\r\n  // Object.keys(a).map((b)=>{\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)        \r\n  // })\r\n  //if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n//  if(a.addsold === '')\r\n//  {\r\n    return (\r\n      \r\n      <div style={{backgroundColor:'black',height:'350px',width:'300px',marginLeft:'60px',marginBottom:'10px'}}>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n\r\n{/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n<center>\r\n  \r\n    <Link                  \r\n                  to={{   \r\n                    pathname: `/explore/${a.addKeyI}/${a.addOwnerAddress}`,\r\n                    //pathname: `/explore/${combine}`,\r\n                  }}\r\n                >\r\n    <img   src={a.addImgs}  style={{height:120,width:120,marginTop:'10px'}} alt=\"\"    />\r\n    \r\n    \r\n    </Link>\r\n    {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n  \r\n    <h6 style={{color:'white'}}>Name : {a.addUname}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>Symbol : {a.addUsymbol}</h6>\r\n    \r\n    <h6 style={{color:'white'}}>price : {a.addPrices}</h6>\r\n\r\n    {a.addsold === '' ? (\r\n<>\r\n{ <button onClick={()=>buynow(a)} >BuyNow</button> }\r\n\r\n\r\n  \r\n    {' '}\r\n</>\r\n\r\n    ):(\r\n\r\n      <h6 style={{color:'white'}}>Already solded</h6>\r\n\r\n\r\n    )}\r\n    \r\n    </center>\r\n\r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n</div>\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n    {isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token has been buyed successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopup}\r\n    />}\r\n\r\n    {/* </div> */}\r\n\r\n    </div>\r\n    )\r\n  })}\r\n</div>\r\n)}\r\n</>\r\n</div>                    \r\n  \r\n  <div style={{backgroundColor:'white',height:'200px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n  <Footer/>\r\n  <div>\r\n  <h4 style={{color:'black'}}>Get the latest Rarible updates</h4>\r\n&nbsp;\r\n  <input\r\n  placeholder='Your e-mail'\r\n  type='text'\r\n  name=\"Feedbackc\"\r\n  required\r\n  onChange={event => setFeedbackc( event.target.value)}\r\n  \r\n/>\r\n\r\n{' '}\r\n    <button type=\"button\" onClick={()=>{feedbackset()}} style={{height:'40px'}}>Submit</button>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'100px'}}>  \r\n\r\n<h4 style={{color:'black'}}>Rarible</h4>\r\n\r\n<Link\r\n              to=\"/explore\" style={{ textDecoration: 'none' }}><h4 style={{color:'black'}}>Explore</h4></Link>\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/howitworkpage\"><h4 style={{color:'black'}}>How it works</h4></Link>\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/nft\"><h4 style={{color:'black'}}>Create</h4></Link>\r\n<h4 style={{color:'black'}}>Support</h4>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'200px'}}>  \r\n\r\n\r\n<Link\r\nstyle={{ textDecoration: 'none' }}\r\n              to=\"/communitypage\"><h4 style={{color:'black'}}>Community</h4></Link>\r\n<h4 style={{color:'black'}}>RARI Token</h4>\r\n<h4 style={{color:'black'}}>Discussion</h4>\r\n<h4 style={{color:'black'}}>Voting</h4>\r\n<h4 style={{color:'black'}}>Suggest feature</h4>\r\n\r\n</div>\r\n\r\n<div style={{marginLeft:'250px'}}>  \r\n\r\n\r\n<DarkMode />\r\n\r\n{/* <h4 style={{color:'black'}}>Language</h4> */}\r\n</div>\r\n    &nbsp;\r\n  </div>\r\n\r\n  {isOpenFeed && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your Email has been sent successfully......</p>\r\n        <button type=\"button\" onClick={togglePopupFeed}>close</button>\r\n      </>}\r\n      // handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\nexport default Explore;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\trans.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Createandpurchasepage.js",["372","373","374","375","376"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\nimport web3 from './web3';\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Myitem from \"./Myitem\";\r\nimport Nft from \"./Nft\";\r\n//import firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\n//import Followingpage from \"./Followingpage\";\r\nimport Activitypage from \"./Activitypage\";\r\nimport Howitworkpage from \"./Howitworkpage\";\r\nimport Communitypage from \"./Communitypage\";\r\nimport firebase from \"firebase\";\r\nimport {abi} from './datas'\r\nimport Mypurchasepage from './Mypurchasepage'\r\nimport Explore from './Explore'\r\nimport {tra} from './trans'\r\nimport Receivedpage from './Receivedpage';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Createandpurchasepage() {\r\n\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  \r\n    //fb \r\n  \r\n  //const [currentid, setCurrentid] = useState(\"\");\r\n\r\n \r\n  \r\n //const [afternames,setAfternames] = useState([]);\r\n //const [name,setnames] = useState([]);\r\n //const [tid,setId] = useState(\"\"); \r\n\r\n //const [getAddressDb,setGetAddressDb]=useState([]);\r\n\r\n //const [getAddressDbs,setGetAddressDbs]=useState([]);\r\n\r\n \r\n //console.log(\"initialgetaddresss\",getAddressDbs)\r\n \r\n //console.log(\"initialgetaddress\",getAddressDb)\r\n //console.log(\"ipname\",name)\r\n\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\n\r\nconst[getIm,setgetIm]=useState([]);\r\n\r\n\r\nconsole.log(\"fir1\",getImgreff)\r\nconsole.log(\"fir2\",getIm)\r\n\r\n  //temp start\r\n\r\n\r\n\r\nconst[Loader,setLoader]=useState(false);\r\n\r\n\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n  \r\n\r\n\r\n  const getImgpa = async() =>{\r\n\r\n    setLoading(true);\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    let req = [];\r\n    let req2 = [];\r\n    //let kreq =[];\r\n    firebase.database().ref(\"imagepurcre\").child(accounts[0]).on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          console.log(\"keycheck\",d.key)\r\n          req.push(d.val())\r\n          //req.push(d.key)\r\n          \r\n        });\r\n\r\n\r\n        setgetImgreff(req)\r\n        \r\n      }\r\n\r\n      \r\n\r\n    });\r\n\r\n    \r\n\r\n      // eslint-disable-next-line array-callback-return\r\n      getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n    \r\n      //Object.keys(a).map((b)=>{\r\n    \r\n        console.log(`bba`, a)\r\n        console.log(`bbnexta`, a.imageUrl)\r\n        console.log(`bbaddessa`,a.cAddress)\r\n        console.log(`bbpricea`,a.priceSet)\r\n        console.log(`bbkeyid`,a.keyIds)\r\n        //console.log(`bbowner`,)\r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addPrices:a.priceSet,\r\n          addcAdd:a.cAddress,\r\n          addIds:a.id,\r\n          addImgs:a.imageUrl,\r\n          addKeyI:a.keyId,\r\n        addName:a.userName,\r\n      addSymbol:a.userSymbol,\r\n    addIpfs:a.ipfsUrl,\r\n    addsold:a.soldd,\r\n    addextra1:a.extra1\r\n  });\r\n              \r\n      //})\r\n    });\r\n\r\n\r\n    \r\n    setgetIm(req2)\r\n    \r\n    console.log(\"cfba\",req)\r\n\r\n    \r\n    //alert(\"thissss\")\r\n\r\n    //setPa(0)\r\n    setLoading(false);\r\n\r\n  \r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n\r\n  \r\n// const onSubmitNFTTs = async (event) => {\r\n\r\n//   var ref=firebase.database().ref(\"contractaddress/\");\r\n\r\n//         ref.on('value',function(data){\r\n\r\n//             var register=data.val();\r\n\r\n//             var key=Object.keys(register)\r\n\r\n//             var length=key.length;\r\n\r\n//             //console.log(\"getdataprag\",length)\r\n\r\n//             for(var p=0;p<length;p++){\r\n\r\n//                 var k2=key[p];\r\n\r\n//                 var ref2=firebase.database().ref(\"contractaddress/\").child(k2);\r\n\r\n//                 ref2.on('value',function(data2){\r\n\r\n//                   let addressset =[];\r\n\r\n//                     var register2=data2.val();\r\n\r\n//                     var key2=Object.keys(register2)\r\n\r\n//                     var length2=key2.length;\r\n\r\n//                     console.log(\"loglength\",length2)\r\n\r\n//                     for(var k=0;k<length2;k++){\r\n\r\n                      \r\n\r\n//                       var keyss=key2[k]\r\n\r\n//                       var leftside=register2[keyss];//getting\r\n\r\n//                       console.log(\"lenfirst\",leftside)                  \r\n\r\n//                       addressset.push(leftside)\r\n                      \r\n//                     }            \r\n//                     setGetAddressDb(addressset)\r\n                    \r\n//                 })\r\n//             }\r\n//         });\r\n  \r\n//         var names =[];\r\n//   var ima =[];\r\n//   var p =[];\r\n//   var ps =[];\r\n\r\n\t\r\n// \tfor(var ill=0;ill<getAddressDb.length;ill++){\r\n\r\n//         //alert(\"stu \"+getAddressDb[ill])  \r\n    \r\n//       var poda = getAddressDb[ill]//'0x5e0c8fe9af42c6e486e6cdf00891b6b003b59e1a'//stuset[i]\r\n\r\n//       console.log(\"getadbss\",getAddressDb[ill]);\r\n\t\r\n//     var getaaa=new web3.eth.Contract(abi,poda);\r\n\r\n  \r\n// const accounts = await web3.eth.getAccounts();\r\n\r\n// console.log(accounts[0])\r\n\r\n//   var items = await getaaa.methods.totalSupply().call();\r\n//   console.log(\"totalsup\",items)\r\n//   for(var ikk=0;ikk<items;ikk++){\r\n//   var v = await getaaa.methods.tokenByIndex(ikk).call();\r\n//   console.log(\"id\" + v)\r\n//   var s = await getaaa.methods.items(v).call();\r\n//   console.log(\"ids\" + v)\r\n//   var state = s.state;\r\n//   console.log(\"idss\" + v)\r\n//   if(state == 1){\r\n//     names.push(v)\r\n//     console.log(\"For Sale\" + v)\r\n//     p.push(s.price)\r\n//     ps.push(v)\r\n//   }\r\n//   console.log(\"idpush\" + p)\r\n// }\r\n\r\n// console.log(\"getlen\",names.length)\r\n\r\n// for(var ijj=0;ijj<names.length;ijj++){\r\n\r\n//   let cler=await getaaa.methods.tokenURI(names[ijj]).call();\r\n\r\n//   if(cler !== ''){\r\n\r\n//     ima.push({\r\n//       add:poda,\r\n//       addId: p[ijj],\r\n//       addv:ps[ijj],\r\n//       addsrc: await getaaa.methods.tokenURI(names[ijj]).call()\r\n//     })\r\n    \r\n\r\n//   }\r\n\r\n\r\n// console.log(\"getnamea\",names[ijj])\r\n// //var a=document.createElement(\"img\");\r\n// //var  b=document.createElement(\"button\")\r\n// var t = document.createElement(\"textbox\")\r\n\r\n// //console.log(\"getima\",ima)\r\n\r\n// //t.innerText= \"Price\" + \"     \" +p[ijj]\r\n\r\n// //console.log(\"parea\",t.innerText)\r\n\r\n// }\r\n// //array store\r\n// console.log(\"getima\",ima)\r\n\r\n//   }\r\n\r\n//   setAfternames(ima)\r\n\r\n//   setnames(p)\r\n\r\n// }\r\n\r\n//useEffect(()=>{onSubmitNFTTs()},[])\r\n\r\n//console.log(\"afterget\",afternames)\r\n//button \r\n\r\nconst send= async(a) =>{\r\n\r\n  let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n  const accounts = await  web3.eth.getAccounts();\r\n\r\n  let toaddressget = window.prompt(\"enter for your sender address\");\r\n\r\n  if(toaddressget === null){\r\n\r\n    alert(\"please enter address\")\r\n\r\n  }\r\n  else{\r\n\r\n\r\n    await getaaaa.methods.safeTransferFrom(accounts[0],toaddressget,a.addIds).send({\r\n      from:accounts[0]\r\n    });\r\n  \r\n      console.log(\"checkinga\",a.addOwnerAddress)\r\n  \r\n    \r\n\r\n      fireDb.database().ref(`imagerefsended/${toaddressget}`).child(a.addKeyI).set({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n      fireDb.database().ref(`imagerefexplore/${toaddressget}`).child(a.addKeyI).set({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n    fireDb.database().ref('imageref').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n  try{\r\n\r\n    fireDb.database().ref('imagerefbuy').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n    fireDb.database().ref('imagepurcre').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n    \r\n\r\n\r\n  }catch(error)\r\n  {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  }  \r\n\r\n\r\n  alert(\"Your token has been sent successfully......\")\r\n  \r\nwindow.location.reload(false)\r\n   \r\n  }  \r\n\r\n\r\n\r\n  const setprice =async (a)=>{\r\n\r\n    //let t= document.createElement(\"textbox\")\r\n  \r\n    //t=\"Added for sale\";\r\n    //b.innerHTML=\"Enable Sale\";\r\n  \r\n    var isd = a.addIds;//a\r\n    console.log(\"targetid\",isd)\r\n\r\n   console.log(`a`, a)\r\n   // let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n   const accounts = await  web3.eth.getAccounts();\r\n   // await getaaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n  // salepage.settokenstate();\r\n   console.log(\"checking\")\r\n   let price = window.prompt(\"enter the price for your token\");\r\n\r\n   if(price !== '')\r\n   {\r\n\r\n     fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI).update({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n\r\n     \r\n     });\r\n\r\n\r\n     fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI).set({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n     \r\n     });\r\n\r\n\r\n     fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI).update({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n\r\n     \r\n     });\r\n\r\n     fireDb.database().ref(`imagerefsended/${accounts[0]}`).child(a.addKeyI).update({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n      soldd:\"\",extra1:\"readytosold\"\r\n\r\n    \r\n    });\r\n\r\n    fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI).update({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n      soldd:\"\",extra1:\"readytosold\"\r\n\r\n    \r\n    });\r\n\r\n\r\n     //await getaaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n     //const priceamount = await getaaaa.methods.items(isd).call();\r\n     //console.log(priceamount.price)\r\n\r\n\r\n    //let pa = priceamount.state;\r\n    //setPa(priceamount.state)\r\n //  if(pa === 1){\r\n //    //c.append(t)\r\n //    console.log(\"checkcon\",\"Added for sale console\")\r\n\r\n\r\n\r\n //  }\r\n //  else{\r\n //    //c.append(b)\r\n //    console.log(\"checkcons\",\"not for sale console\")\r\n //  }\r\n\r\n   \r\n  window.location.reload(false)\r\n\r\n   }\r\n\r\n   else{\r\n\r\n     alert(\"please updated prize\")\r\n\r\n   }\r\n\r\n\r\n  \r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  //temp end\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n\r\n      <div class=\"display-4 mb-1\"></div>\r\n\r\n      <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Explore\");\r\n                }}>\r\n                Explore\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepagecopy\");\r\n                }}>\r\n                My items\r\n              </button>\r\n\r\n              {\" \"}\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Followingpage\");\r\n                }}\r\n              >\r\n                Following\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Activitypage\");\r\n                }}>\r\n                Activity\r\n              </button>\r\n\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Howitworkpage\");\r\n                }}\r\n              >\r\n                How it work\r\n              </button>\r\n\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Communitypage\");\r\n                }}\r\n              >\r\n                Community\r\n              </button>\r\n\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                     history.push(\"/Nft\");\r\n                }}\r\n              >\r\n              Create\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Mypurchasepage\");\r\n                }}>\r\n               Mypurchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                >\r\n               Create and Purchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              \r\n              class=\"btn btn-info btn-block\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/Receivedpage\");\r\n              }}>\r\n             Received_Token\r\n            </button>\r\n            {\" \"}\r\n\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n\r\n\r\n{/* <i class=\"fa fa-refresh\"></i>\r\n\r\n<button style={{size:24}}>Button <i class=\"fa fa-refresh\"></i></button> */}\r\n\r\n{/* <span style={{font-size:'100'}}>&#8634</span> */}\r\n{/* <p>I will display &#8634;</p> */}\r\n\r\n{/* <button onClick={() => }>Click to reload!</button> */}\r\n\r\n<br></br>\r\n\r\n\r\n{isLoading ? <div>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '}\r\n\r\n\r\n\r\n\r\n              {/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getImgpa}\r\n              >\r\n\r\n                Refresh\r\n              \r\n              </button>\r\n\r\n              {' '} */}\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n              {/* {afternames.length === 0 ? null : \r\n<div style={{width:'800px',height:'70vh',backgroundColor:'blue',display:'flex',flexDirection:'column',flexWrap:'wrap'}}>\r\n{afternames.map((a)=>{\r\n  console.log(`a`, a)\r\n\r\n  if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n  return (\r\n    <div>\r\n\r\n  <img   src={a.addsrc}  style={{height:300,width:300}}     />\r\n  <br></br>\r\n  <h5>hello{a.addId}</h5>\r\n  <br></br>\r\n  <button onClick={()=>buynow(a)} >BuyNow</button>\r\n  \r\n  </div>\r\n  )\r\n\r\n})\r\n\r\n} */}\r\n\r\n\r\n\r\n\r\n{/* {name.map((b)=>{\r\n\r\nreturn (\r\n  <div>\r\n\r\n\r\n<h5>hello{b}</h5>\r\n</div>\r\n)\r\n\r\n})}\r\n */}\r\n\r\n\r\n  \r\n{/* </div>\r\n} */}\r\n\r\n\r\n<div>\r\n\r\n{Loader?\r\n<h1>Loading.....</h1>\r\n:\r\n<>\r\n{getIm.length === 0 ? null :( \r\n<div style={{backgroundColor:'skyblue',display:'flex',flexWrap:'wrap'}}>\r\n{getIm.map((a)=>{\r\n  console.log(`a`, a)\r\n\r\n  // Object.keys(a).map((b)=>{\r\n\r\n  //   console.log(`b`, b)\r\n  //   console.log(`bnext`, a[b].imageUrl)\r\n\r\n        \r\n  // })\r\n  //if((a.addId !== ' ') && (a.addsrc !== ' '))\r\n\r\n\r\n  // return (\r\n  //   <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n\r\n  // <img   src={a.addImgs}  style={{height:250,width:250}} alt=\"\"    />\r\n  \r\n  \r\n\r\n  \r\n  // {/* <h5>hello{a[b].imageUrl}</h5> */}\r\n\r\n  // <h3>Name : {a.addName}</h3>\r\n  \r\n  // <h3>Symbol : {a.addSymbol}</h3>\r\n  \r\n  // <h3>price :{a.addPrices}</h3>\r\n\r\n  // { <button onClick={()=>setprice(a)} >updateprice</button> }\r\n\r\n  // {' '}\r\n\r\n  // <button onClick={()=>send(a)} >Send</button>\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n  // {' '}\r\n  \r\n  // </div>\r\n  // )\r\n\r\n  //above end\r\n\r\n  if(a.addPrices === ''){\r\n    return (\r\n      <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n  \r\n    <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n    {' '}\r\n    <br></br>\r\n    \r\n    <h3>Name : {a.addName}</h3>\r\n    \r\n    <h3>Symbol : {a.addSymbol}</h3>\r\n    \r\n    <h3>price : {a.addPrices}</h3>\r\n  \r\n  \r\n    {/* <h4>Added to sale </h4> */}\r\n    \r\n    <button onClick={()=>setprice(a)} >SetPrice</button>  \r\n  \r\n    {' '}\r\n  \r\n    {/* <button onClick={()=>send(a)} >Send</button> */}\r\n    \r\n    </div>\r\n    )\r\n    \r\n    }else if(a.addImgSrc !== '' && a.addPrices !== ''){\r\n  \r\n  \r\n      return (\r\n        <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n    \r\n      <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n      {' '}\r\n      <br></br>\r\n      \r\n      <h3>Name : {a.addName}</h3>\r\n      \r\n      <h3>Symbol : {a.addSymbol}</h3>\r\n      \r\n      <h3>price : {a.addPrices}</h3>\r\n      \r\n      {/* <button  >SetPrice</button> */}\r\n  \r\n    \r\n      <button onClick={()=>send(a)} >Send</button>\r\n      \r\n      </div>\r\n      )\r\n  \r\n  \r\n      \r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n}\r\n</div>\r\n)\r\n}\r\n</>\r\n}\r\n</div>                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n            \r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            \r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nft />\r\n            </Route>\r\n\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n\r\n\r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n            \r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n\r\n<div>\r\n\r\n\r\n<ul id=\"prabha\">\r\n\r\n</ul>\r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Createandpurchasepage;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Receivedpage.js",["377","378","379","380","381","382","383","384","385","386","387","388","389"],"import React, { useState,useEffect } from \"react\";\r\nimport history from \"./utils/history\";\r\n\r\n//import {useState} from 'react';\r\nimport web3 from './web3';\r\n\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nft from \"./Nft\";\r\nimport Sendpage from \"./Sendpage\";\r\nimport Newpage from \"./Newpage\";\r\nimport Tokencreate from \"./Tokencreate\";\r\nimport Printallimage from \"./Printallimage\";\r\n//import getaaa from \"./abinft\";\r\nimport Saleimagepage from \"./Saleimagepage\";\r\nimport Myitem from \"./Myitem\";\r\nimport firebase from \"./firebase\";\r\nimport fireDb from \"./firebase\";\r\nimport Allcontractpage from \"./Allcontractpage\";\r\nimport {abi} from './data'\r\nimport Mypurchasepage from './Mypurchasepage'\r\nimport Explore from './Explore'\r\nimport Createandpurchasepage from './Createandpurchasepage'\r\n\r\nimport Salepagecopy from \"./Salepagecopy\";\r\n\r\n\r\n// console.log(`abi`, abi)\r\n\r\n\r\nfunction Receivedpage() {\r\n\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n\r\n\r\nconst[getImgreff,setgetImgreff]=useState([]);\r\n\r\nconst[getIm,setgetIm]=useState([]);\r\n\r\n\r\n\r\n  var abcd;\r\n\r\n  \r\n  //var names=[];\r\n  const [afternames,setAfternames] = useState([]);\r\n  \r\n  console.log(\"afternamescheck\",afternames)\r\n  const [names,setnames] = useState([]);\r\n\r\n  // console.log(\"initialnames\",names)\r\n  \r\n  // const accounts = [];\r\n\r\n  \r\n  const [getAddressDb,setGetAddressDb]=useState([]);\r\n\r\n  const [pa,setPa]=useState();\r\n  // console.log(\"initialgetaddress\",getAddressDb)\r\n  \r\n\r\n  \r\n//  const getAdressbyAccount = async  ()=>{\r\n//   const accounts = await web3.eth.getAccounts();\r\n\r\n\r\n//     // console.log(\"getaddress0\",accounts[0])\r\n  \r\n//     // console.log(\"function called\");\r\n//    let address =[];\r\n//    let add=fireDb.database().ref(`contractaddress/${accounts[0]}`);\r\n//    console.log(\"addget\",add)\r\n//    fireDb.database().ref(`contractaddress/${accounts[0]}`).on(\"value\",(snapshot) =>{\r\n//      snapshot.forEach((s)=>{\r\n//        address.push(s.val());\r\n//      });\r\n     \r\n//    });\r\n\r\n//    setGetAddressDb(address)  \r\n//    //console.log(\"mani\",address)\r\n\r\n   \r\n\r\n   \r\n//  }\r\n\r\n  \r\n//   useEffect(()=>{\r\n// getAdressbyAccount()\r\n// setTimeout(()=>{\r\n\r\n//   newget()\r\n\r\n// },5000)\r\n// setTimeout(()=>{\r\n\r\n//   s()\r\n\r\n// },10000)\r\n//   },[])\r\n\r\n\r\n\r\nlet btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n  //new function start\r\n\r\n  const getImgpa = async() =>{\r\n\r\n\r\n    setLoading(true);\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n    let req = [];\r\n    let req2 = [];\r\n    //let kreq =[];\r\n    firebase.database().ref(\"imagerefsended\").child(accounts[0]).on(\"value\", (data) => {\r\n      if (data) {\r\n        data.forEach((d) => {\r\n          console.log(\"keycheck\",d.key)\r\n          req.push(d.val())\r\n          //req.push(d.key)\r\n          \r\n        });\r\n        \r\n      }\r\n\r\n    });\r\n\r\n    setgetImgreff(req)\r\n\r\n      getImgreff.map((a)=>{\r\n      console.log(`a`, a)\r\n    \r\n      //Object.keys(a).map((b)=>{\r\n    \r\n        console.log(`bba`, a)\r\n        console.log(`bbnexta`, a.imageUrl)\r\n        console.log(`bbaddessa`,a.cAddress)\r\n        console.log(`bbpricea`,a.priceSet)\r\n        console.log(`bbkeyid`,a.keyIds)\r\n        //console.log(`bbowner`,)\r\n//change here\r\n        req2.push({\r\n          //addAcc:\r\n          addPrices:a.priceSet,\r\n          addcAdd:a.cAddress,\r\n          addIds:a.id,\r\n          addImgs:a.imageUrl,\r\n          addKeyI:a.keyId,\r\n        addName:a.userName,\r\n      addSymbol:a.userSymbol,\r\n    addIpfs:a.ipfsUrl,\r\n    addsold:a.soldd,\r\n    addextra1:a.extra1})\r\n              \r\n      //})\r\n    })\r\n\r\n\r\n    \r\n    setgetIm(req2)\r\n    \r\n    console.log(\"cfba\",req)\r\n\r\n    setPa(0)\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n  useEffect(()=>{getImgpa()},[getIm])\r\n  //end here\r\n\r\n\r\n\r\n//  const newget = async()=>{\r\n//   const accounts = await web3.eth.getAccounts();\r\n//   let n =[]\r\n//   getAddressDb.forEach(async(add)=>{\r\n//     let poda = add\r\n//         let getaaaa=new web3.eth.Contract(abi,poda);\r\n        \r\n        \r\n//         let printgeta=await getaaaa.methods.tokensOfOwner(accounts[0]).call();\r\n\r\n//         printgeta.forEach((p=>{\r\n//         n.push(p)\r\n// }))\r\n//       setnames(n);    \r\n      \r\n//     })\r\n//  }\r\n\r\n//   const s =  async ()=>{\r\n//   const accounts = await web3.eth.getAccounts();\r\n\r\n//   let after = []\r\n//    getAddressDb.forEach(async(a)=>{\r\n//        let poda = a\r\n//         let getaaaa=new web3.eth.Contract(abi,poda);\r\n//         names.forEach(async (n)=>{\r\n//           console.log(`n`, n)\r\n//           // console.log(`object`,n, await getaaaa.methods.tokenURI(n).call())     }) \r\n//           after.push({\r\n//             add:poda,\r\n//             addId:n,\r\n//             addImgSrc:await getaaaa.methods.tokenURI(n).call()})\r\n//    })\r\n//   })\r\n\r\n//    console.log(`after`, after)\r\n// setAfternames(after)\r\n//  }\r\n\r\n\r\n   \r\nconst setprice =async (a)=>{\r\n\r\n  var isd = a.addIds;//a\r\n    console.log(\"targetid\",isd)\r\n\r\n   console.log(`a`, a)\r\n   // let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n   const accounts = await  web3.eth.getAccounts();\r\n   // await getaaaa.methods.setTokenState([isd],\"true\").send({from:accounts[0]});\r\n  // salepage.settokenstate();\r\n   console.log(\"checking\")\r\n   let price = window.prompt(\"enter the price for your token\");\r\n\r\n   if(price !== '')\r\n   {\r\n\r\n     fireDb.database().ref(`imageref/${accounts[0]}`).child(a.addKeyI).update({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n\r\n     \r\n     });\r\n\r\n\r\n     fireDb.database().ref(`imagerefexplore/${accounts[0]}`).child(a.addKeyI).set({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n     \r\n     });\r\n\r\n\r\n     fireDb.database().ref(`imagepurcre/${accounts[0]}`).child(a.addKeyI).update({\r\n       id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n       soldd:\"\",extra1:\"readytosold\"\r\n\r\n     \r\n     });\r\n\r\n     fireDb.database().ref(`imagerefsended/${accounts[0]}`).child(a.addKeyI).update({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n      soldd:\"\",extra1:\"readytosold\"\r\n\r\n    \r\n    });\r\n\r\n\r\n    fireDb.database().ref(`imagerefbuy/${accounts[0]}`).child(a.addKeyI).update({\r\n      id:a.addIds,imageUrl:a.addImgs,priceSet:price,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:accounts[0],\r\n      soldd:\"\",extra1:\"readytosold\"\r\n\r\n    \r\n    });\r\n\r\n     //await getaaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n     //const priceamount = await getaaaa.methods.items(isd).call();\r\n     //console.log(priceamount.price)\r\n\r\n\r\n    //let pa = priceamount.state;\r\n    //setPa(priceamount.state)\r\n //  if(pa === 1){\r\n //    //c.append(t)\r\n //    console.log(\"checkcon\",\"Added for sale console\")\r\n\r\n\r\n\r\n //  }\r\n //  else{\r\n //    //c.append(b)\r\n //    console.log(\"checkcons\",\"not for sale console\")\r\n //  }\r\n\r\n   \r\n  window.location.reload(false)\r\n\r\n   }\r\n\r\n   else{\r\n\r\n     alert(\"please updated prize\")\r\n\r\n   }\r\n\r\n\r\n}\r\n\r\nconst send=async(a)=>{\r\n\r\n  let getaaaa=new web3.eth.Contract(abi,a.addcAdd);\r\n  const accounts = await  web3.eth.getAccounts();\r\n\r\n  let toaddressget = window.prompt(\"enter for your sender address\");\r\n\r\n  if(toaddressget === null){\r\n\r\n    alert(\"please enter address\")\r\n\r\n  }\r\n  else{\r\n\r\n\r\n    await getaaaa.methods.safeTransferFrom(accounts[0],toaddressget,a.addIds).send({\r\n      from:accounts[0]\r\n    });\r\n  \r\n      console.log(\"checkinga\",a.addOwnerAddress)\r\n  \r\n    \r\n\r\n      fireDb.database().ref(`imagerefsended/${toaddressget}`).child(a.addKeyI).set({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n      fireDb.database().ref(`imagerefexplore/${toaddressget}`).child(a.addKeyI).set({\r\n        id:a.addIds,imageUrl:a.addImgs,priceSet:a.addPrices,cAddress:a.addcAdd,keyId:a.addKeyI,userName:a.addName,\r\n        userSymbol:a.addSymbol,ipfsUrl:a.addIpfs,ownerAddress:toaddressget,soldd:\"sended\",extra1:\"buyed\"\r\n      })\r\n\r\n\r\n    fireDb.database().ref('imageref').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n  try{\r\n\r\n    fireDb.database().ref('imagerefbuy').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n    fireDb.database().ref('imagepurcre').child(accounts[0]).child(a.addKeyI).remove();\r\n\r\n    \r\n\r\n\r\n  }catch(error)\r\n  {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  }  \r\n\r\n\r\n  alert(\"Your token has been sent successfully......\")\r\n  \r\nwindow.location.reload(false)\r\n  \r\n}\r\n\r\n\r\n  \r\n\r\n  return (    \r\n    \r\n\r\n    <div>\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n\r\n\r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Explore\");\r\n                }}>\r\n                Explore\r\n              </button>\r\n\r\n              {\" \"}\r\n      \r\n<button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Salepagecopy\");\r\n                }}>\r\n                My items\r\n              </button>\r\n              {\" \"}\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Followingpage\");\r\n                }}\r\n              >\r\n                Following\r\n              </button>\r\n              {\" \"}\r\n              <button \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Activitypage\");\r\n                }}>\r\n                Activity\r\n              </button>\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Howitworkpage\");\r\n                }}\r\n              >\r\n                How it work\r\n              </button>\r\n              {\" \"}\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Communitypage\");\r\n                }}\r\n              >\r\n                Community\r\n              </button>\r\n\r\n              {\" \"}\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                     history.push(\"/Nft\");\r\n                }}\r\n              >\r\n              Create\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Mypurchasepage\");\r\n                }}>\r\n               Mypurchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n              <button\r\n              \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Createandpurchasepage\");\r\n                }}\r\n                \r\n                >\r\n               Create and Purchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n              <button\r\n              \r\n              class=\"btn btn-info btn-block\"\r\n              type=\"button\"\r\n              >\r\n             Received_Token\r\n            </button>\r\n            {\" \"}\r\n\r\n\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n<br></br>\r\n\r\n\r\n{isLoading ? <div><h4>Fetching........</h4>\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"/4V0b.gif\" alt=\"\"/></div>:' '}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n               onClick={s}\r\n              >\r\n              \r\n              </button>\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={newget}\r\n              >\r\n              \r\n              </button> */}\r\n\r\n\r\n              {/* <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={getImgpa}\r\n              >\r\n              \r\n              Refresh\r\n              </button> */}\r\n{getIm.length === 0 ? null : \r\n<div style={{backgroundColor:'skyblue',display:'flex',flexWrap:'wrap'}}>\r\n{getIm.map((a)=>{\r\n  console.log(\"getas\", a.extra1)\r\n\r\n  if(a.addPrices === ''){\r\n  return (\r\n    <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n\r\n  <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n  {' '}\r\n  <br></br>\r\n  \r\n  <h3>Name : {a.addName}</h3>\r\n  \r\n  <h3>Symbol : {a.addSymbol}</h3>\r\n  \r\n  <h3>price : {a.addPrices}</h3>\r\n\r\n\r\n  {/* <h4>Added to sale </h4> */}\r\n  \r\n  <button onClick={()=>setprice(a)} >SetPrice</button>  \r\n\r\n  {' '}\r\n\r\n  {/* <button onClick={()=>send(a)} >Send</button> */}\r\n  \r\n  </div>\r\n  )\r\n  \r\n  }else if(a.addImgSrc !== '' && a.addPrices !== ''){\r\n\r\n\r\n    return (\r\n      <div style={{backgroundColor:'skyblue',height:'600px',width:'600px'}}>\r\n  \r\n    <img   src={a.addImgs}  style={{height:250,width:250}}    alt={\"\"} />\r\n    {' '}\r\n    <br></br>\r\n    \r\n    <h3>Name : {a.addName}</h3>\r\n    \r\n    <h3>Symbol : {a.addSymbol}</h3>\r\n    \r\n    <h3>price : {a.addPrices}</h3>\r\n    \r\n    {/* <button  >SetPrice</button> */}\r\n\r\n\r\n    { <button onClick={()=>setprice(a)} >updateprice</button> }\r\n\r\n  {' '}\r\n\r\n  \r\n    <button onClick={()=>send(a)} >Send</button>\r\n    \r\n    </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n\r\n   \r\n    //return (\r\n  //     <div>\r\n  \r\n  // <img   src={a.addImgs}  style={{height:250,width:250}}  alt={\"\"}   />\r\n  //   {''}\r\n  //   <br></br>\r\n  //   <h3>Name : {a.addName}</h3>\r\n    \r\n  //   <h3>Symbol : {a.addSymbol}</h3>\r\n    \r\n  //   <h3>price : {a.addPrices}</h3>\r\n    \r\n  //   <h3> Added for sale</h3>\r\n\r\n  //   <button onClick={()=>send(a)} >Send</button>\r\n    \r\n  //   </div>\r\n  //   )\r\n    \r\n  }\r\n})}\r\n</div>\r\n}\r\n\r\n\r\n      \r\n\r\n<br></br>\r\n\r\n\r\n\r\n\r\n\t      \r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n\r\n                    \r\n                    \r\n\r\n            <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\">Choose a route to go to</div>\r\n              \r\n            </Route>\r\n            \r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Nft />\r\n            </Route>\r\n            <Route path=\"/sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/newpage\">\r\n              <Newpage />\r\n            </Route>\r\n            <Route path=\"/printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n            <Route path=\"/Saleimagepage\">\r\n              <Saleimagepage />\r\n            </Route>\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n            \r\n            \r\n          </Switch>\r\n        </Router>\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n{/* <div style={{flexDirection:'column',width:'500px',flexWrap:'wrap'}}>\r\n\r\n<ul id=\"prabha\">\r\n\r\n</ul>\r\n\r\n\r\n<ul id=\"prag\">\r\n\r\n\r\n</ul>\r\n\r\n<ul id=\"ram\" >\r\n  \r\n</ul>\r\n\r\n    </div> */}\r\n\t  \r\n\r\n    </div>\r\n\r\n  );\r\n  \r\n}\r\n\r\nexport default Receivedpage;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Popup.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Component2.js",["390","391","392"],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Routes.js",["393","394","395","396","397"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nimport Activitypage from \"./Activitypage\";\r\nimport Howitworkpage from \"./Howitworkpage\";\r\nimport Communitypage from \"./Communitypage\";\r\nimport Mypurchasepage from './Mypurchasepage'\r\nimport Createandpurchasepage from './Createandpurchasepage'\r\nimport Receivedpage from './Receivedpage';\r\nimport Explore from './Explore';\r\n//import Popup from './src/Popup';\r\nimport Salepagecopy from \"./Salepagecopy\";\r\nimport Nft from \"./Nft\";\r\nimport App from \"./App\";\r\nimport DisplayData from \"./DisplayData\";\r\nimport Followingpage from \"./Followingpage\";\r\nimport Register from \"./Login/Register\";\r\nimport History from \"./History\";\r\nimport AdminRoute from \"./AdminRoute\";\r\nimport StartPage from \"./StartPage\";\r\n//import historys from \"./History\";\r\n\r\n\r\nconst Routes=()=>{\r\n\r\n    return(\r\n\r\n        <Router>\r\n        \r\n\r\n        <Switch>\r\n        {/* <Route path=\"/\" exact component={StartPage} /> */}\r\n        <Route path=\"/\" exact component={App} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n            <Route path=\"/explore\" exact component={Explore} />\r\n            <Route path=\"/explore/:key/:oaddress\" component={DisplayData} />\r\n            <Route path=\"/salepagecopy\" exact component={Salepagecopy} />\r\n              {/* <Route path=\"/salepagecopy/:address\" component={DisplayData} /> */}\r\n              <Route path=\"/communitypage\"  component={Communitypage} />\r\n              <Route path=\"/activitypage\" component={Activitypage} />\r\n              <Route path=\"/howitworkpage\"  component={Howitworkpage} />\r\n              <Route path=\"/followingpage\"  component={Followingpage} />\r\n              <Route path=\"/receivedpage\" component={Receivedpage} />\r\n              <Route path=\"/nft\" component={Nft} />\r\n              \r\n              \r\n        </Switch>\r\n\r\n        </Router>\r\n\r\n    );\r\n\r\n}\r\nexport default Routes;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\DisplayData.js",["398","399","400"],"import {useParams,Link} from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\nimport {abi} from './data'\r\nimport Popup from './Popup';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport axios from 'axios';\r\nimport Footer from './footer'\r\n\r\n\r\n\r\nconst DisplayData=()=>{\r\n\r\n  const {oaddress,key}=useParams()\r\n\r\n    //const {key}=useParams()\r\n\r\n\r\n    const[getIm,setgetIm]=useState([]);\r\n\r\n    console.log(\"getIII\",getIm)\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [bookss, setBookss] = useState(null);\r\n\r\n  //const apiURL = \"https://www.anapioficeandfire.com/api/books?pageSize=30\";\r\n\r\n  //0xdbb163b22e839a26d2a5011841cb4430019020f9\r\n\r\n  \r\n\r\n \r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n\r\n    //window.location.reload(false)\r\n    \r\n  }\r\n\r\n  const ownerDisplay= async (getting)=>{\r\n\r\n    const getcadd = getting;\r\n\r\n    //testnet using\r\n  //const apiURL = \"https://api.etherscan.io/api?module=account&action=tokennfttx&contractaddress=\"+getcadd+\"&page=1&offset=10&sort=asc&apikey=9EFYVV4BAJS2M3M3ADUFN8G8XTCTAMR7R9\";\r\n\r\n  //sample mainnet example\r\n  //0xdbb163b22e839a26d2a5011841cb4430019020f9\r\n  const apiURL = \"https://api.etherscan.io/api?module=account&action=tokennfttx&contractaddress=0xdbb163b22e839a26d2a5011841cb4430019020f9&page=1&offset=2&sort=asc&apikey=9EFYVV4BAJS2M3M3ADUFN8G8XTCTAMR7R9\";\r\n\r\n  //alert(apiURL);\r\n\r\n    axios.get(`${apiURL}`)\r\n        .then((response)=>{\r\n          const allNotes=response.data.result;\r\n          setBookss(allNotes)\r\n        }).catch(error => console.error(`Error: ${error}`));       \r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{ownerDisplay()},[bookss])  \r\n\r\n  console.log(\"getbbb\",bookss)\r\n\r\n\r\n  let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        // btn.innerHTML = \"CONNECTED\"\r\n\r\n        btn.innerHTML = accounts[0];\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n    \r\n\r\n    const getImgpa = async() =>{\r\n\r\n        //setLoader(true)\r\n    \r\n        //setLoading(true)\r\n    \r\n        //window.location.reload(false)\r\n        \r\n        firebase.database().ref(\"imagerefexplore\").child(oaddress).child(key).on(\"value\",(data)=>{\r\n\r\n            if (data) {\r\n\r\n              setgetIm(data.val())                  \r\n    }\r\n  });             \r\n    };\r\n  \r\n      useEffect(()=>{getImgpa()},[getIm])\r\n\r\n\r\n      const[getOwner,setGetOwner]=useState();\r\n\r\n      const[getMaker,setGetMaker]=useState();\r\n      \r\n\r\n      const imgcall = async(getss) => {\r\n\r\n\r\n        // const accounts = await  web3.eth.getAccounts();\r\n\r\n        //alert(getIm.cAddress+\"and \"+getIm.id)\r\n\r\n        let getsss=new web3.eth.Contract(abi,getIm.cAddress);\r\n\r\n\r\n\r\n        setGetOwner(await getsss.methods.ownerOf(getIm.id).call());\r\n\r\n        setGetMaker(await getsss.methods.maker().call());\r\n\r\n\r\n        setIsOpen(true);\r\n \r\n\r\n      };\r\n\r\n    \r\n\r\n\r\n\r\n    //console.log(\"addressget\",address.)\r\n\r\n    return(\r\n\r\n      <div>\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'70px',width:'1500px',marginBlock:'5px',display:'flex'}}>\r\n\r\n\r\n\r\n      <div style={{backgroundColor:'white',height:'43px',width:'1154px',marginLeft:'150px',marginBlock:'15px'}}>\r\n\r\n\r\n\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // \r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n      \r\n\r\n              <button\r\n              style={{whitespace: 'nowrap', \r\n              width:'200px', \r\n              overflow:'hidden',\r\n              textoverflow:'ellipsis'}}\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n              <br></br>\r\n\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              \r\n\r\n\r\n\r\n\r\n\r\n        {/* <div>\r\n\r\n\r\n        <h1>hellooooooooo</h1>\r\n\r\n        <h2>a{getIm.setPrice}</h2>\r\n\r\n        <h2>b{getIm.cAddress}</h2>\r\n\r\n        <h2>c{key}</h2>\r\n\r\n        </div> */}\r\n\r\n\r\n<div>\r\n\r\n<div>\r\n    <Online>\r\n    \r\n\r\n</Online>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>\r\n\r\n{/* \r\n    {<Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your are offline please check your internet connection......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n     handleClose={togglePopup}\r\n    />}\r\n */}\r\n\r\n    </Offline>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<center>\r\n\r\n\r\n<div>\r\n\r\n{getIm.length === 0 ? null :( \r\n  <div style={{backgroundColor:'black',display:'flex',flexWrap:'wrap'}}>\r\n    \r\n    \r\n      \r\n\r\n        <div style={{backgroundColor:'black',height:'600px',width:'300px'}}>\r\n\r\n        <div style={{border: '2px solid white',borderRadius:'5px'}}>\r\n  \r\n        {/* imgcall(getIm.id); */}\r\n    \r\n        <img   src={getIm.imageUrl}  style={{height:250,width:250,marginTop:'10px'}} alt=\"\"    onClick={() => {imgcall(getIm.id)}} />\r\n  \r\n    \r\n        <h5 style={{color:'white'}}>Name : {getIm.userName}</h5>\r\n      \r\n        <h5 style={{color:'white'}}>Symbol : {getIm.userSymbol}</h5>\r\n\r\n        <h5 style={{color:'white'}}>Token_id : {getIm.id}</h5>\r\n      \r\n        <h5 style={{color:'white'}}>price : {getIm.priceSet}</h5>\r\n\r\n        <h5 style={{color:'white'}}>Contract_Address : {getIm.cAddress}</h5>\r\n      \r\n        <h5 style={{color:'white'}}>Status : {getIm.extra1}</h5>\r\n      \r\n        <h5 style={{color:'white'}}>Owner_Address : {getIm.ownerAddress}</h5>\r\n\r\n      \r\n      \r\n      {/* { <button onClick={()=>buynow(a)} >BuyNow</button> } */}\r\n    \r\n      {' '}\r\n\r\n\r\n      <div>\r\n\r\n{ <div className=\"books\">\r\n<h5 style={{color:'white'}}>History of Owner_Address</h5>\r\n      {bookss &&\r\n        bookss.map((book) => {\r\n          \r\n          return (\r\n        \r\n            <div className=\"details\">\r\n              \r\n\r\n                <h5 style={{color:'white'}}> {book.to}</h5>\r\n                {/* <h5 style={{color:'white'}}> {book.tokenID}</h5> */}\r\n                {/* <p style={{color:'white'}}>🏘️: {book.country}</p>\r\n                <p style={{color:'white'}}>⏰: {cleanedDate}</p> */}\r\n              </div>\r\n          );\r\n        })}\r\n    </div>\r\n}\r\n\r\n</div>\r\n\r\n\r\n      </div>\r\n\r\n      </div>\r\n      \r\n  \r\n  </div>\r\n)}\r\n\r\n  </div>    \r\n\r\n</center>\r\n\r\n  {isOpen && <Popup content={<>\r\n  <div>\r\n        <b>Notification</b>\r\n        <h5>Owner_Address:-{getOwner}</h5>\r\n        <h5>Maker_Address:-{getMaker}</h5>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n        </div>\r\n      </>}\r\n       handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n\r\n\r\n<div style={{backgroundColor:'white',height:'150px',width:'1500px',marginBlock:'5px',display:'flex',marginLeft:'2px'}} >\r\n\r\n  <Footer/>\r\n  \r\n  </div>\r\n  \r\n\r\n\r\n  \r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default DisplayData;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Login\\Register.js",["401","402","403","404","405"],"import React, { useState,useEffect } from \"react\";\r\nimport {Link } from \"react-router-dom\";\r\n//import web3 from './web3';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from '../Popup';\r\n\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n//import firebaseConfig from \"../config\";\r\n//import firebase from \"./firebase\";\r\nimport firebaseConfig from '../firebase';\r\n\r\nconst Register = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);    \r\n\r\n  //firebase\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();    \r\n    const { email, password } = e.target.elements;\r\n    try {\r\n      // //signInWithEmailLink(email.value,password.value);\r\n      // //createUserWithEmailAndPassword(, password.value);      )\r\n      // firebaseConfig.auth().isSignInWithEmailLink(email.value);\r\n      // \r\n\r\n\r\n      alert(email.value)\r\n      firebaseConfig.auth().createUserWithEmailAndPassword(email.value,password.value) \r\n      .then(res => {\r\n        console.log(res)\r\n        alert(res)\r\n      })\r\n      .catch(err => {\r\n        alert(\"already signed in this email-id\")\r\n        console.error(err)\r\n      })\r\n\r\n      setCurrentUser(true);\r\n\r\n  \r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  if (currentUser) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Sign Up</h1>\r\n      <center>\r\n      <form onSubmit={handleSubmit}>\r\n      <br>\r\n        </br>\r\n        <label for=\"email\">Email                            :-</label>{' '}\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required/>\r\n        {/* <input type=\"number\" name=\"email\" placeholder=\"Number\" /> */}\r\n        <br></br>\r\n        <br></br>\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n        <br>\r\n        </br>\r\n        <br>\r\n        </br>\r\n        \r\n        <button type=\"submit\">Submit</button>\r\n        \r\n      </form>\r\n      </center>\r\n      </div>\r\n\r\n\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Logins.js",["406","407","408","409","410","411","412","413","414","415","416","417"],"import React,{useState} from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\nconst Logins=(props)=>{\r\n\r\n    \r\n\r\n\r\n    // const[SignInM,setSignInM]=useState();\r\n\r\n    const {email,setEmail,password,setPassword,handleLogin,handleSignup,\r\n        hasAccount,setHasAccount,emailError,passwordError,phoneAuth,phoneNumber,setPhoneNumber,passwordPhone,setpasswordPhone,phoneAuthLogin,hasAccountO,setHasAccountO}=props;\r\n\r\n\r\n        const responseGoogle=(response)=>{\r\n            \r\n            console.log(\"getlogin\",response);\r\n            console.log(\"getlogin\",response.gt.Rt);\r\n            //this place setEmail\r\n            \r\n        }\r\n\r\n\r\n        \r\n        \r\n    \r\n\r\n    return(\r\n\r\n        \r\n\r\n\r\n<section className=\"login\">\r\n    <center>\r\n<div className=\"loginContainer\" style={{backgroundColor:'white',height:'600px',width:'700px'}}>\r\n\r\n\r\n<center>\r\n<h4 style={{color:'black'}}>User Login/Signup</h4>\r\n</center>\r\n    \r\n\r\n{/* <div>\r\n<button type=\"button\" onClick={setSignInM(true)} style={{width:'210px'}}>sign-in with Email</button>\r\n<br></br>\r\n<br></br>\r\n<button type=\"button\" onClick={setSignInM(false)} style={{width:'210px'}}>sign-in with Mobile-Number</button> */}\r\n\r\n\r\n{/* </div> */}\r\n\r\n{/* {SignInM?( */}\r\n\r\n<center>\r\n{/* float:'left',marginLeft:'50px' */}\r\n<div style={{}}>\r\n\r\n    <br></br>\r\n    <br></br>\r\n    <br></br><br></br><br></br>\r\n    <br></br><br></br><br></br>\r\n\r\n\r\n    \r\n\r\n<label>Email-Id        </label>\r\n<input type=\"text\" placeholder=\"email-id\" autoFocus required value={email} onChange={(e)=>\r\nsetEmail(e.target.value)}/>\r\n<p className=\"errorMsg\">{emailError}</p>\r\n<label>Password  </label>\r\n<input type=\"password\" placeholder=\"password\" autoFocus required value={password} onChange={(e)=>\r\nsetPassword(e.target.value)}/>\r\n<p className=\"errorMsg\">{passwordError}</p>\r\n\r\n<div className=\"btnContainer\">\r\n\r\n    {\r\n        hasAccount ? (\r\n\r\n            <>\r\n            <button onClick={handleLogin}>Sign in</button>\r\n            <p>Don't have an account ? <span onClick={()=> setHasAccount(!hasAccount)}> Sign Up</span></p>\r\n            </>\r\n\r\n\r\n        ) : (\r\n\r\n            <>\r\n            <button onClick={handleSignup}>Sign Up</button>\r\n            <p>Have an account ? <span onClick={()=> setHasAccount(!hasAccount)}> Sign in</span></p>\r\n            </>\r\n             )}\r\n</div>\r\n\r\n\r\n</div>\r\n</center>\r\n    </div>\r\n    </center>\r\n</section>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Logins;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// {/* <div  style={{float:'right',marginTop:'150px',marginRight:'50px'}}>\r\n// <div style={{backgroundColor:'white',height:'20px'}} >\r\n\r\n\r\n\r\n// <input type=\"text\" placeholder=\"Mobile Number\" autoFocus required value={phoneNumber} onChange={(e)=>\r\n// setPhoneNumber\r\n// (e.target.value)}/>\r\n\r\n//       <br></br>\r\n//       <br></br>\r\n\r\n//       <input type=\"text\" placeholder=\"password\" autoFocus required value={passwordPhone} onChange={(e)=>\r\n// setpasswordPhone\r\n// (e.target.value)}/>\r\n\r\n// <br></br>\r\n//       <br></br>\r\n\r\n\r\n//       <div className=\"btnContainers\">\r\n\r\n// {\r\n//     hasAccountO ? (\r\n\r\n//         <>\r\n//         <button onClick={phoneAuthLogin}>Sign in</button>\r\n//         <p>Don't have an account ? <span onClick={()=> setHasAccountO(!hasAccountO)}> Sign Up</span></p>\r\n//         </>\r\n\r\n\r\n//     ) : (\r\n\r\n//         <>\r\n//         <button onClick={phoneAuth}>Sign Up</button>\r\n//         <p>Have an account ? <span onClick={()=> setHasAccountO(!hasAccountO)}> Sign in</span></p>\r\n//         </>\r\n//          )}\r\n// </div>\r\n\r\n\r\n\r\n//       {/* <button type=\"button\" onClick={phoneAuth}>GetOtp</button> */}\r\n        \r\n\r\n// </div>\r\n    //   </div> */}\r\n\r\n\r\n\r\n","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\Heros.js",[],["418","419"],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\History.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\AdminRoute.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\StartPage.js",["420","421"],"import React, { useState,useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StartPage=()=>{\r\n\r\n\r\n    return(\r\n\r\n\r\n\r\n        <div>\r\n            <center>\r\n            <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n\r\n            <Link to=\"/app\">\r\n            <button type='button'>?using Gmail</button>\r\n\r\n            </Link>\r\n\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Link to=\"/app\">\r\n            <button type='button'>?using Mobile_Number</button>\r\n\r\n            </Link>\r\n\r\n\r\n</center>\r\n            {/* <h1 style={{color:'white'}}>Hello</h1> */}\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default StartPage;","D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\footer.js",[],"D:\\BosonLabsNFTPROJECT\\nftsecondprabha\\CIFI\\WebApp\\NFTWebAPP\\src\\DarkMode.js",[],{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":42,"column":9,"nodeType":"428","messageId":"429","endLine":42,"endColumn":22},{"ruleId":"426","severity":1,"message":"430","line":43,"column":9,"nodeType":"428","messageId":"429","endLine":43,"endColumn":24},{"ruleId":"431","severity":1,"message":"432","line":504,"column":5,"nodeType":"433","endLine":504,"endColumn":7,"suggestions":"434"},{"ruleId":"426","severity":1,"message":"435","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":44,"column":18,"nodeType":"438","messageId":"439","endLine":44,"endColumn":20},{"ruleId":"440","severity":1,"message":"441","line":67,"column":27,"nodeType":"438","messageId":"442","endLine":67,"endColumn":28},{"ruleId":"440","severity":1,"message":"441","line":75,"column":28,"nodeType":"438","messageId":"442","endLine":75,"endColumn":29},{"ruleId":"426","severity":1,"message":"443","line":14,"column":8,"nodeType":"428","messageId":"429","endLine":14,"endColumn":11},{"ruleId":"426","severity":1,"message":"444","line":15,"column":8,"nodeType":"428","messageId":"429","endLine":15,"endColumn":19},{"ruleId":"426","severity":1,"message":"445","line":8,"column":10,"nodeType":"428","messageId":"429","endLine":8,"endColumn":16},{"ruleId":"426","severity":1,"message":"446","line":8,"column":18,"nodeType":"428","messageId":"429","endLine":8,"endColumn":23},{"ruleId":"426","severity":1,"message":"447","line":8,"column":25,"nodeType":"428","messageId":"429","endLine":8,"endColumn":31},{"ruleId":"426","severity":1,"message":"448","line":32,"column":10,"nodeType":"428","messageId":"429","endLine":32,"endColumn":14},{"ruleId":"426","severity":1,"message":"449","line":34,"column":9,"nodeType":"428","messageId":"429","endLine":34,"endColumn":20},{"ruleId":"426","severity":1,"message":"450","line":35,"column":9,"nodeType":"428","messageId":"429","endLine":35,"endColumn":19},{"ruleId":"426","severity":1,"message":"451","line":40,"column":10,"nodeType":"428","messageId":"429","endLine":40,"endColumn":19},{"ruleId":"426","severity":1,"message":"452","line":40,"column":20,"nodeType":"428","messageId":"429","endLine":40,"endColumn":32},{"ruleId":"431","severity":1,"message":"453","line":131,"column":31,"nodeType":"433","endLine":131,"endColumn":33,"suggestions":"454"},{"ruleId":"426","severity":1,"message":"455","line":137,"column":7,"nodeType":"428","messageId":"429","endLine":137,"endColumn":18},{"ruleId":"426","severity":1,"message":"456","line":139,"column":7,"nodeType":"428","messageId":"429","endLine":139,"endColumn":13},{"ruleId":"426","severity":1,"message":"457","line":142,"column":10,"nodeType":"428","messageId":"429","endLine":142,"endColumn":19},{"ruleId":"426","severity":1,"message":"458","line":144,"column":20,"nodeType":"428","messageId":"429","endLine":144,"endColumn":32},{"ruleId":"426","severity":1,"message":"459","line":148,"column":10,"nodeType":"428","messageId":"429","endLine":148,"endColumn":17},{"ruleId":"426","severity":1,"message":"460","line":148,"column":18,"nodeType":"428","messageId":"429","endLine":148,"endColumn":28},{"ruleId":"426","severity":1,"message":"461","line":227,"column":11,"nodeType":"428","messageId":"429","endLine":227,"endColumn":13},{"ruleId":"426","severity":1,"message":"462","line":228,"column":11,"nodeType":"428","messageId":"429","endLine":228,"endColumn":13},{"ruleId":"426","severity":1,"message":"463","line":242,"column":13,"nodeType":"428","messageId":"429","endLine":242,"endColumn":23},{"ruleId":"426","severity":1,"message":"463","line":1390,"column":25,"nodeType":"428","messageId":"429","endLine":1390,"endColumn":35},{"ruleId":"426","severity":1,"message":"464","line":1464,"column":9,"nodeType":"428","messageId":"429","endLine":1464,"endColumn":16},{"ruleId":"426","severity":1,"message":"465","line":1,"column":26,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"445","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":16},{"ruleId":"426","severity":1,"message":"446","line":4,"column":18,"nodeType":"428","messageId":"429","endLine":4,"endColumn":23},{"ruleId":"426","severity":1,"message":"447","line":4,"column":25,"nodeType":"428","messageId":"429","endLine":4,"endColumn":31},{"ruleId":"426","severity":1,"message":"443","line":6,"column":8,"nodeType":"428","messageId":"429","endLine":6,"endColumn":11},{"ruleId":"426","severity":1,"message":"466","line":7,"column":8,"nodeType":"428","messageId":"429","endLine":7,"endColumn":16},{"ruleId":"426","severity":1,"message":"467","line":8,"column":8,"nodeType":"428","messageId":"429","endLine":8,"endColumn":15},{"ruleId":"426","severity":1,"message":"444","line":9,"column":8,"nodeType":"428","messageId":"429","endLine":9,"endColumn":19},{"ruleId":"426","severity":1,"message":"468","line":10,"column":8,"nodeType":"428","messageId":"429","endLine":10,"endColumn":21},{"ruleId":"426","severity":1,"message":"469","line":17,"column":10,"nodeType":"428","messageId":"429","endLine":17,"endColumn":20},{"ruleId":"426","severity":1,"message":"470","line":18,"column":10,"nodeType":"428","messageId":"429","endLine":18,"endColumn":13},{"ruleId":"426","severity":1,"message":"471","line":18,"column":14,"nodeType":"428","messageId":"429","endLine":18,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":86,"column":5,"nodeType":"474","messageId":"475","endLine":86,"endColumn":19},{"ruleId":"422","replacedBy":"476"},{"ruleId":"424","replacedBy":"477"},{"ruleId":"426","severity":1,"message":"478","line":14,"column":8,"nodeType":"428","messageId":"429","endLine":14,"endColumn":21},{"ruleId":"426","severity":1,"message":"479","line":29,"column":13,"nodeType":"428","messageId":"429","endLine":29,"endColumn":14},{"ruleId":"426","severity":1,"message":"480","line":64,"column":12,"nodeType":"428","messageId":"429","endLine":64,"endColumn":15},{"ruleId":"426","severity":1,"message":"469","line":24,"column":9,"nodeType":"428","messageId":"429","endLine":24,"endColumn":19},{"ruleId":"426","severity":1,"message":"481","line":25,"column":9,"nodeType":"428","messageId":"429","endLine":25,"endColumn":13},{"ruleId":"426","severity":1,"message":"470","line":26,"column":9,"nodeType":"428","messageId":"429","endLine":26,"endColumn":12},{"ruleId":"426","severity":1,"message":"471","line":26,"column":13,"nodeType":"428","messageId":"429","endLine":26,"endColumn":18},{"ruleId":"431","severity":1,"message":"482","line":30,"column":34,"nodeType":"433","endLine":30,"endColumn":36,"suggestions":"483"},{"ruleId":"484","severity":1,"message":"485","line":76,"column":11,"nodeType":"428","messageId":"486","endLine":76,"endColumn":12},{"ruleId":"436","severity":1,"message":"437","line":116,"column":15,"nodeType":"438","messageId":"439","endLine":116,"endColumn":17},{"ruleId":"426","severity":1,"message":"465","line":1,"column":26,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"443","line":10,"column":8,"nodeType":"428","messageId":"429","endLine":10,"endColumn":11},{"ruleId":"426","severity":1,"message":"444","line":13,"column":8,"nodeType":"428","messageId":"429","endLine":13,"endColumn":19},{"ruleId":"426","severity":1,"message":"487","line":15,"column":8,"nodeType":"428","messageId":"429","endLine":15,"endColumn":14},{"ruleId":"426","severity":1,"message":"488","line":22,"column":10,"nodeType":"428","messageId":"429","endLine":22,"endColumn":19},{"ruleId":"426","severity":1,"message":"489","line":22,"column":21,"nodeType":"428","messageId":"429","endLine":22,"endColumn":31},{"ruleId":"426","severity":1,"message":"490","line":24,"column":10,"nodeType":"428","messageId":"429","endLine":24,"endColumn":24},{"ruleId":"426","severity":1,"message":"491","line":24,"column":26,"nodeType":"428","messageId":"429","endLine":24,"endColumn":43},{"ruleId":"426","severity":1,"message":"492","line":34,"column":9,"nodeType":"428","messageId":"429","endLine":34,"endColumn":22},{"ruleId":"426","severity":1,"message":"463","line":37,"column":7,"nodeType":"428","messageId":"429","endLine":37,"endColumn":17},{"ruleId":"436","severity":1,"message":"437","line":51,"column":19,"nodeType":"438","messageId":"439","endLine":51,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":98,"column":33,"nodeType":"438","messageId":"439","endLine":98,"endColumn":35},{"ruleId":"436","severity":1,"message":"437","line":110,"column":21,"nodeType":"438","messageId":"439","endLine":110,"endColumn":23},{"ruleId":"426","severity":1,"message":"458","line":30,"column":20,"nodeType":"428","messageId":"429","endLine":30,"endColumn":32},{"ruleId":"436","severity":1,"message":"437","line":132,"column":15,"nodeType":"438","messageId":"439","endLine":132,"endColumn":17},{"ruleId":"436","severity":1,"message":"437","line":1247,"column":33,"nodeType":"438","messageId":"439","endLine":1247,"endColumn":35},{"ruleId":"436","severity":1,"message":"437","line":1259,"column":21,"nodeType":"438","messageId":"439","endLine":1259,"endColumn":23},{"ruleId":"426","severity":1,"message":"457","line":52,"column":10,"nodeType":"428","messageId":"429","endLine":52,"endColumn":19},{"ruleId":"426","severity":1,"message":"493","line":52,"column":21,"nodeType":"428","messageId":"429","endLine":52,"endColumn":33},{"ruleId":"426","severity":1,"message":"494","line":1251,"column":13,"nodeType":"428","messageId":"429","endLine":1251,"endColumn":21},{"ruleId":"426","severity":1,"message":"494","line":2349,"column":11,"nodeType":"428","messageId":"429","endLine":2349,"endColumn":19},{"ruleId":"426","severity":1,"message":"494","line":3445,"column":11,"nodeType":"428","messageId":"429","endLine":3445,"endColumn":19},{"ruleId":"436","severity":1,"message":"437","line":4578,"column":33,"nodeType":"438","messageId":"439","endLine":4578,"endColumn":35},{"ruleId":"436","severity":1,"message":"437","line":4590,"column":21,"nodeType":"438","messageId":"439","endLine":4590,"endColumn":23},{"ruleId":"426","severity":1,"message":"488","line":34,"column":10,"nodeType":"428","messageId":"429","endLine":34,"endColumn":19},{"ruleId":"431","severity":1,"message":"453","line":80,"column":31,"nodeType":"433","endLine":80,"endColumn":33,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":110,"column":23,"nodeType":"498","messageId":"499","endLine":110,"endColumn":25},{"ruleId":"431","severity":1,"message":"500","line":136,"column":30,"nodeType":"433","endLine":136,"endColumn":37,"suggestions":"501"},{"ruleId":"426","severity":1,"message":"478","line":14,"column":8,"nodeType":"428","messageId":"429","endLine":14,"endColumn":21},{"ruleId":"426","severity":1,"message":"479","line":29,"column":13,"nodeType":"428","messageId":"429","endLine":29,"endColumn":14},{"ruleId":"426","severity":1,"message":"480","line":64,"column":12,"nodeType":"428","messageId":"429","endLine":64,"endColumn":15},{"ruleId":"426","severity":1,"message":"435","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":25},{"ruleId":"426","severity":1,"message":"502","line":2,"column":8,"nodeType":"428","messageId":"429","endLine":2,"endColumn":15},{"ruleId":"426","severity":1,"message":"445","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":16},{"ruleId":"426","severity":1,"message":"446","line":4,"column":18,"nodeType":"428","messageId":"429","endLine":4,"endColumn":23},{"ruleId":"426","severity":1,"message":"447","line":4,"column":25,"nodeType":"428","messageId":"429","endLine":4,"endColumn":31},{"ruleId":"426","severity":1,"message":"503","line":23,"column":8,"nodeType":"428","messageId":"429","endLine":23,"endColumn":13},{"ruleId":"431","severity":1,"message":"453","line":97,"column":31,"nodeType":"433","endLine":97,"endColumn":33,"suggestions":"504"},{"ruleId":"431","severity":1,"message":"453","line":98,"column":31,"nodeType":"433","endLine":98,"endColumn":33,"suggestions":"505"},{"ruleId":"426","severity":1,"message":"445","line":5,"column":10,"nodeType":"428","messageId":"429","endLine":5,"endColumn":16},{"ruleId":"426","severity":1,"message":"446","line":5,"column":18,"nodeType":"428","messageId":"429","endLine":5,"endColumn":23},{"ruleId":"426","severity":1,"message":"447","line":5,"column":25,"nodeType":"428","messageId":"429","endLine":5,"endColumn":31},{"ruleId":"426","severity":1,"message":"503","line":22,"column":8,"nodeType":"428","messageId":"429","endLine":22,"endColumn":13},{"ruleId":"431","severity":1,"message":"453","line":96,"column":31,"nodeType":"433","endLine":96,"endColumn":33,"suggestions":"506"},{"ruleId":"426","severity":1,"message":"507","line":100,"column":9,"nodeType":"428","messageId":"429","endLine":100,"endColumn":16},{"ruleId":"426","severity":1,"message":"435","line":1,"column":15,"nodeType":"428","messageId":"429","endLine":1,"endColumn":23},{"ruleId":"426","severity":1,"message":"445","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":16},{"ruleId":"426","severity":1,"message":"446","line":4,"column":18,"nodeType":"428","messageId":"429","endLine":4,"endColumn":23},{"ruleId":"426","severity":1,"message":"447","line":4,"column":25,"nodeType":"428","messageId":"429","endLine":4,"endColumn":31},{"ruleId":"426","severity":1,"message":"508","line":21,"column":10,"nodeType":"428","messageId":"429","endLine":21,"endColumn":17},{"ruleId":"426","severity":1,"message":"503","line":23,"column":8,"nodeType":"428","messageId":"429","endLine":23,"endColumn":13},{"ruleId":"431","severity":1,"message":"453","line":96,"column":31,"nodeType":"433","endLine":96,"endColumn":33,"suggestions":"509"},{"ruleId":"426","severity":1,"message":"466","line":10,"column":8,"nodeType":"428","messageId":"429","endLine":10,"endColumn":16},{"ruleId":"426","severity":1,"message":"467","line":11,"column":8,"nodeType":"428","messageId":"429","endLine":11,"endColumn":15},{"ruleId":"426","severity":1,"message":"444","line":12,"column":8,"nodeType":"428","messageId":"429","endLine":12,"endColumn":19},{"ruleId":"426","severity":1,"message":"468","line":13,"column":8,"nodeType":"428","messageId":"429","endLine":13,"endColumn":21},{"ruleId":"426","severity":1,"message":"478","line":15,"column":8,"nodeType":"428","messageId":"429","endLine":15,"endColumn":21},{"ruleId":"426","severity":1,"message":"510","line":25,"column":8,"nodeType":"428","messageId":"429","endLine":25,"endColumn":14},{"ruleId":"426","severity":1,"message":"511","line":26,"column":8,"nodeType":"428","messageId":"429","endLine":26,"endColumn":22},{"ruleId":"426","severity":1,"message":"455","line":34,"column":7,"nodeType":"428","messageId":"429","endLine":34,"endColumn":18},{"ruleId":"426","severity":1,"message":"456","line":36,"column":7,"nodeType":"428","messageId":"429","endLine":36,"endColumn":13},{"ruleId":"426","severity":1,"message":"457","line":39,"column":10,"nodeType":"428","messageId":"429","endLine":39,"endColumn":19},{"ruleId":"426","severity":1,"message":"493","line":39,"column":21,"nodeType":"428","messageId":"429","endLine":39,"endColumn":33},{"ruleId":"426","severity":1,"message":"469","line":43,"column":9,"nodeType":"428","messageId":"429","endLine":43,"endColumn":19},{"ruleId":"426","severity":1,"message":"481","line":44,"column":9,"nodeType":"428","messageId":"429","endLine":44,"endColumn":13},{"ruleId":"426","severity":1,"message":"470","line":45,"column":9,"nodeType":"428","messageId":"429","endLine":45,"endColumn":12},{"ruleId":"426","severity":1,"message":"471","line":45,"column":13,"nodeType":"428","messageId":"429","endLine":45,"endColumn":18},{"ruleId":"426","severity":1,"message":"512","line":1181,"column":9,"nodeType":"428","messageId":"429","endLine":1181,"endColumn":12},{"ruleId":"426","severity":1,"message":"513","line":1185,"column":9,"nodeType":"428","messageId":"429","endLine":1185,"endColumn":12},{"ruleId":"436","severity":1,"message":"437","line":1266,"column":15,"nodeType":"438","messageId":"439","endLine":1266,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":1298,"column":21,"nodeType":"498","messageId":"516","endLine":1312,"endColumn":12},{"ruleId":"431","severity":1,"message":"482","line":1325,"column":31,"nodeType":"433","endLine":1325,"endColumn":33,"suggestions":"517"},{"ruleId":"426","severity":1,"message":"518","line":27,"column":10,"nodeType":"428","messageId":"429","endLine":27,"endColumn":12},{"ruleId":"431","severity":1,"message":"453","line":102,"column":31,"nodeType":"433","endLine":102,"endColumn":33,"suggestions":"519"},{"ruleId":"496","severity":1,"message":"497","line":136,"column":23,"nodeType":"498","messageId":"499","endLine":136,"endColumn":25},{"ruleId":"431","severity":1,"message":"500","line":174,"column":30,"nodeType":"433","endLine":174,"endColumn":37,"suggestions":"520"},{"ruleId":"496","severity":1,"message":"521","line":555,"column":15,"nodeType":"498","messageId":"522","endLine":555,"endColumn":17},{"ruleId":"426","severity":1,"message":"488","line":85,"column":10,"nodeType":"428","messageId":"429","endLine":85,"endColumn":19},{"ruleId":"426","severity":1,"message":"523","line":119,"column":7,"nodeType":"428","messageId":"429","endLine":119,"endColumn":13},{"ruleId":"496","severity":1,"message":"497","line":140,"column":23,"nodeType":"498","messageId":"499","endLine":140,"endColumn":25},{"ruleId":"496","severity":1,"message":"497","line":143,"column":27,"nodeType":"498","messageId":"499","endLine":143,"endColumn":29},{"ruleId":"431","severity":1,"message":"524","line":167,"column":29,"nodeType":"433","endLine":167,"endColumn":42,"suggestions":"525"},{"ruleId":"496","severity":1,"message":"497","line":192,"column":24,"nodeType":"498","messageId":"499","endLine":192,"endColumn":26},{"ruleId":"496","severity":1,"message":"497","line":195,"column":27,"nodeType":"498","messageId":"499","endLine":195,"endColumn":29},{"ruleId":"431","severity":1,"message":"526","line":219,"column":30,"nodeType":"433","endLine":219,"endColumn":44,"suggestions":"527"},{"ruleId":"431","severity":1,"message":"453","line":260,"column":31,"nodeType":"433","endLine":260,"endColumn":33,"suggestions":"528"},{"ruleId":"496","severity":1,"message":"497","line":277,"column":23,"nodeType":"498","messageId":"499","endLine":277,"endColumn":25},{"ruleId":"496","severity":1,"message":"497","line":280,"column":29,"nodeType":"498","messageId":"499","endLine":280,"endColumn":31},{"ruleId":"431","severity":1,"message":"500","line":311,"column":30,"nodeType":"433","endLine":311,"endColumn":37,"suggestions":"529"},{"ruleId":"496","severity":1,"message":"530","line":454,"column":47,"nodeType":"498","messageId":"522","endLine":454,"endColumn":49},{"ruleId":"496","severity":1,"message":"530","line":467,"column":45,"nodeType":"498","messageId":"522","endLine":467,"endColumn":47},{"ruleId":"496","severity":1,"message":"530","line":489,"column":42,"nodeType":"498","messageId":"522","endLine":489,"endColumn":44},{"ruleId":"496","severity":1,"message":"530","line":501,"column":42,"nodeType":"498","messageId":"522","endLine":501,"endColumn":44},{"ruleId":"426","severity":1,"message":"531","line":18,"column":9,"nodeType":"428","messageId":"429","endLine":18,"endColumn":12},{"ruleId":"426","severity":1,"message":"532","line":65,"column":14,"nodeType":"428","messageId":"429","endLine":65,"endColumn":23},{"ruleId":"431","severity":1,"message":"453","line":134,"column":31,"nodeType":"433","endLine":134,"endColumn":33,"suggestions":"533"},{"ruleId":"431","severity":1,"message":"500","line":214,"column":30,"nodeType":"433","endLine":214,"endColumn":37,"suggestions":"534"},{"ruleId":"496","severity":1,"message":"521","line":742,"column":15,"nodeType":"498","messageId":"522","endLine":742,"endColumn":17},{"ruleId":"426","severity":1,"message":"535","line":19,"column":8,"nodeType":"428","messageId":"429","endLine":19,"endColumn":23},{"ruleId":"426","severity":1,"message":"536","line":25,"column":8,"nodeType":"428","messageId":"429","endLine":25,"endColumn":20},{"ruleId":"426","severity":1,"message":"537","line":44,"column":7,"nodeType":"428","messageId":"429","endLine":44,"endColumn":11},{"ruleId":"426","severity":1,"message":"538","line":48,"column":21,"nodeType":"428","messageId":"429","endLine":48,"endColumn":34},{"ruleId":"426","severity":1,"message":"539","line":51,"column":10,"nodeType":"428","messageId":"429","endLine":51,"endColumn":15},{"ruleId":"426","severity":1,"message":"540","line":51,"column":16,"nodeType":"428","messageId":"429","endLine":51,"endColumn":24},{"ruleId":"426","severity":1,"message":"541","line":58,"column":10,"nodeType":"428","messageId":"429","endLine":58,"endColumn":22},{"ruleId":"426","severity":1,"message":"542","line":58,"column":23,"nodeType":"428","messageId":"429","endLine":58,"endColumn":38},{"ruleId":"426","severity":1,"message":"518","line":60,"column":10,"nodeType":"428","messageId":"429","endLine":60,"endColumn":12},{"ruleId":"431","severity":1,"message":"453","line":172,"column":31,"nodeType":"433","endLine":172,"endColumn":33,"suggestions":"543"},{"ruleId":"496","severity":1,"message":"497","line":202,"column":25,"nodeType":"498","messageId":"499","endLine":202,"endColumn":27},{"ruleId":"431","severity":1,"message":"500","line":241,"column":30,"nodeType":"433","endLine":241,"endColumn":37,"suggestions":"544"},{"ruleId":"496","severity":1,"message":"521","line":620,"column":15,"nodeType":"498","messageId":"522","endLine":620,"endColumn":17},{"ruleId":"426","severity":1,"message":"435","line":2,"column":10,"nodeType":"428","messageId":"429","endLine":2,"endColumn":18},{"ruleId":"431","severity":1,"message":"453","line":45,"column":31,"nodeType":"433","endLine":45,"endColumn":33,"suggestions":"545"},{"ruleId":"426","severity":1,"message":"546","line":49,"column":7,"nodeType":"428","messageId":"429","endLine":49,"endColumn":17},{"ruleId":"426","severity":1,"message":"511","line":8,"column":8,"nodeType":"428","messageId":"429","endLine":8,"endColumn":22},{"ruleId":"426","severity":1,"message":"547","line":9,"column":8,"nodeType":"428","messageId":"429","endLine":9,"endColumn":29},{"ruleId":"426","severity":1,"message":"548","line":19,"column":8,"nodeType":"428","messageId":"429","endLine":19,"endColumn":15},{"ruleId":"426","severity":1,"message":"549","line":20,"column":8,"nodeType":"428","messageId":"429","endLine":20,"endColumn":18},{"ruleId":"426","severity":1,"message":"550","line":21,"column":8,"nodeType":"428","messageId":"429","endLine":21,"endColumn":17},{"ruleId":"426","severity":1,"message":"551","line":45,"column":11,"nodeType":"428","messageId":"429","endLine":45,"endColumn":18},{"ruleId":"431","severity":1,"message":"453","line":138,"column":31,"nodeType":"433","endLine":138,"endColumn":33,"suggestions":"552"},{"ruleId":"431","severity":1,"message":"500","line":167,"column":34,"nodeType":"433","endLine":167,"endColumn":41,"suggestions":"553"},{"ruleId":"426","severity":1,"message":"465","line":1,"column":26,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},{"ruleId":"426","severity":1,"message":"554","line":2,"column":9,"nodeType":"428","messageId":"429","endLine":2,"endColumn":13},{"ruleId":"426","severity":1,"message":"508","line":4,"column":10,"nodeType":"428","messageId":"429","endLine":4,"endColumn":17},{"ruleId":"426","severity":1,"message":"555","line":4,"column":19,"nodeType":"428","messageId":"429","endLine":4,"endColumn":25},{"ruleId":"426","severity":1,"message":"503","line":6,"column":8,"nodeType":"428","messageId":"429","endLine":6,"endColumn":13},{"ruleId":"426","severity":1,"message":"435","line":1,"column":15,"nodeType":"428","messageId":"429","endLine":1,"endColumn":23},{"ruleId":"426","severity":1,"message":"556","line":2,"column":9,"nodeType":"428","messageId":"429","endLine":2,"endColumn":20},{"ruleId":"426","severity":1,"message":"557","line":4,"column":8,"nodeType":"428","messageId":"429","endLine":4,"endColumn":18},{"ruleId":"426","severity":1,"message":"558","line":14,"column":59,"nodeType":"428","messageId":"429","endLine":14,"endColumn":68},{"ruleId":"426","severity":1,"message":"559","line":14,"column":69,"nodeType":"428","messageId":"429","endLine":14,"endColumn":80},{"ruleId":"426","severity":1,"message":"560","line":14,"column":81,"nodeType":"428","messageId":"429","endLine":14,"endColumn":95},{"ruleId":"426","severity":1,"message":"561","line":14,"column":96,"nodeType":"428","messageId":"429","endLine":14,"endColumn":109},{"ruleId":"426","severity":1,"message":"562","line":14,"column":110,"nodeType":"428","messageId":"429","endLine":14,"endColumn":126},{"ruleId":"426","severity":1,"message":"563","line":14,"column":127,"nodeType":"428","messageId":"429","endLine":14,"endColumn":141},{"ruleId":"426","severity":1,"message":"564","line":14,"column":142,"nodeType":"428","messageId":"429","endLine":14,"endColumn":153},{"ruleId":"426","severity":1,"message":"565","line":14,"column":154,"nodeType":"428","messageId":"429","endLine":14,"endColumn":168},{"ruleId":"426","severity":1,"message":"566","line":17,"column":15,"nodeType":"428","messageId":"429","endLine":17,"endColumn":29},{"ruleId":"422","replacedBy":"567"},{"ruleId":"424","replacedBy":"568"},{"ruleId":"426","severity":1,"message":"435","line":1,"column":17,"nodeType":"428","messageId":"429","endLine":1,"endColumn":25},{"ruleId":"426","severity":1,"message":"465","line":1,"column":26,"nodeType":"428","messageId":"429","endLine":1,"endColumn":35},"no-native-reassign",["569"],"no-negated-in-lhs",["570"],"no-unused-vars","'phoneNumberLo' is assigned a value but never used.","Identifier","unusedVar","'passwordPhoneLo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["571"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Nft' is defined but never used.","'Tokencreate' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'symbolget' is assigned a value but never used.","'setsymbolget' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'connectmm'. Either include it or remove the dependency array.",["572"],"'studentlist' is assigned a value but never used.","'stuset' is assigned a value but never used.","'currentid' is assigned a value but never used.","'setToaddress' is assigned a value but never used.","'tsymbol' is assigned a value but never used.","'settSymbol' is assigned a value but never used.","'tc' is assigned a value but never used.","'td' is assigned a value but never used.","'getaddress' is assigned a value but never used.","'funcall' is assigned a value but never used.","'useEffect' is defined but never used.","'Sendpage' is defined but never used.","'Newpage' is defined but never used.","'Printallimage' is defined but never used.","'afternames' is assigned a value but never used.","'tid' is assigned a value but never used.","'setId' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["569"],["570"],"'Saleimagepage' is defined but never used.","'p' is assigned a value but never used.","'ebr' is assigned a value but never used.","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onSubmitNFT'. Either include it or remove the dependency array.",["573"],"no-redeclare","'i' is already defined.","redeclared","'getaaa' is defined but never used.","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'contactObjects' is assigned a value but never used.","'setContactObjects' is assigned a value but never used.","'publicAddress' is assigned a value but never used.","'setCurrentid' is assigned a value but never used.","'accounts' is assigned a value but never used.",["574"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getImgpa'. Either include it or remove the dependency array.",["575"],"'history' is defined but never used.","'Popup' is defined but never used.",["576"],["577"],["578"],"'callBtn' is assigned a value but never used.","'Offline' is defined but never used.",["579"],"'fireDb' is defined but never used.","'Mypurchasepage' is defined but never used.","'bcd' is assigned a value but never used.","'cde' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'getaaaa', 'getaaaa', 'getaaaa'.","unsafeRefs",["580"],"'pa' is assigned a value but never used.",["581"],["582"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Loader' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getbuyers'. Either include it or remove the dependency array.",["583"],"React Hook useEffect has a missing dependency: 'getSellers'. Either include it or remove the dependency array.",["584"],["585"],["586"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","'tra' is defined but never used.","'setLoader' is assigned a value but never used.",["587"],["588"],"'Allcontractpage' is defined but never used.","'Salepagecopy' is defined but never used.","'abcd' is defined but never used.","'setAfternames' is assigned a value but never used.","'names' is assigned a value but never used.","'setnames' is assigned a value but never used.","'getAddressDb' is assigned a value but never used.","'setGetAddressDb' is assigned a value but never used.",["589"],["590"],["591"],"'Component2' is assigned a value but never used.","'Createandpurchasepage' is defined but never used.","'History' is defined but never used.","'AdminRoute' is defined but never used.","'StartPage' is defined but never used.","'getcadd' is assigned a value but never used.",["592"],["593"],"'Link' is defined but never used.","'Online' is defined but never used.","'GoogleLogin' is defined but never used.","'PhoneInput' is defined but never used.","'phoneAuth' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'setPhoneNumber' is assigned a value but never used.","'passwordPhone' is assigned a value but never used.","'setpasswordPhone' is assigned a value but never used.","'phoneAuthLogin' is assigned a value but never used.","'hasAccountO' is assigned a value but never used.","'setHasAccountO' is assigned a value but never used.","'responseGoogle' is assigned a value but never used.",["569"],["570"],"no-global-assign","no-unsafe-negation",{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"596","fix":"600"},{"desc":"601","fix":"602"},{"desc":"596","fix":"603"},{"desc":"596","fix":"604"},{"desc":"596","fix":"605"},{"desc":"596","fix":"606"},{"desc":"598","fix":"607"},{"desc":"596","fix":"608"},{"desc":"601","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"596","fix":"614"},{"desc":"601","fix":"615"},{"desc":"596","fix":"616"},{"desc":"601","fix":"617"},{"desc":"596","fix":"618"},{"desc":"601","fix":"619"},{"desc":"596","fix":"620"},{"desc":"596","fix":"621"},{"desc":"601","fix":"622"},"Update the dependencies array to be: [authListener]",{"range":"623","text":"624"},"Update the dependencies array to be: [connectmm]",{"range":"625","text":"626"},"Update the dependencies array to be: [onSubmitNFT]",{"range":"627","text":"628"},{"range":"629","text":"626"},"Update the dependencies array to be: [getIm, getImgpa]",{"range":"630","text":"631"},{"range":"632","text":"626"},{"range":"633","text":"626"},{"range":"634","text":"626"},{"range":"635","text":"626"},{"range":"636","text":"628"},{"range":"637","text":"626"},{"range":"638","text":"631"},"Update the dependencies array to be: [getImbuyers, getbuyers]",{"range":"639","text":"640"},"Update the dependencies array to be: [getImsellers, getSellers]",{"range":"641","text":"642"},{"range":"643","text":"626"},{"range":"644","text":"631"},{"range":"645","text":"626"},{"range":"646","text":"631"},{"range":"647","text":"626"},{"range":"648","text":"631"},{"range":"649","text":"626"},{"range":"650","text":"626"},{"range":"651","text":"631"},[13417,13419],"[authListener]",[3288,3290],"[connectmm]",[733,735],"[onSubmitNFT]",[2259,2261],[3363,3370],"[getIm, getImgpa]",[2593,2595],[2509,2511],[2687,2689],[2527,2529],[29283,29285],[2569,2571],[3928,3935],[5207,5220],"[getImbuyers, getbuyers]",[6314,6328],"[getImsellers, getSellers]",[7854,7856],[9317,9324],[3121,3123],[4613,4620],[3863,3865],[5253,5260],[1124,1126],[3411,3413],[3852,3859]]