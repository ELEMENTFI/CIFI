{"version":3,"sources":["../../source/react-hook-form/ReactHookFormInput.js"],"names":["ReactHookFormInput","ref","Component","name","defaultValue","control","rules","onChange_","onChange","onBlur_","onBlur","rest","internalRef","setRef","instance","current","onFocus","focus","undefined","renderInputComponent","restReactHookFormControlledFieldProps","setComponentRef","onChangeCombined","value","onBlurCombined","event","props","field","React","forwardRef","propTypes","PropTypes","elementType","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nimport PropTypes from 'prop-types'\r\n\r\nlet ReactHookFormInput = ({\r\n  Component,\r\n  name,\r\n  defaultValue,\r\n  control,\r\n  rules,\r\n  onChange: onChange_,\r\n  onBlur: onBlur_,\r\n  ...rest\r\n}, ref) => {\r\n  const internalRef = useRef()\r\n  const setRef = useCallback((instance) => {\r\n    internalRef.current = instance\r\n    if (ref) {\r\n      if (typeof ref === 'function') {\r\n        ref(instance)\r\n      } else {\r\n        ref.current = instance\r\n      }\r\n    }\r\n  }, [ref])\r\n  const onFocus = useCallback(() => {\r\n    // internalRef.current.disabled = false\r\n    internalRef.current.focus()\r\n  }, [])\r\n  // `feact-hook-form` doesn't know how to properly handle `undefined` values.\r\n  // https://github.com/react-hook-form/react-hook-form/issues/2990\r\n  defaultValue = defaultValue === undefined ? null : defaultValue\r\n  const renderInputComponent = ({\r\n    ref,\r\n    onChange,\r\n    onBlur,\r\n    // `restReactHookFormControlledFieldProps` contain properties like `name` and `value`.\r\n    // https://github.com/react-hook-form/react-hook-form/blob/b0e6c3057ac12a7b12d5616aecf3791acb7d7204/src/types/controller.ts#L21-L30\r\n    ...restReactHookFormControlledFieldProps\r\n  }) => {\r\n    const setComponentRef = useCallback((instance) => {\r\n      setRef(instance)\r\n      if (ref) {\r\n        if (typeof ref === 'function') {\r\n          ref(instance)\r\n        } else {\r\n          ref.current = instance\r\n        }\r\n      }\r\n    }, [ref, setRef])\r\n    const onChangeCombined = useCallback((value) => {\r\n      onChange(value)\r\n      if (onChange_) {\r\n        onChange_(value)\r\n      }\r\n    }, [\r\n      onChange,\r\n      onChange_\r\n    ])\r\n    const onBlurCombined = useCallback((event) => {\r\n      onBlur(event)\r\n      if (onBlur_) {\r\n        onBlur_(event)\r\n      }\r\n    }, [\r\n      onBlur,\r\n      onBlur_\r\n    ])\r\n    return (\r\n      <Component\r\n        {...rest}\r\n        {...restReactHookFormControlledFieldProps}\r\n        ref={setComponentRef}\r\n        onChange={onChangeCombined}\r\n        onBlur={onBlurCombined}/>\r\n    )\r\n  }\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue}\r\n      rules={rules}\r\n      onFocus={onFocus}\r\n      render={(props) => {\r\n        // Differentiate between `react-hook-form@6` and `react-hook-form@7`.\r\n        // https://react-hook-form.com/migrate-v6-to-v7/\r\n        // https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/57\r\n        // `props` (before v7) and `props.fields` (in v7) contain properties like:\r\n        // `ref`, `name`, `value`, `onChange`, `onBlur`.\r\n        // https://github.com/react-hook-form/react-hook-form/blob/b0e6c3057ac12a7b12d5616aecf3791acb7d7204/src/types/controller.ts#L21-L30\r\n        return renderInputComponent(props.field || props)\r\n      }}/>\r\n  )\r\n}\r\n\r\nReactHookFormInput = React.forwardRef(ReactHookFormInput)\r\n\r\nReactHookFormInput.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  defaultValue: PropTypes.string,\r\n  control: PropTypes.object.isRequired,\r\n  rules: PropTypes.object.isRequired,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func\r\n}\r\n\r\nexport default ReactHookFormInput"],"file":"ReactHookFormInput.js"}