{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Component2.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport web3 from './web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Component2() {\n  _s();\n\n  let btn;\n  var accounts;\n\n  const connectmm = async () => {\n    //var getaddress=localStorage.getItem('myaddress')\n    //if(getaddress !== \"\"){\n    //var btn = document.getElementById(\"bu\");\n    //btn.value = accounts[0]; // will just add a hidden value\n    //btn.innerHTML = accounts[0];\n    //btn.innerHTML = \"CONNECTED\"\n    //}\n    //else{\n    //window.alert(\"Do you want to connect with metamask\");\n    //event.preventDefault();\n    //bring in user's metamask account address\n    //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\n    //alert(\"acc\"+accounts[0])\n    accounts = await web3.eth.getAccounts(); //.send({from:accounts[0]})\n\n    if (accounts[0] !== \"\") {\n      //accounts[0\n      //document.getElementById(\"bu\").\n      //document.getElementById(\"bu\").append(\"CONNECTED\")\n      btn = document.getElementById(\"bu\"); //btn.value = accounts[0]; // will just add a hidden value\n      //btn.innerHTML = accounts[0];\n\n      btn.innerHTML = \"CONNECTED\";\n      localStorage.setItem('myaddress', accounts[0]);\n    } else {\n      //document.getElementById(\"bu\").remove(\"\");\n      //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n      var btns = document.getElementById(\"bu\"); //btns.value = accounts[0]; // will just add a hidden value\n\n      btns.innerHTML = \"NOT CONNECTED\";\n      localStorage.setItem('myaddress', \"\");\n    }\n  };\n\n  useEffect(() => {\n    connectmm();\n  }, []);\n\n  const Component2 = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-cointainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Compnent2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.data, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"bu\",\n        class: \"btn btn-info btn-block\",\n        type: \"button\",\n        onClick: connectmm,\n        children: \"Connect wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this);\n  };\n}\n\n_s(Component2, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Component2;\nexport default Component2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component2\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/Component2.js"],"names":["React","useState","useEffect","web3","Component2","btn","accounts","connectmm","eth","getAccounts","document","getElementById","innerHTML","localStorage","setItem","btns","props","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AAGjB,MAAIC,GAAJ;AACF,MAAIC,QAAJ;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAG5B;AAEA;AAGE;AACE;AACA;AACA;AAIJ;AACA;AAGE;AAGA;AACD;AAIA;AAGC;AAEAD,IAAAA,QAAQ,GAAG,MAAMH,IAAI,CAACK,GAAL,CAASC,WAAT,EAAjB,CAhC0B,CAgCc;;AAExC,QAAGH,QAAQ,CAAC,CAAD,CAAR,KAAgB,EAAnB,EAAsB;AAIpB;AACA;AACA;AAEAD,MAAAA,GAAG,GAAEK,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CAAL,CARoB,CASpB;AACA;;AACAN,MAAAA,GAAG,CAACO,SAAJ,GAAgB,WAAhB;AAGAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCR,QAAQ,CAAC,CAAD,CAA1C;AAED,KAhBD,MAiBI;AACF;AACA;AACA,UAAIS,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CAAX,CAHE,CAIF;;AACAI,MAAAA,IAAI,CAACH,SAAL,GAAiB,eAAjB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkC,EAAlC;AACD;AAGJ,GA7DD;;AA8DAZ,EAAAA,SAAS,CAAC,MAAI;AAACK,IAAAA,SAAS;AAAG,GAAlB,EAAmB,EAAnB,CAAT;;AAIF,QAAMH,UAAU,GAAIY,KAAD,IAAW;AAE7B,wBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGF;AAAA,mBAAIA,KAAK,CAACC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE,eAMF;AACc,QAAA,EAAE,EAAC,IADjB;AAEgB,QAAA,KAAK,EAAC,wBAFtB;AAGgB,QAAA,IAAI,EAAC,QAHrB;AAIgB,QAAA,OAAO,EAAGV,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANE,EAca,GAdb;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAuBA,GAzBD;AA0BC;;GAlGQH,U;;KAAAA,U;AAoGT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { useState,useEffect } from \"react\";\r\nimport web3 from './web3';\r\n\r\nfunction Component2(){\r\n\r\n\r\n    let btn;\r\n  var accounts;\r\n\r\n  const connectmm = async () => {\r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n\r\nconst Component2 = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"main-cointainer\">\r\n\t\t\t<h2>Compnent2</h2>\r\n\t\t\t\r\n<p>{props.data} </p>\r\n\r\n\r\n<button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\t\t</div>\r\n\r\n\r\n\t)\r\n}\r\n}\r\n\r\nexport default Component2;\r\n"]},"metadata":{},"sourceType":"module"}