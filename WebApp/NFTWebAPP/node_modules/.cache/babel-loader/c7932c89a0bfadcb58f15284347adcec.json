{"ast":null,"code":"import Metadata from '../metadata';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n\n  return countryMetadata.defaultIDDPrefix();\n}","map":{"version":3,"sources":["../../source/helpers/getIddPrefix.js"],"names":["SINGLE_IDD_PREFIX_REG_EXP","countryMetadata"],"mappings":"AAAA,OAAA,QAAA,MAAA,aAAA;AAEA;;;;;;;;;;AASA,IAAMA,yBAAyB,GAA/B,wCAAA,C,CAEA;AACA;;AACA,eAAe,SAAA,YAAA,CAAA,OAAA,EAAA,WAAA,EAAA,QAAA,EAAsD;AACpE,MAAMC,eAAe,GAAG,IAAA,QAAA,CAAxB,QAAwB,CAAxB;AACAA,EAAAA,eAAe,CAAfA,mBAAAA,CAAAA,OAAAA,EAAAA,WAAAA;;AACA,MAAID,yBAAyB,CAAzBA,IAAAA,CAA+BC,eAAe,CAAlD,SAAmCA,EAA/BD,CAAJ,EAAiE;AAChE,WAAOC,eAAe,CAAtB,SAAOA,EAAP;AACA;;AACD,SAAOA,eAAe,CAAtB,gBAAOA,EAAP;AACA","sourcesContent":["import Metadata from '../metadata'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n\treturn countryMetadata.defaultIDDPrefix()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}