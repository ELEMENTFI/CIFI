{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [Loader, setLoader] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(false);\n    window.location.reload(false);\n  };\n\n  const {\n    oaddress,\n    key\n  } = useParams(); //const {key}=useParams()\n\n  const [getImgreff, setgetImgreff] = useState([]);\n  const [getIm, setgetIm] = useState([]);\n\n  const getImgpa = async () => {\n    //setLoader(true)\n    //setLoading(true)\n    //window.location.reload(false)\n    let req = [];\n    let req2 = [];\n    const sp = firebase.database().ref(\"imagerefexplore\").child(oaddress).child(key).on(\"value\", data => {\n      if (data) {\n        data.forEach(d => {\n          req.push(d.val());\n          req2.push({\n            //addAcc:\n            addKeyI: d.keyId,\n            addPrices: d.priceSet,\n            addcAdd: d.cAddress,\n            addIds: d.id,\n            addImgs: d.imageUrl,\n            addUname: d.userName,\n            addUsymbol: d.userSymbol,\n            addIpfs: d.ipfsUrl,\n            addOwnerAddress: d.ownerAddress,\n            addsold: d.soldd,\n            addextra1: d.extra1\n          });\n        });\n      }\n    });\n    alert(\"sp   \" + sp);\n    alert(\"sp data  \" + req2);\n  }; //     firebase.database().ref(\"imagerefexplore\").child(oaddress).child(key).on(\"value\", (data) => {\n  //       if (data) {\n  //         data.forEach((d) => {\n  //           req.push(d.val())\n  //         });\n  //       }\n  //     });\n  //     setgetImgreff(req)\n  //       getImgreff.map((a)=>{\n  //       console.log(`a`, a)\n  //       Object.keys(a).map((b)=>{\n  //         console.log(`bb`, b)\n  //         console.log(`bbnext`, a[b].imageUrl)\n  //         console.log(`bbaddess`,a[b].cAddress)\n  //         console.log(`bbprice`,a[b].priceSet)\n  //         console.log(`bbname`,a[b].userName)\n  //         console.log(`bbsymbol`,a[b].userSymbol)\n  //         console.log(`bbipfs`,a[b].ipfsUrl)\n  //         console.log(`bboaddress`,a[b].ownerAddress)\n  // //change here\n  //         req2.push({\n  //           //addAcc:\n  //           addKeyI:a[b].keyId,\n  //           addPrices:a[b].priceSet,\n  //           addcAdd:a[b].cAddress,\n  //           addIds:a[b].id,\n  //           addImgs:a[b].imageUrl,\n  //         addUname:a[b].userName,\n  //       addUsymbol:a[b].userSymbol,\n  //     addIpfs:a[b].ipfsUrl,\n  //     addOwnerAddress:a[b].ownerAddress,\n  //     addsold:a[b].soldd,\n  //     addextra1:a[b].extra1\n  //   })\n  //       })\n  //     })\n  //     setgetIm(req2)\n  //     console.log(\"cfb\",req) \n  //     setLoader(false)\n  //     setLoading(false)\n  //   }\n\n\n  useEffect(() => {\n    getImgpa();\n  }, [getIm]); //console.log(\"addressget\",address.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hellooooooooo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"a\", oaddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"k\", key]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayData, \"M4Y8fWG0Lg1U3ErvBnz6lUmysnw=\", false, function () {\n  return [useParams];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/DisplayData.js"],"names":["useParams","Link","firebase","React","useState","useEffect","DisplayData","isLoading","setLoading","isOpen","setIsOpen","Loader","setLoader","togglePopup","window","location","reload","oaddress","key","getImgreff","setgetImgreff","getIm","setgetIm","getImgpa","req","req2","sp","database","ref","child","on","data","forEach","d","push","val","addKeyI","keyId","addPrices","priceSet","addcAdd","cAddress","addIds","id","addImgs","imageUrl","addUname","userName","addUsymbol","userSymbol","addIpfs","ipfsUrl","addOwnerAddress","ownerAddress","addsold","soldd","addextra1","extra1","alert"],"mappings":"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","sourcesContent":["import {useParams,Link} from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport React, { useState,useEffect } from \"react\";\r\n\r\nconst DisplayData=()=>{\r\n\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const[Loader,setLoader]=useState(false);\r\n \r\n  const togglePopup = () => {\r\n    setIsOpen(false);\r\n\r\n    window.location.reload(false)\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n    const {oaddress,key}=useParams()\r\n\r\n    //const {key}=useParams()\r\n\r\n    const[getImgreff,setgetImgreff]=useState([]);\r\n\r\n    const[getIm,setgetIm]=useState([]);\r\n\r\n\r\n    const getImgpa = async() =>{\r\n\r\n        //setLoader(true)\r\n    \r\n        //setLoading(true)\r\n    \r\n        //window.location.reload(false)\r\n        let req = [];\r\n        let req2 = [];\r\n\r\n        const sp=firebase.database().ref(\"imagerefexplore\").child(oaddress).child(key).on(\"value\",(data)=>{\r\n            if(data){\r\n                data.forEach((d)=>{\r\n                    req.push(d.val())\r\n\r\n\r\n                            req2.push({\r\n              //addAcc:\r\n              addKeyI:d.keyId,\r\n              addPrices:d.priceSet,\r\n              addcAdd:d.cAddress,\r\n              addIds:d.id,\r\n              addImgs:d.imageUrl,\r\n            addUname:d.userName,\r\n          addUsymbol:d.userSymbol,\r\n        addIpfs:d.ipfsUrl,\r\n        addOwnerAddress:d.ownerAddress,\r\n        addsold:d.soldd,\r\n        addextra1:d.extra1\r\n    \r\n                            })\r\n\r\n\r\n\r\n\r\n                })\r\n            }\r\n        });\r\n\r\n        alert(\"sp   \"+sp)\r\n\r\n        alert(\"sp data  \"+req2)\r\n    }\r\n\r\n        \r\n    //     firebase.database().ref(\"imagerefexplore\").child(oaddress).child(key).on(\"value\", (data) => {\r\n    //       if (data) {\r\n    //         data.forEach((d) => {\r\n    //           req.push(d.val())\r\n              \r\n    //         });\r\n            \r\n    //       }\r\n    \r\n    //     });\r\n    \r\n    //     setgetImgreff(req)\r\n    \r\n    //       getImgreff.map((a)=>{\r\n    //       console.log(`a`, a)\r\n        \r\n    //       Object.keys(a).map((b)=>{\r\n        \r\n    //         console.log(`bb`, b)\r\n    //         console.log(`bbnext`, a[b].imageUrl)\r\n    //         console.log(`bbaddess`,a[b].cAddress)\r\n    //         console.log(`bbprice`,a[b].priceSet)\r\n    //         console.log(`bbname`,a[b].userName)\r\n    //         console.log(`bbsymbol`,a[b].userSymbol)\r\n    //         console.log(`bbipfs`,a[b].ipfsUrl)\r\n    //         console.log(`bboaddress`,a[b].ownerAddress)\r\n            \r\n    // //change here\r\n    //         req2.push({\r\n    //           //addAcc:\r\n    //           addKeyI:a[b].keyId,\r\n    //           addPrices:a[b].priceSet,\r\n    //           addcAdd:a[b].cAddress,\r\n    //           addIds:a[b].id,\r\n    //           addImgs:a[b].imageUrl,\r\n    //         addUname:a[b].userName,\r\n    //       addUsymbol:a[b].userSymbol,\r\n    //     addIpfs:a[b].ipfsUrl,\r\n    //     addOwnerAddress:a[b].ownerAddress,\r\n    //     addsold:a[b].soldd,\r\n    //     addextra1:a[b].extra1\r\n    \r\n    \r\n    //   })\r\n    \r\n                  \r\n    //       })\r\n    //     })\r\n        \r\n    //     setgetIm(req2)\r\n        \r\n    //     console.log(\"cfb\",req) \r\n    \r\n    //     setLoader(false)\r\n    \r\n      \r\n    //     setLoading(false)\r\n    \r\n    //   }\r\n    \r\n      \r\n    \r\n      useEffect(()=>{getImgpa()},[getIm])\r\n    \r\n\r\n\r\n\r\n    //console.log(\"addressget\",address.)\r\n\r\n    return(\r\n\r\n\r\n        <div>\r\n\r\n\r\n        <h1>hellooooooooo</h1>\r\n\r\n        <h2>a{oaddress}</h2>\r\n\r\n        <h2>k{key}</h2>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default DisplayData;"]},"metadata":{},"sourceType":"module"}