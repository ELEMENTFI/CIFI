{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { Router, Route, Switch, Link } from \"react-router-dom\";\n//import web3 from './web3';\n//import { ReactComponent as Logo } from './logo.svg';\n// import { Offline, Online } from \"react-detect-offline\";\n// import Popup from './Popup';\n\nimport firebaseConfig from './firebase';\nimport Login from './Logins'; //import Heros from './Heros';\n\nimport Explore from './Explore'; // import Followingpage from \"./Followingpage\";\n// import Activitypage from \"./Activitypage\";\n// import Howitworkpage from \"./Howitworkpage\";\n// import Communitypage from \"./Communitypage\";\n// import Salepagecopy from \"./Salepagecopy\";\n// import Nft from \"./Nft\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const phoneauth = () => {\n    alert(\"phonenumber app \", phonenumber + \"get\");\n  };\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n  const [phonenumber, setPhoneNumber] = useState('');\n\n  const handleLogin = () => {\n    clearErrors();\n    firebaseConfig.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      // eslint-disable-next-line default-case\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors(); // firebaseConfig\n    // .auth()\n    // .sendSignInLinkToEmail(email)\n    // .catch((err) =>{\n    //   // eslint-disable-next-line default-case\n    //   alert(err)\n    // });\n    // let recaptcha=new firebaseConfig.auth().RecaptchaVerifier('recaptcha');\n    // let number =\"+916383116826\";\n    // firebaseConfig.auth().signInWithPhoneNumber(number,recaptcha)\n    // .then(function(e){\n    //   let code=prompt('enter the otp','')\n    //   if(code === null){\n    //     alert(\"nulll\")\n    //   }\n    //   else{\n    //     e.confirm(code).then(function(result){\n    //       alert('user',result.user)\n    //     })\n    //   }\n    // }).catch((error)=>{\n    //   console.log(error)\n    // })\n    //   const actionCodeSettings = {\n    //     // URL you want to redirect back to. The domain (www.example.com) for this\n    //     // URL must be in the authorized domains list in the Firebase Console.\n    //     url: 'https://www.example.com/finishSignUp?cartId=1234',\n    //     // This must be true.\n    //     handleCodeInApp: true,\n    //     iOS: {\n    //       bundleId: 'com.example.ios'\n    //     },\n    //     android: {\n    //       packageName: 'com.example.android',\n    //       installApp: true,\n    //       minimumVersion: '12'\n    //     },\n    //     //example.page.link\n    //     dynamicLinkDomain: 'demonft-2e778.firebaseapp.com'\n    //   };\n    // firebaseConfig\n    // .auth()\n    // .sendSignInLinkToEmail(email,actionCodeSettings)\n    // .then(result => {\n    //   alert(\"result\",result)\n    //   // The link was successfully sent. Inform the user.\n    //   // Save the email locally so you don't need to ask the user for it again\n    //   // if they open the link on the same device.\n    //   window.localStorage.setItem('emailForSignIn', email);\n    // })\n    // .catch((error) => {\n    //   var errorCode = error.code;\n    //   var errorMessage = error.message;\n    //   alert(\"error alert-1  \"+errorCode)\n    //   alert(\"error alert-2  \"+errorMessage)\n    // });\n\n    firebaseConfig.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      // eslint-disable-next-line default-case\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebaseConfig.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(Explore, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignup: handleSignup,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError,\n      phonenumber: phonenumber,\n      phoneauth: phoneauth,\n      setPhoneNumber: setPhoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"PX4PY85IoWH5d1ASemubMBmoX9Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/App.js"],"names":["React","useState","useEffect","firebaseConfig","Login","Explore","App","phoneauth","alert","phonenumber","clearInputs","setEmail","setPassword","clearErrors","setEmailError","setPasswordError","user","setUser","email","password","emailError","passwordError","hasAccount","setHasAccount","setPhoneNumber","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\n\r\n//import { Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//import web3 from './web3';\r\n\r\n//import { ReactComponent as Logo } from './logo.svg';\r\n\r\n// import { Offline, Online } from \"react-detect-offline\";\r\n\r\n// import Popup from './Popup';\r\n\r\nimport firebaseConfig from './firebase';\r\n\r\nimport Login from './Logins';\r\n//import Heros from './Heros';\r\nimport Explore from './Explore';\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import Salepagecopy from \"./Salepagecopy\";\r\n// import Nft from \"./Nft\";\r\n\r\nconst App=() => {\r\n\r\n  \r\n\r\n  const phoneauth=()=>{\r\n    alert(\"phonenumber app \",phonenumber+\"get\")\r\n  }\r\n\r\n  const clearInputs=()=>{\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  }\r\n\r\n  const[user,setUser]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[emailError,setEmailError]=useState('');\r\n  const[passwordError,setPasswordError]=useState('');\r\n  const[hasAccount,setHasAccount]=useState(false);\r\n  const[phonenumber,setPhoneNumber]=useState('');\r\n  \r\n  \r\n  const handleLogin=()=>{\r\n\r\n    clearErrors();\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .signInWithEmailAndPassword(email,password)\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/invalid-email\":\r\n        case \"auth/user-disabled\":\r\n        case \"auth/user-not-found\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/wrong-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n\r\n  };\r\n\r\n  const handleSignup=()=>{\r\n\r\n\r\n    clearErrors();\r\n\r\n    // firebaseConfig\r\n    // .auth()\r\n    // .sendSignInLinkToEmail(email)\r\n    // .catch((err) =>{\r\n    //   // eslint-disable-next-line default-case\r\n\r\n    //   alert(err)\r\n      \r\n    // });\r\n\r\n    \r\n    // let recaptcha=new firebaseConfig.auth().RecaptchaVerifier('recaptcha');\r\n    // let number =\"+916383116826\";\r\n    // firebaseConfig.auth().signInWithPhoneNumber(number,recaptcha)\r\n    // .then(function(e){\r\n    //   let code=prompt('enter the otp','')\r\n\r\n    //   if(code === null){\r\n    //     alert(\"nulll\")\r\n    //   }\r\n    //   else{\r\n    //     e.confirm(code).then(function(result){\r\n    //       alert('user',result.user)\r\n    //     })\r\n    //   }\r\n\r\n    // }).catch((error)=>{\r\n    //   console.log(error)\r\n\r\n    // })\r\n\r\n  //   const actionCodeSettings = {\r\n  //     // URL you want to redirect back to. The domain (www.example.com) for this\r\n  //     // URL must be in the authorized domains list in the Firebase Console.\r\n  //     url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n  //     // This must be true.\r\n  //     handleCodeInApp: true,\r\n  //     iOS: {\r\n  //       bundleId: 'com.example.ios'\r\n  //     },\r\n  //     android: {\r\n  //       packageName: 'com.example.android',\r\n  //       installApp: true,\r\n  //       minimumVersion: '12'\r\n  //     },\r\n  //     //example.page.link\r\n  //     dynamicLinkDomain: 'demonft-2e778.firebaseapp.com'\r\n      \r\n  //   };\r\n\r\n  // firebaseConfig\r\n  // .auth()\r\n  // .sendSignInLinkToEmail(email,actionCodeSettings)\r\n  // .then(result => {\r\n\r\n  //   alert(\"result\",result)\r\n  //   // The link was successfully sent. Inform the user.\r\n  //   // Save the email locally so you don't need to ask the user for it again\r\n  //   // if they open the link on the same device.\r\n  //   window.localStorage.setItem('emailForSignIn', email);\r\n    \r\n  // })\r\n  // .catch((error) => {\r\n  //   var errorCode = error.code;\r\n    \r\n  //   var errorMessage = error.message;\r\n\r\n  //   alert(\"error alert-1  \"+errorCode)\r\n  //   alert(\"error alert-2  \"+errorMessage)\r\n    \r\n  // });\r\n\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email,password)\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/email-already-in-use\":\r\n        case \"auth/invalid-email\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/weak-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const handleLogout=()=>{\r\nfirebaseConfig.auth().signOut();\r\n\r\n  }\r\n\r\n  const authListener =()=>{\r\n\r\n    firebaseConfig.auth().onAuthStateChanged(user=>{\r\n\r\n      if(user){\r\n        clearInputs();\r\n        setUser(user);\r\n      }\r\n      else{\r\n        setUser('');\r\n      }\r\n\r\n    })\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    authListener()\r\n  },[]);\r\n\r\n\r\n  return(\r\n\r\n    <div>\r\n\r\n      {user ? (\r\n\r\n<Explore handleLogout={handleLogout} />\r\n\r\n        \r\n      ):(\r\n\r\n\r\n        <Login \r\nemail={email}\r\nsetEmail={setEmail}\r\npassword={password} \r\nsetPassword={setPassword} \r\nhandleLogin={handleLogin}\r\nhandleSignup={handleSignup}\r\nhasAccount={hasAccount}\r\nsetHasAccount={setHasAccount}\r\nemailError={emailError}\r\npasswordError={passwordError}\r\nphonenumber={phonenumber}\r\nphoneauth={phoneauth}\r\nsetPhoneNumber={setPhoneNumber}\r\n/>\r\n\r\n\r\n\r\n      )}\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n  );  \r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}