{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { Router, Route, Switch, Link } from \"react-router-dom\";\n//import web3 from './web3';\n//import { ReactComponent as Logo } from './logo.svg';\n// import { Offline, Online } from \"react-detect-offline\";\n// import Popup from './Popup';\n\nimport firebaseConfig from './firebase';\nimport Login from './Logins'; //import Heros from './Heros';\n\nimport Explore from './Explore'; // import Followingpage from \"./Followingpage\";\n// import Activitypage from \"./Activitypage\";\n// import Howitworkpage from \"./Howitworkpage\";\n// import Communitypage from \"./Communitypage\";\n// import Salepagecopy from \"./Salepagecopy\";\n// import Nft from \"./Nft\";\n//import {  RecaptchaVerifier } from \"firebase\";\n\nimport axios from 'axios';\nimport Popup from './Popup';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isOpenset, setIsOpenset] = useState(false);\n  const [tcode, setTcode] = useState(\"\");\n  const [statusadd, setStatusadd] = useState(\"\");\n  const [detailsadd, setDetailsadd] = useState(\"\");\n  const [isOpenNext, setIsOpenNext] = useState(false);\n  const [phoneNumberLo, setPhoneNumberLo] = useState('');\n  const [passwordPhoneLo, setpasswordPhoneLo] = useState(''); // let g1=localStorage.getItem('myPhoneNumber');\n  // let g2=localStorage.getItem('myPhonePass');\n  // if(g1!=='' && g2!==''){\n  //   setIsOpenNext(true);\n  // }\n\n  const togglePopupset = () => {\n    setIsOpenset(false);\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [passwordPhone, setpasswordPhone] = useState('');\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n  const [hasAccountO, setHasAccountO] = useState(false); //const[SignInM,setSignInM]=useState();\n  //const apikeyuri='https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/BAL/SMS';\n\n  const phoneAuthLogin = () => {\n    console.log(\"mbnumber\", phoneNumber);\n    console.log(\"mbpassword\", passwordPhone);\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('number').on(\"value\", data => {\n      if (data) {\n        console.log(\"mbc1\", data.val());\n        setPhoneNumberLo(data.val());\n      }\n    });\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('password').on(\"value\", data => {\n      if (data) {\n        console.log(\"mbc2\", data.val());\n        setpasswordPhoneLo(data.val());\n        localStorage.setItem('myPhoneNumber', phoneNumber);\n        localStorage.setItem('myPhonePass', passwordPhone);\n        setIsOpenNext(true);\n      }\n    }); // .then(()=>{setIsOpenNext(true)})\n    // if(phoneNumberLo === phoneNumber && passwordPhoneLo === passwordPhone){\n    //     console.log(\"loginphone\",\"success\");\n    // }\n  };\n\n  const phoneAuth = () => {\n    console.log(\"mbnumber\", phoneNumber);\n    console.log(\"mbpassword\", passwordPhone);\n    const apikeyuri = `https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/${phoneNumber}/AUTOGEN`;\n    axios.request(`${apikeyuri}`).then(response => {\n      setStatusadd(response.data.Status);\n      setDetailsadd(response.data.Details);\n      setIsOpenset(true); //console.log(\"resgog\",response.data.Status);\n      //   if(statusadd === 'Success' && detailsadd !== ' ')\n      // {\n      // }else{          \n      // }         \n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  const setotpCheck = () => {\n    setIsOpenset(false);\n    localStorage.setItem('myPhoneNumber', phoneNumber);\n    localStorage.setItem('myPhonePass', passwordPhone);\n    let apiuriotp = `https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/VERIFY/${detailsadd}/${tcode}`;\n    console.log(\"fir1\", statusadd);\n    console.log(\"fir2\", detailsadd);\n    console.log(\"fir3\", tcode);\n    axios.get(`${apiuriotp}`).then(response => {\n      setUser(true);\n      console.log(\"resgogotp\", response.data.Details);\n      let ref2 = firebaseConfig.database().ref(`mobilenumber/${phoneNumber}`);\n      const db = ref2.push().key;\n      console.log(\"dbcheckappjs\", db);\n      ref2.set({\n        id: db,\n        profileimageUrl: \"\",\n        name: \"\",\n        number: phoneNumber,\n        password: passwordPhone\n      });\n      setIsOpenNext(true); //   if(statusadd === 'Success' && detailsadd !== ' ')\n      // {\n      //   setIsOpenset(true);\n      // }else{\n      // }\n    }).catch(error => console.error(`Error: ${error}`));\n  }; // const auth = firebaseConfig.auth();\n  // auth.languageCode = 'it';\n  // const appVerifier = window.recaptchaVerifier;\n  // // To apply the default browser preference instead of explicitly setting it.\n  // // firebase.auth().useDeviceLanguage();\n  // window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n  //   'size': 'normal',\n  //   'callback': (response) => {\n  //     // reCAPTCHA solved, allow signInWithPhoneNumber.\n  //     // ...\n  //     firebaseConfig.auth().signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n  //     .then((confirmationResult) => {\n  //       // SMS sent. Prompt user to type the code from the message, then sign the\n  //       // user in with confirmationResult.confirm(code).\n  //       window.confirmationResult = confirmationResult;\n  //       // ...\n  //     }).catch((error) => {\n  //       // Error; SMS not sent\n  //       // ...\n  //     });\n  //   },\n  //   'expired-callback': () => {\n  //     // Response expired. Ask user to solve reCAPTCHA again.\n  //     // ...\n  //   }\n  // }, auth);\n  // const setuprecaptcha =()=>{\n  //   window.recaptchaVerifier = new firebaseConfig.auth.RecaptchaVerifier('recaptcha-container', {\n  //       size: 'invisible',\n  //       callback: function (response) {\n  //           console.log(\"recature resolved\")\n  //           this.onSignInSubmit();\n  //       }\n  //   });\n  // }\n  //const phoneAuth=(event) =>{\n  // event.preventDefault();\n  // setuprecaptcha();\n  // //var phoneNumber = valu;\n  // var appVerifier = window.recaptchaVerifier;\n  // firebaseConfig.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n  //     .then(function (confirmationResult) {\n  //         console.log(\"Success\");\n  //         // SMS sent. Prompt user to type the code from the message, then sign the\n  //         // user in with confirmationResult.confirm(code).\n  //         window.confirmationResult = confirmationResult;\n  //         var verificationId = window.prompt(\"Enter otp\")\n  //         confirmationResult\n  //             .confirm(verificationId)\n  //             .then(function (result) {\n  //                 // User signed in successfully.\n  //                 var user = result.user;\n  //                 user.getIdToken().then(idToken => {\n  //                     window.localStorage.setItem('idToken', idToken);\n  //                     console.log(idToken);\n  //                 });\n  //             })\n  //             .catch(function (error) {\n  //                 // User couldn't sign in (bad verification code?)\n  //                 console.error(\"Error while checking the verification code\", error);\n  //                 window.alert(\n  //                     \"Error while checking the verification code:\\n\\n\" +\n  //                     error.code +\n  //                     \"\\n\\n\" +\n  //                     error.message\n  //                 );\n  //             });\n  //     })\n  //     .catch(function (error) {\n  //         console.log(\"sign Up error:\" + error.code);\n  //     });\n  //}\n  //const phoneAuth=()=>{\n  // let recaptcha=new firebaseConfig.auth.RecaptchaVerifier('recaptcha');\n  // let numberss=phoneNumber;\n  // firebaseConfig.auth().signInWithPhoneNumber(numberss,recaptcha).then(function(e){\n  //   let code=prompt('enter otp');\n  //   if(code === null){\n  //     return;\n  //   }else{\n  //     e.confirm(code).then(function(result){\n  //       console.log(\"presult\",result.user);\n  //     })\n  //   }\n  // }).catch((error)=>{\n  //   console.log(\"perror\",error);\n  // })\n  // console.log(\"resp\",phoneNumber);\n  //     firebaseConfig.auth().signInWithPhoneNumber(phoneNumber)\n  // .then((confirmationResult) => {\n  //   // SMS sent. Prompt user to type the code from the message, then sign the\n  //   // user in with confirmationResult.confirm(code).\n  //   window.confirmationResult = confirmationResult;\n  //   console.log(\"res1\",confirmationResult);\n  //   // ...\n  // }).catch((error) => {\n  //   // Error; SMS not sent\n  //   // ...\n  //   console.log(\"res2\",error);\n  // });\n  //}\n\n\n  const handleLogin = () => {\n    clearErrors(); //alert(\"email\",email)\n    //console.log(\"emails\",email)\n\n    firebaseConfig.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      // eslint-disable-next-line default-case\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors(); // firebaseConfig\n    // .auth()\n    // .sendSignInLinkToEmail(email)\n    // .catch((err) =>{\n    //   // eslint-disable-next-line default-case\n    //   alert(err)\n    // });\n    // let recaptcha=new firebaseConfig.auth().RecaptchaVerifier('recaptcha');\n    // let number =\"+916383116826\";\n    // firebaseConfig.auth().signInWithPhoneNumber(number,recaptcha)\n    // .then(function(e){\n    //   let code=prompt('enter the otp','')\n    //   if(code === null){\n    //     alert(\"nulll\")\n    //   }\n    //   else{\n    //     e.confirm(code).then(function(result){\n    //       alert('user',result.user)\n    //     })\n    //   }\n    // }).catch((error)=>{\n    //   console.log(error)\n    // })\n    //   const actionCodeSettings = {\n    //     // URL you want to redirect back to. The domain (www.example.com) for this\n    //     // URL must be in the authorized domains list in the Firebase Console.\n    //     url: 'https://www.example.com/finishSignUp?cartId=1234',\n    //     // This must be true.\n    //     handleCodeInApp: true,\n    //     iOS: {\n    //       bundleId: 'com.example.ios'\n    //     },\n    //     android: {\n    //       packageName: 'com.example.android',\n    //       installApp: true,\n    //       minimumVersion: '12'\n    //     },\n    //     //example.page.link\n    //     dynamicLinkDomain: 'demonft-2e778.firebaseapp.com'\n    //   };\n    // firebaseConfig\n    // .auth()\n    // .sendSignInLinkToEmail(email,actionCodeSettings)\n    // .then(result => {\n    //   alert(\"result\",result)\n    //   // The link was successfully sent. Inform the user.\n    //   // Save the email locally so you don't need to ask the user for it again\n    //   // if they open the link on the same device.\n    //   window.localStorage.setItem('emailForSignIn', email);\n    // })\n    // .catch((error) => {\n    //   var errorCode = error.code;\n    //   var errorMessage = error.message;\n    //   alert(\"error alert-1  \"+errorCode)\n    //   alert(\"error alert-2  \"+errorMessage)\n    // });\n\n    firebaseConfig.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      // eslint-disable-next-line default-case\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebaseConfig.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user ? /*#__PURE__*/_jsxDEV(Explore, {\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        email: email,\n        setEmail: setEmail,\n        password: password,\n        setPassword: setPassword,\n        handleLogin: handleLogin,\n        handleSignup: handleSignup,\n        hasAccount: hasAccount,\n        setHasAccount: setHasAccount,\n        emailError: emailError,\n        passwordError: passwordError,\n        phonenumber: phoneNumber,\n        phoneAuth: phoneAuth,\n        setPhoneNumber: setPhoneNumber,\n        setpasswordPhone: setpasswordPhone,\n        passwordPhone: passwordPhone,\n        phoneAuthLogin: phoneAuthLogin,\n        hasAccountO: hasAccountO,\n        setHasAccountO: setHasAccountO // SignInM={SignInM}\n        //phoneAuth={phoneAuth}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 1\n    }, this), isOpenset && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter otp \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: tcode,\n            placeholder: \"Enter otp\",\n            onChange: e => {\n              setTcode(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setotpCheck();\n            },\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true),\n      handleClose: togglePopupset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 15\n    }, this), isOpenNext && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login successfully \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/explore\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) //  handleClose={togglePopupset}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mcNtjWkAWnfk9rAAOaSzCK8JfJ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/App.js"],"names":["React","useState","useEffect","firebaseConfig","Login","Explore","axios","Popup","Link","App","isOpenset","setIsOpenset","tcode","setTcode","statusadd","setStatusadd","detailsadd","setDetailsadd","isOpenNext","setIsOpenNext","phoneNumberLo","setPhoneNumberLo","passwordPhoneLo","setpasswordPhoneLo","togglePopupset","phoneNumber","setPhoneNumber","passwordPhone","setpasswordPhone","clearInputs","setEmail","setPassword","clearErrors","setEmailError","setPasswordError","user","setUser","email","password","emailError","passwordError","hasAccount","setHasAccount","hasAccountO","setHasAccountO","phoneAuthLogin","console","log","database","ref","child","on","data","val","localStorage","setItem","phoneAuth","apikeyuri","request","then","response","Status","Details","catch","error","setotpCheck","apiuriotp","get","ref2","db","push","key","set","id","profileimageUrl","name","number","handleLogin","auth","signInWithEmailAndPassword","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\n\r\n//import { Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n//import web3 from './web3';\r\n\r\n//import { ReactComponent as Logo } from './logo.svg';\r\n\r\n// import { Offline, Online } from \"react-detect-offline\";\r\n\r\n// import Popup from './Popup';\r\n\r\nimport firebaseConfig from './firebase';\r\n\r\nimport Login from './Logins';\r\n//import Heros from './Heros';\r\nimport Explore from './Explore';\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from \"./Activitypage\";\r\n// import Howitworkpage from \"./Howitworkpage\";\r\n// import Communitypage from \"./Communitypage\";\r\n// import Salepagecopy from \"./Salepagecopy\";\r\n// import Nft from \"./Nft\";\r\n//import {  RecaptchaVerifier } from \"firebase\";\r\n\r\nimport axios from 'axios';\r\nimport Popup from './Popup';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst App=() => {\r\n\r\n  const [isOpenset, setIsOpenset] = useState(false);\r\n\r\n  const [tcode,setTcode] = useState(\"\");\r\n\r\n  const[statusadd,setStatusadd]=useState(\"\");\r\n\r\n  const[detailsadd,setDetailsadd]=useState(\"\");\r\n\r\n  const [isOpenNext, setIsOpenNext] = useState(false);\r\n\r\n  const[phoneNumberLo,setPhoneNumberLo]=useState('');  \r\n  const[passwordPhoneLo,setpasswordPhoneLo]=useState('');  \r\n\r\n  // let g1=localStorage.getItem('myPhoneNumber');\r\n  // let g2=localStorage.getItem('myPhonePass');\r\n\r\n\r\n\r\n  // if(g1!=='' && g2!==''){\r\n\r\n  //   setIsOpenNext(true);\r\n\r\n  // }\r\n\r\n\r\n  const togglePopupset = () => {\r\n    setIsOpenset(false);    \r\n  }\r\n\r\n\r\n\r\n  const[phoneNumber,setPhoneNumber]=useState('');  \r\n  const[passwordPhone,setpasswordPhone]=useState('');  \r\n\r\n  const clearInputs=()=>{\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  }\r\n\r\n  const[user,setUser]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[emailError,setEmailError]=useState('');\r\n  const[passwordError,setPasswordError]=useState('');\r\n  const[hasAccount,setHasAccount]=useState(false);\r\n  const[hasAccountO,setHasAccountO]=useState(false);\r\n\r\n  //const[SignInM,setSignInM]=useState();\r\n\r\n  \r\n  //const apikeyuri='https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/BAL/SMS';\r\n\r\n  const phoneAuthLogin=()=>{\r\n    \r\n\r\n    console.log(\"mbnumber\",phoneNumber);\r\n    console.log(\"mbpassword\",passwordPhone);\r\n\r\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('number').on(\"value\",(data)=>{\r\n      if(data){\r\n       console.log(\"mbc1\",data.val());\r\n       setPhoneNumberLo(data.val());\r\n      }\r\n    });\r\n    firebaseConfig.database().ref(\"mobilenumber\").child(phoneNumber).child('password').on(\"value\",(data)=>{\r\n      if(data){\r\n        console.log(\"mbc2\",data.val());\r\n        setpasswordPhoneLo(data.val());\r\n\r\n        localStorage.setItem('myPhoneNumber',phoneNumber); \r\n        localStorage.setItem('myPhonePass',passwordPhone); \r\n        setIsOpenNext(true);\r\n\r\n      }\r\n    });\r\n\r\n\r\n\r\n    \r\n\r\n    // .then(()=>{setIsOpenNext(true)})\r\n    \r\n\r\n    // if(phoneNumberLo === phoneNumber && passwordPhoneLo === passwordPhone){\r\n    //     console.log(\"loginphone\",\"success\");\r\n    // }\r\n\r\n  }\r\n\r\n  \r\n\r\n  const phoneAuth=()=>{\r\n\r\n    console.log(\"mbnumber\",phoneNumber);\r\n    console.log(\"mbpassword\",passwordPhone);\r\n    const apikeyuri=`https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/${phoneNumber}/AUTOGEN`;\r\n\r\n    axios.request(`${apikeyuri}`)\r\n        .then((response)=>{\r\n          \r\n          setStatusadd(response.data.Status);\r\n          setDetailsadd(response.data.Details);\r\n\r\n          setIsOpenset(true);\r\n\r\n          //console.log(\"resgog\",response.data.Status);\r\n\r\n        //   if(statusadd === 'Success' && detailsadd !== ' ')\r\n        // {\r\n        // }else{          \r\n        // }         \r\n        }).catch(error => console.error(`Error: ${error}`));       \r\n    \r\n  }\r\n\r\n  const setotpCheck=()=>{\r\n\r\n    setIsOpenset(false); \r\n\r\n    \r\n    localStorage.setItem('myPhoneNumber',phoneNumber); \r\n    localStorage.setItem('myPhonePass',passwordPhone); \r\n\r\n    let apiuriotp=`https://2factor.in/API/V1/0824764a-ac0e-11eb-80ea-0200cd936042/SMS/VERIFY/${detailsadd}/${tcode}`\r\n    console.log(\"fir1\",statusadd);\r\n    console.log(\"fir2\",detailsadd);\r\n    console.log(\"fir3\",tcode);\r\n\r\n\r\n    axios.get(`${apiuriotp}`)\r\n        .then((response)=>{\r\n\r\n          setUser(true);\r\n          console.log(\"resgogotp\",response.data.Details);\r\n\r\n          let ref2=firebaseConfig.database().ref(`mobilenumber/${phoneNumber}`);\r\n\r\n                        const db = ref2.push().key;\r\n\r\n                         \r\n                        console.log(\"dbcheckappjs\",db)\r\n\r\n                        ref2.set({id:db,profileimageUrl:\"\",name:\"\",number:phoneNumber,password:passwordPhone})\r\n\r\n\r\n          setIsOpenNext(true);\r\n\r\n        //   if(statusadd === 'Success' && detailsadd !== ' ')\r\n        // {\r\n\r\n\r\n        //   setIsOpenset(true);\r\n\r\n        // }else{\r\n          \r\n        // }\r\n         \r\n          \r\n        }).catch(error => console.error(`Error: ${error}`));       \r\n\r\n  }\r\n  \r\n\r\n// const auth = firebaseConfig.auth();\r\n// auth.languageCode = 'it';\r\n// const appVerifier = window.recaptchaVerifier;\r\n\r\n// // To apply the default browser preference instead of explicitly setting it.\r\n// // firebase.auth().useDeviceLanguage();\r\n\r\n// window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n//   'size': 'normal',\r\n//   'callback': (response) => {\r\n//     // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n//     // ...\r\n\r\n//     firebaseConfig.auth().signInWithPhoneNumber(auth, phoneNumber, appVerifier)\r\n//     .then((confirmationResult) => {\r\n//       // SMS sent. Prompt user to type the code from the message, then sign the\r\n//       // user in with confirmationResult.confirm(code).\r\n//       window.confirmationResult = confirmationResult;\r\n//       // ...\r\n//     }).catch((error) => {\r\n//       // Error; SMS not sent\r\n//       // ...\r\n//     });\r\n\r\n\r\n\r\n//   },\r\n//   'expired-callback': () => {\r\n//     // Response expired. Ask user to solve reCAPTCHA again.\r\n//     // ...\r\n//   }\r\n// }, auth);\r\n\r\n\r\n// const setuprecaptcha =()=>{\r\n//   window.recaptchaVerifier = new firebaseConfig.auth.RecaptchaVerifier('recaptcha-container', {\r\n//       size: 'invisible',\r\n//       callback: function (response) {\r\n//           console.log(\"recature resolved\")\r\n//           this.onSignInSubmit();\r\n//       }\r\n//   });\r\n\r\n// }\r\n\r\n\r\n//const phoneAuth=(event) =>{\r\n\r\n  \r\n    \r\n  // event.preventDefault();\r\n  // setuprecaptcha();\r\n  // //var phoneNumber = valu;\r\n  // var appVerifier = window.recaptchaVerifier;\r\n  // firebaseConfig.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n  //     .then(function (confirmationResult) {\r\n  //         console.log(\"Success\");\r\n  //         // SMS sent. Prompt user to type the code from the message, then sign the\r\n  //         // user in with confirmationResult.confirm(code).\r\n  //         window.confirmationResult = confirmationResult;\r\n  //         var verificationId = window.prompt(\"Enter otp\")\r\n  //         confirmationResult\r\n  //             .confirm(verificationId)\r\n  //             .then(function (result) {\r\n  //                 // User signed in successfully.\r\n  //                 var user = result.user;\r\n  //                 user.getIdToken().then(idToken => {\r\n  //                     window.localStorage.setItem('idToken', idToken);\r\n\r\n                     \r\n  //                     console.log(idToken);\r\n  //                 });\r\n  //             })\r\n  //             .catch(function (error) {\r\n  //                 // User couldn't sign in (bad verification code?)\r\n  //                 console.error(\"Error while checking the verification code\", error);\r\n  //                 window.alert(\r\n  //                     \"Error while checking the verification code:\\n\\n\" +\r\n  //                     error.code +\r\n  //                     \"\\n\\n\" +\r\n  //                     error.message\r\n  //                 );\r\n  //             });\r\n\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //         console.log(\"sign Up error:\" + error.code);\r\n  //     });\r\n\r\n//}\r\n\r\n\r\n  //const phoneAuth=()=>{\r\n\r\n    // let recaptcha=new firebaseConfig.auth.RecaptchaVerifier('recaptcha');\r\n    // let numberss=phoneNumber;\r\n    // firebaseConfig.auth().signInWithPhoneNumber(numberss,recaptcha).then(function(e){\r\n    //   let code=prompt('enter otp');\r\n    //   if(code === null){\r\n\r\n    //     return;\r\n\r\n    //   }else{\r\n\r\n    //     e.confirm(code).then(function(result){\r\n    //       console.log(\"presult\",result.user);\r\n\r\n    //     })\r\n\r\n    //   }\r\n    // }).catch((error)=>{\r\n    //   console.log(\"perror\",error);\r\n    // })\r\n    \r\n    // console.log(\"resp\",phoneNumber);\r\n\r\n    //     firebaseConfig.auth().signInWithPhoneNumber(phoneNumber)\r\n    // .then((confirmationResult) => {\r\n    //   // SMS sent. Prompt user to type the code from the message, then sign the\r\n    //   // user in with confirmationResult.confirm(code).\r\n    //   window.confirmationResult = confirmationResult;\r\n    //   console.log(\"res1\",confirmationResult);\r\n    //   // ...\r\n    // }).catch((error) => {\r\n    //   // Error; SMS not sent\r\n    //   // ...\r\n    //   console.log(\"res2\",error);\r\n    // });\r\n\r\n  //}\r\n  \r\n  \r\n  \r\n  const handleLogin=()=>{\r\n\r\n    clearErrors();\r\n\r\n\r\n    //alert(\"email\",email)\r\n\r\n    //console.log(\"emails\",email)\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .signInWithEmailAndPassword(email,password)\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/invalid-email\":\r\n        case \"auth/user-disabled\":\r\n        case \"auth/user-not-found\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/wrong-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n\r\n  };\r\n\r\n  const handleSignup=()=>{\r\n\r\n\r\n    clearErrors();\r\n\r\n    // firebaseConfig\r\n    // .auth()\r\n    // .sendSignInLinkToEmail(email)\r\n    // .catch((err) =>{\r\n    //   // eslint-disable-next-line default-case\r\n\r\n    //   alert(err)\r\n      \r\n    // });\r\n\r\n    \r\n    // let recaptcha=new firebaseConfig.auth().RecaptchaVerifier('recaptcha');\r\n    // let number =\"+916383116826\";\r\n    // firebaseConfig.auth().signInWithPhoneNumber(number,recaptcha)\r\n    // .then(function(e){\r\n    //   let code=prompt('enter the otp','')\r\n\r\n    //   if(code === null){\r\n    //     alert(\"nulll\")\r\n    //   }\r\n    //   else{\r\n    //     e.confirm(code).then(function(result){\r\n    //       alert('user',result.user)\r\n    //     })\r\n    //   }\r\n\r\n    // }).catch((error)=>{\r\n    //   console.log(error)\r\n\r\n    // })\r\n\r\n  //   const actionCodeSettings = {\r\n  //     // URL you want to redirect back to. The domain (www.example.com) for this\r\n  //     // URL must be in the authorized domains list in the Firebase Console.\r\n  //     url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n  //     // This must be true.\r\n  //     handleCodeInApp: true,\r\n  //     iOS: {\r\n  //       bundleId: 'com.example.ios'\r\n  //     },\r\n  //     android: {\r\n  //       packageName: 'com.example.android',\r\n  //       installApp: true,\r\n  //       minimumVersion: '12'\r\n  //     },\r\n  //     //example.page.link\r\n  //     dynamicLinkDomain: 'demonft-2e778.firebaseapp.com'\r\n      \r\n  //   };\r\n\r\n  // firebaseConfig\r\n  // .auth()\r\n  // .sendSignInLinkToEmail(email,actionCodeSettings)\r\n  // .then(result => {\r\n\r\n  //   alert(\"result\",result)\r\n  //   // The link was successfully sent. Inform the user.\r\n  //   // Save the email locally so you don't need to ask the user for it again\r\n  //   // if they open the link on the same device.\r\n  //   window.localStorage.setItem('emailForSignIn', email);\r\n    \r\n  // })\r\n  // .catch((error) => {\r\n  //   var errorCode = error.code;\r\n    \r\n  //   var errorMessage = error.message;\r\n\r\n  //   alert(\"error alert-1  \"+errorCode)\r\n  //   alert(\"error alert-2  \"+errorMessage)\r\n    \r\n  // });\r\n\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email,password)\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/email-already-in-use\":\r\n        case \"auth/invalid-email\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/weak-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const handleLogout=()=>{\r\nfirebaseConfig.auth().signOut();\r\n\r\n  }\r\n\r\n  const authListener =()=>{\r\n\r\n    firebaseConfig.auth().onAuthStateChanged(user=>{\r\n\r\n      if(user){\r\n        clearInputs();\r\n        setUser(user);\r\n      }\r\n      else{\r\n        setUser('');\r\n      }\r\n\r\n    })\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    authListener()\r\n  },[]);\r\n\r\n\r\n  return(\r\n\r\n\r\n\r\n    <div>\r\n\r\n<div>\r\n{/* <button type=\"button\" onClick={setSignInM(true)} style={{width:'210px'}}>sign-in with Email</button>\r\n<br></br>\r\n<br></br>\r\n<button type=\"button\" onClick={setSignInM(false)} style={{width:'210px'}}>sign-in with Mobile-Number</button> */}\r\n\r\n\r\n</div>\r\n\r\n\r\n<div>\r\n\r\n      {user ? (\r\n<Explore handleLogout={handleLogout} />\r\n      ):(\r\n\r\n        <Login \r\nemail={email}\r\nsetEmail={setEmail}\r\npassword={password} \r\nsetPassword={setPassword} \r\nhandleLogin={handleLogin}\r\nhandleSignup={handleSignup}\r\nhasAccount={hasAccount}\r\nsetHasAccount={setHasAccount}\r\nemailError={emailError}\r\npasswordError={passwordError}\r\nphonenumber={phoneNumber}\r\nphoneAuth={phoneAuth}\r\nsetPhoneNumber={setPhoneNumber}\r\nsetpasswordPhone={setpasswordPhone}\r\npasswordPhone={passwordPhone}\r\nphoneAuthLogin={phoneAuthLogin}\r\nhasAccountO={hasAccountO}\r\nsetHasAccountO={setHasAccountO}\r\n// SignInM={SignInM}\r\n\r\n//phoneAuth={phoneAuth}\r\n/>\r\n      )}\r\n</div>\r\n\r\n\r\n\r\n{isOpenset && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Enter otp </p>\r\n        <center>\r\n      <input\r\n        type=\"number\"\r\n        value={tcode}\r\n        placeholder=\"Enter otp\"\r\n        onChange={e => {\r\n          setTcode(e.target.value);\r\n        }}\r\n      />\r\n      <br></br>\r\n      <br></br>\r\n\r\n        <button type=\"button\" onClick={()=>{setotpCheck()}}>submit</button>\r\n        </center>\r\n      </>}\r\n       handleClose={togglePopupset}\r\n    />}\r\n\r\n\r\n\r\n{isOpenNext && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Login successfully </p>\r\n        <center>\r\n      \r\n        <Link\r\n              to=\"/explore\">\r\n\r\n        <button type=\"button\">Done</button>\r\n\r\n        </Link>\r\n        </center>\r\n      </>}\r\n      //  handleClose={togglePopupset}\r\n    />}\r\n\r\n      </div>\r\n\r\n  );  \r\n\r\n  \r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}