{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\nimport web3 from './web3';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./logo.svg\";\nimport { Offline, Online } from \"react-detect-offline\";\nimport Popup from './Popup';\nimport firebaseConfig from './firebase';\nimport Login from './Logins';\nimport Heros from './Heros';\nimport Explore from './Explore';\nimport Followingpage from \"./Followingpage\";\nimport Activitypage from \"./Activitypage\";\nimport Howitworkpage from \"./Howitworkpage\";\nimport Communitypage from \"./Communitypage\";\nimport Salepagecopy from \"./Salepagecopy\";\nimport Nft from \"./Nft\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const handleLogin = () => {\n    clearErrors();\n    firebaseConfig.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      // eslint-disable-next-line default-case\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    const actionCodeSettings = {\n      // URL you want to redirect back to. The domain (www.example.com) for this\n      // URL must be in the authorized domains list in the Firebase Console.\n      url: 'https://www.example.com/finishSignUp?cartId=1234',\n      // This must be true.\n      handleCodeInApp: true,\n      iOS: {\n        bundleId: 'com.example.ios'\n      },\n      android: {\n        packageName: 'com.example.android',\n        installApp: true,\n        minimumVersion: '12'\n      },\n      dynamicLinkDomain: 'example.page.link'\n    }; // firebaseConfig\n    // .auth()\n    // .createUserWithEmailAndPassword(email,password)\n    // .catch((err) =>{\n    //   // eslint-disable-next-line default-case\n    //   switch(err.code) {\n    //     case \"auth/email-already-in-use\":\n    //     case \"auth/invalid-email\":\n    //          setEmailError(err.message);\n    //          break;\n    //     case \"auth/weak-password\":\n    //       setPasswordError(err.message);\n    //       break;\n    //   }\n    // });\n    // const auth = firebaseConfig.auth();\n    // firebaseConfig.auth().sendSignInLinkToEmail(email)\n    // .then(() => {\n    //   // The link was successfully sent. Inform the user.\n    //   // Save the email locally so you don't need to ask the user for it again\n    //   // if they open the link on the same device.\n    //   window.localStorage.setItem('emailForSignIn', email);\n    //   // ...\n    // })\n    // .catch((error) => {\n    //   alert( error.code);\n    //   // ...\n    // });\n  };\n\n  const handleLogout = () => {\n    firebaseConfig.auth().signOut();\n  };\n\n  const authListener = () => {\n    firebaseConfig.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(Explore, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignup: handleSignup,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0mJruItp/jqQR0wX5bhA2fZdhDE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/App.js"],"names":["React","useState","useEffect","Router","Route","Switch","Link","web3","Offline","Online","Popup","firebaseConfig","Login","Heros","Explore","Followingpage","Activitypage","Howitworkpage","Communitypage","Salepagecopy","Nft","App","clearInputs","setEmail","setPassword","clearErrors","setEmailError","setPasswordError","user","setUser","email","password","emailError","passwordError","hasAccount","setHasAccount","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","actionCodeSettings","url","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","dynamicLinkDomain","handleLogout","signOut","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\n\r\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport web3 from './web3';\r\n\r\nimport { ReactComponent as Logo } from './logo.svg';\r\n\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\n\r\nimport firebaseConfig from './firebase';\r\n\r\nimport Login from './Logins';\r\nimport Heros from './Heros';\r\nimport Explore from './Explore';\r\nimport Followingpage from \"./Followingpage\";\r\nimport Activitypage from \"./Activitypage\";\r\nimport Howitworkpage from \"./Howitworkpage\";\r\nimport Communitypage from \"./Communitypage\";\r\nimport Salepagecopy from \"./Salepagecopy\";\r\nimport Nft from \"./Nft\";\r\n\r\nconst App=() => {\r\n\r\n  const clearInputs=()=>{\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const clearErrors=()=>{\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  }\r\n\r\n  const[user,setUser]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[emailError,setEmailError]=useState('');\r\n  const[passwordError,setPasswordError]=useState('');\r\n  const[hasAccount,setHasAccount]=useState(false);\r\n  \r\n  const handleLogin=()=>{\r\n\r\n    clearErrors();\r\n\r\n    firebaseConfig\r\n    .auth()\r\n    .signInWithEmailAndPassword(email,password)\r\n    .catch((err) =>{\r\n      // eslint-disable-next-line default-case\r\n      switch(err.code) {\r\n        case \"auth/invalid-email\":\r\n        case \"auth/user-disabled\":\r\n        case \"auth/user-not-found\":\r\n             setEmailError(err.message);\r\n             break;\r\n        case \"auth/wrong-password\":\r\n          setPasswordError(err.message);\r\n          break;\r\n        \r\n      }\r\n    });\r\n\r\n\r\n  };\r\n\r\n  const handleSignup=()=>{\r\n\r\n\r\n    clearErrors();\r\n\r\n    const actionCodeSettings = {\r\n      // URL you want to redirect back to. The domain (www.example.com) for this\r\n      // URL must be in the authorized domains list in the Firebase Console.\r\n      url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n      // This must be true.\r\n      handleCodeInApp: true,\r\n      iOS: {\r\n        bundleId: 'com.example.ios'\r\n      },\r\n      android: {\r\n        packageName: 'com.example.android',\r\n        installApp: true,\r\n        minimumVersion: '12'\r\n      },\r\n      dynamicLinkDomain: 'example.page.link'\r\n    };\r\n\r\n\r\n    // firebaseConfig\r\n    // .auth()\r\n    // .createUserWithEmailAndPassword(email,password)\r\n    // .catch((err) =>{\r\n    //   // eslint-disable-next-line default-case\r\n    //   switch(err.code) {\r\n    //     case \"auth/email-already-in-use\":\r\n    //     case \"auth/invalid-email\":\r\n    //          setEmailError(err.message);\r\n    //          break;\r\n    //     case \"auth/weak-password\":\r\n    //       setPasswordError(err.message);\r\n    //       break;\r\n        \r\n    //   }\r\n    // });\r\n\r\n\r\n    // const auth = firebaseConfig.auth();\r\n    // firebaseConfig.auth().sendSignInLinkToEmail(email)\r\n    // .then(() => {\r\n    //   // The link was successfully sent. Inform the user.\r\n    //   // Save the email locally so you don't need to ask the user for it again\r\n    //   // if they open the link on the same device.\r\n    //   window.localStorage.setItem('emailForSignIn', email);\r\n    //   // ...\r\n    // })\r\n    // .catch((error) => {\r\n    //   alert( error.code);\r\n      \r\n    //   // ...\r\n    // });\r\n  };\r\n\r\n\r\n  const handleLogout=()=>{\r\nfirebaseConfig.auth().signOut();\r\n\r\n  }\r\n\r\n  const authListener =()=>{\r\n\r\n    firebaseConfig.auth().onAuthStateChanged(user=>{\r\n\r\n      if(user){\r\n        clearInputs();\r\n        setUser(user);\r\n      }\r\n      else{\r\n        setUser('');\r\n      }\r\n\r\n    })\r\n\r\n  };\r\n\r\n  useEffect(()=>{\r\n    authListener()\r\n  },[]);\r\n\r\n\r\n  return(\r\n\r\n    <div>\r\n\r\n      {user ? (\r\n\r\n<Explore handleLogout={handleLogout} />\r\n\r\n        \r\n      ):(\r\n\r\n\r\n        <Login \r\nemail={email}\r\nsetEmail={setEmail}\r\npassword={password} \r\nsetPassword={setPassword} \r\nhandleLogin={handleLogin}\r\nhandleSignup={handleSignup}\r\nhasAccount={hasAccount}\r\nsetHasAccount={setHasAccount}\r\nemailError={emailError}\r\npasswordError={passwordError}\r\n/>\r\n\r\n\r\n\r\n      )}\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n  );  \r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}