{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import TextField from '@material-ui/core/TextField';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n//import React from \"react\";\n\nimport { Router, Route, Switch, Link } from \"react-router-dom\"; // import history from \"./utils/history\";\n// import Nf from \"./Nft\";\n// import NewPage from \"./Newpage\";\n// import Sendpage from \"./Sendpage\";\n// import Tokencreate from \"./Tokencreate\";\n// import Printallimage from \"./Printallimage\";\n// import Approveaddresspage from \"./Approveaddresspage\";\n// import Salepage from \"./Salepage\";\n// import Saleimagepage from \"./Saleimagepage\";\n// import Test from \"./Testing\";\n// import Myitem from \"./Myitem\";\n// import Explore from \"./Explore\";\n//import Connectmetamask from \"./Connectmetamask\";\n\nimport web3 from './web3'; // import Newdeploy from \"./Newdeploy\";\n// import Mycontractdata from \"./Mycontractdata\";\n// import Salepagecopy from \"./Salepagecopy\";\n// import Printallimagecopy from \"./Printallimagecopy\";\n\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./logo.svg\"; // import Followingpage from \"./Followingpage\";\n// import Activitypage from './Activitypage';\n// import Howitworkpage from './Howitworkpage';\n// import Communitypage from './Communitypage';\n// import Createpage from './Createpage';\n// import Connectwalletpage from './Connectwalletpage'\n// import ReactPlayer from \"react-player\";\n// import { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n// import Allcontractpage from './Allcontractpage'\n// import Mypurchasepage from './Mypurchasepage'\n// import Receivedpage from './Receivedpage';\n//import SearchBar from './SearchBar';\n//import {abi} from data;\n// import Createandpurchasepage from './Createandpurchasepage';\n\nimport { Offline, Online } from \"react-detect-offline\";\nimport Popup from './Popup'; //import 'bootstrap/dist/css/bootstrap.min.css';\n//import {Modal} from 'react-bootstrap';\n//import {Button} from 'react-bootstrap'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {//setIsOpen(false);\n    //window.location.reload(false)\n  };\n\n  window.addEventListener('offline', function (e) {\n    setIsOpen(true); //alert('offline'); \n  });\n  window.addEventListener('online', function (e) {\n    setIsOpen(false); //alert('online');\n  }); //   const loader = document.querySelector('.loader');\n  // // if you want to show the loader when React loads data again\n  // const showLoader = () => loader.classList.remove('loader--hide');\n  // const hideLoader = () => loader.classList.add('loader--hide');\n  //const spinner = document.getElementById('spinner');\n  // if (spinner && !spinner.hasAttribute('hidden')) {\n  //   spinner.setAttribute('hidden', 'false');\n  // }\n\n  const [myOptions, setMyOptions] = useState([]);\n  const isBackgroundRed = true;\n  var accounts;\n  let btn;\n  const [isLoading, setLoading] = useState(false); // const fetchdata =() =>{\n  //   setLoading(true);\n  //   setTimeout(()=>{\n  //     setLoading(false);\n  //   },3500)\n  // }\n\n  const connectmm = async () => {\n    //hideLoader={hideLoader}\n    //showLoader={showLoader} \n    //var getaddress=localStorage.getItem('myaddress')\n    //if(getaddress !== \"\"){\n    //var btn = document.getElementById(\"bu\");\n    //btn.value = accounts[0]; // will just add a hidden value\n    //btn.innerHTML = accounts[0];\n    //btn.innerHTML = \"CONNECTED\"\n    //}\n    //else{\n    //window.alert(\"Do you want to connect with metamask\");\n    //event.preventDefault();\n    //bring in user's metamask account address\n    //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\n    //alert(\"acc\"+accounts[0])\n    accounts = await web3.eth.getAccounts(); //.send({from:accounts[0]})\n\n    if (accounts[0] !== \"\") {\n      //accounts[0\n      //document.getElementById(\"bu\").\n      //document.getElementById(\"bu\").append(\"CONNECTED\")\n      btn = document.getElementById(\"bu\"); //btn.value = accounts[0]; // will just add a hidden value\n      //btn.innerHTML = accounts[0];\n\n      btn.innerHTML = \"CONNECTED\";\n      localStorage.setItem('myaddress', accounts[0]);\n    } else {\n      //document.getElementById(\"bu\").remove(\"\");\n      //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\n      var btns = document.getElementById(\"bu\"); //btns.value = accounts[0]; // will just add a hidden value\n\n      btns.innerHTML = \"NOT CONNECTED\";\n      localStorage.setItem('myaddress', \"\");\n    }\n  };\n\n  useEffect(() => {\n    connectmm();\n  }, []);\n\n  const getDataFromAPI = () => {//setMyOptions(myOptions)\n    //})\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container h-100 d-flex justify-content-center\",\n    className: isBackgroundRed ? 'background-red' : 'background-blue',\n    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          outline: 'none'\n        },\n        class: \"btn btn-info btn-block\",\n        type: \"button\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 1\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/explore\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          outline: 'none'\n        },\n        class: \"btn btn-info btn-block\",\n        type: \"button\",\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/salepagecopy\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\" // onClick={() => {\n        //   history.push(\"/Salepagecopy\");\n        // }}\n        ,\n        children: \"Myitem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/followingpage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\" // onClick={() => {\n        //   history.push(\"/Followingpage\");\n        // }}\n        ,\n        children: \"Following\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/activitypage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\" // onClick={() => {\n        //   history.push(\"/Activitypage\");\n        // }}\n        ,\n        children: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/howitworkpage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\",\n        children: \"How it works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/communitypage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\",\n        children: \"Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/nft\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-info btn-block\",\n        type: \"button\" // onClick={() => {\n        //   history.push(\"/Nft\");\n        // }}\n        ,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"bu\",\n      class: \"btn btn-info btn-block\",\n      type: \"button\",\n      onClick: connectmm,\n      children: \"Connect wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your token prize has been updated successfully......\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: togglePopup,\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true) //handleClose={togglePopup}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Online, {\n          children: \"Only shown when you're online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Offline, {\n          children: \"Only shown offline (surprise!)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FV8MG9EUjKU9EuI46U1am6Guuj0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/App.js"],"names":["React","useState","useEffect","Router","Route","Switch","Link","web3","Offline","Online","Popup","App","isOpen","setIsOpen","togglePopup","window","addEventListener","e","myOptions","setMyOptions","isBackgroundRed","accounts","btn","isLoading","setLoading","connectmm","eth","getAccounts","document","getElementById","innerHTML","localStorage","setItem","btns","getDataFromAPI","outline"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Autocomplete from '@material-ui/lab/Autocomplete';\r\n//import React from \"react\";\r\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\r\n// import history from \"./utils/history\";\r\n\r\n// import Nf from \"./Nft\";\r\n// import NewPage from \"./Newpage\";\r\n// import Sendpage from \"./Sendpage\";\r\n// import Tokencreate from \"./Tokencreate\";\r\n// import Printallimage from \"./Printallimage\";\r\n// import Approveaddresspage from \"./Approveaddresspage\";\r\n// import Salepage from \"./Salepage\";\r\n// import Saleimagepage from \"./Saleimagepage\";\r\n// import Test from \"./Testing\";\r\n// import Myitem from \"./Myitem\";\r\n// import Explore from \"./Explore\";\r\n//import Connectmetamask from \"./Connectmetamask\";\r\nimport web3 from './web3';\r\n// import Newdeploy from \"./Newdeploy\";\r\n// import Mycontractdata from \"./Mycontractdata\";\r\n// import Salepagecopy from \"./Salepagecopy\";\r\n// import Printallimagecopy from \"./Printallimagecopy\";\r\n\r\nimport { ReactComponent as Logo } from './logo.svg';\r\n\r\n// import Followingpage from \"./Followingpage\";\r\n// import Activitypage from './Activitypage';\r\n// import Howitworkpage from './Howitworkpage';\r\n// import Communitypage from './Communitypage';\r\n// import Createpage from './Createpage';\r\n// import Connectwalletpage from './Connectwalletpage'\r\n// import ReactPlayer from \"react-player\";\r\n// import { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\n// import Allcontractpage from './Allcontractpage'\r\n// import Mypurchasepage from './Mypurchasepage'\r\n// import Receivedpage from './Receivedpage';\r\n//import SearchBar from './SearchBar';\r\n\r\n//import {abi} from data;\r\n\r\n\r\n// import Createandpurchasepage from './Createandpurchasepage';\r\n\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from './Popup';\r\n\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//import {Modal} from 'react-bootstrap';\r\n//import {Button} from 'react-bootstrap'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n \r\n  const togglePopup = () => {\r\n    //setIsOpen(false);\r\n\r\n    //window.location.reload(false)\r\n    \r\n  }\r\n\r\n\r\n\r\n  window.addEventListener('offline', function(e) {\r\n\r\n    setIsOpen(true)\r\n\r\n    //alert('offline'); \r\n\r\n  });\r\n    \r\n  window.addEventListener('online', function(e) {\r\n\r\n    setIsOpen(false)\r\n       \r\n      //alert('online');\r\n\r\n    });\r\n\r\n\r\n  \r\n//   const loader = document.querySelector('.loader');\r\n\r\n// // if you want to show the loader when React loads data again\r\n// const showLoader = () => loader.classList.remove('loader--hide');\r\n\r\n// const hideLoader = () => loader.classList.add('loader--hide');\r\n\r\n  //const spinner = document.getElementById('spinner');\r\n\r\n\r\n  // if (spinner && !spinner.hasAttribute('hidden')) {\r\n  //   spinner.setAttribute('hidden', 'false');\r\n  // }\r\n\r\n  const [myOptions, setMyOptions] = useState([])\r\n\r\n  const isBackgroundRed = true;\r\n\r\n  var accounts;\r\n\r\n  let btn ;\r\n\r\n\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  \r\n  // const fetchdata =() =>{\r\n\r\n  //   setLoading(true);\r\n  //   setTimeout(()=>{\r\n  //     setLoading(false);\r\n  //   },3500)\r\n  // }\r\n  \r\n  \r\n  \r\n  const connectmm = async () => {\r\n\r\n    \r\n\r\n     \r\n\r\n\r\n      //hideLoader={hideLoader}\r\n      //showLoader={showLoader} \r\n\r\n\r\n    //var getaddress=localStorage.getItem('myaddress')\r\n\r\n    //if(getaddress !== \"\"){\r\n\r\n\r\n      //var btn = document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        //btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n\r\n    //}\r\n    //else{\r\n\r\n\r\n      //window.alert(\"Do you want to connect with metamask\");\r\n\r\n\r\n      //event.preventDefault();\r\n     //bring in user's metamask account address\r\n\r\n     \r\n\r\n     //const demo=await getaaa.methods.setTokenPrice([isd],price).send({from:accounts[0]})\r\n\r\n      \r\n      //alert(\"acc\"+accounts[0])\r\n\r\n      accounts = await web3.eth.getAccounts();//.send({from:accounts[0]})\r\n\r\n      if(accounts[0] !== \"\"){\r\n\r\n      \r\n\r\n        //accounts[0\r\n        //document.getElementById(\"bu\").\r\n        //document.getElementById(\"bu\").append(\"CONNECTED\")\r\n\r\n        btn= document.getElementById(\"bu\");\r\n        //btn.value = accounts[0]; // will just add a hidden value\r\n        //btn.innerHTML = accounts[0];\r\n        btn.innerHTML = \"CONNECTED\"\r\n\r\n\r\n        localStorage.setItem('myaddress', accounts[0]);\r\n      \r\n      }\r\n      else{\r\n        //document.getElementById(\"bu\").remove(\"\");\r\n        //document.getElementById(\"bu\").replaceWith(\"NOT CONNECTED\")\r\n        var btns = document.getElementById(\"bu\");\r\n        //btns.value = accounts[0]; // will just add a hidden value\r\n        btns.innerHTML = \"NOT CONNECTED\";\r\n        localStorage.setItem('myaddress', \"\");\r\n      }\r\n\r\n    \r\n  };    \r\n  useEffect(()=>{connectmm()},[])\r\n\r\n\r\n  const getDataFromAPI = () => {\r\n\r\n      //setMyOptions(myOptions)\r\n    //})\r\n  }\r\n\r\n\r\n\r\n        \r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div class=\"container h-100 d-flex justify-content-center\" className={isBackgroundRed ? 'background-red' : 'background-blue'}>\r\n      {/* <div class=\"jumbotron my-auto\"> */}\r\n      \r\n\r\n      \r\n\r\n      \r\n      \r\n        {/* <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <div class=\"display-4 mb-1\"></div>\r\n\r\n              \r\n              \r\n              <Logo  height=\"55\" width=\"55\" />\r\n              {\" \"} */}\r\n\r\n\r\n\r\n              {/* <Autocomplete\r\n        style={{ width: 300,height:5 }}\r\n        freeSolo\r\n        autoComplete\r\n        autoHighlight\r\n        options={myOptions}\r\n        renderInput={(params) => (\r\n          <TextField {...params}\r\n            onChange={getDataFromAPI}\r\n            variant=\"outlined\"\r\n            label=\"Search Box\"\r\n          />\r\n        )}\r\n      /> */}\r\n\r\n      \r\n      {\" \"}\r\n\r\n      {/* <br></br>\r\n      <br></br>\r\n      <br></br> */}\r\n\r\n\r\n              {/* <input type=\"text\" placeholder=\"Search here ?\"></input>\r\n              {\" \"}\r\n              <button type=\"submit\">Search</button> */}\r\n\r\n\r\n\r\n<Link\r\n              to=\"/\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Home\r\n              </button>\r\n</Link>\r\n\r\n              {\" \"}\r\n\r\n\r\n            <Link\r\n              to=\"/explore\">\r\n\r\n              \r\n              <button\r\n              \r\n              style={{outline: 'none'}}\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n                Explore\r\n              </button>\r\n\r\n\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/salepagecopy\">\r\n\r\n              \r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Salepagecopy\");\r\n                // }}\r\n              >\r\n                Myitem     \r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/followingpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Followingpage\");\r\n                // }}\r\n              >\r\n               Following\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/activitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Activitypage\");\r\n                // }}\r\n              >\r\n               Activity\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              <Link\r\n              to=\"/howitworkpage\">\r\n\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               How it works\r\n              </button>\r\n\r\n</Link>\r\n              {\" \"}\r\n              <Link\r\n              to=\"/communitypage\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                \r\n              >\r\n               Community\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n              <Link\r\n              to=\"/nft\">\r\n              <button\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                // onClick={() => {\r\n                //   history.push(\"/Nft\");\r\n                // }}\r\n              >\r\n               Create\r\n              </button>\r\n              </Link>\r\n\r\n              {\" \"}\r\n\r\n              \r\n\r\n              {/* <button\r\n              \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Mypurchasepage\");\r\n                }}>\r\n               Mypurchase\r\n              </button>\r\n              {\" \"} */}\r\n\r\n              {/* <button\r\n            \r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  history.push(\"/Createandpurchasepage\");\r\n                }}\r\n                \r\n                >\r\n               Create and Purchase\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n              <button\r\n              \r\n              class=\"btn btn-info btn-block\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/Receivedpage\");\r\n              }}>\r\n             Received_Token\r\n            </button>\r\n            {\" \"} */}\r\n\r\n\r\n              <button\r\n              id=\"bu\"\r\n                class=\"btn btn-info btn-block\"\r\n                type=\"button\"\r\n                onClick= {connectmm}>\r\n               Connect wallet\r\n              </button>\r\n\r\n              {\" \"}\r\n\r\n\r\n\r\n\r\n\r\n              <br></br>\r\n              <hr></hr>\r\n\r\n              <div>\r\n\r\n\r\n              {isOpen && <Popup content={<>\r\n        <b>Notification</b>\r\n        <p>Your token prize has been updated successfully......</p>\r\n        <center>\r\n        <button type=\"button\" onClick={togglePopup}>close</button>\r\n        </center>\r\n      </>}\r\n     //handleClose={togglePopup}\r\n    />}\r\n\r\n<div>\r\n    <Online>Only shown when you're online</Online>\r\n    </div>\r\n\r\n    <div>\r\n\r\n    <Offline>Only shown offline (surprise!)</Offline>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n{/* <header className=\"APP-header\">\r\n  <br/>\r\n\r\n{isLoading ? \"\":\r\n              (<button\r\n\r\n                className=\"button\"\r\n                \r\n                onClick= {fetchdata}>\r\nDemo\r\n              </button>)}\r\n              {isLoading ? <div><h4>Fetching........</h4>}\r\n              <img style={{width:\"200px\",height:\"200px\"}} src=\"\" alt=\"\"/></div>:' '}\r\n\r\n              </header> */}\r\n              \r\n   \r\n    \r\n    \r\n   \r\n        \r\n\r\n\r\n              \r\n\r\n              \r\n              \r\n\r\n              \r\n            {/* </Route>\r\n            <Route path=\"/Myitem\">\r\n              <Myitem />\r\n            </Route>\r\n            <Route path=\"/Nft\">\r\n              <Nf />\r\n            </Route>\r\n            <Route path=\"/Newpage\">\r\n              <NewPage />\r\n            </Route>\r\n            <Route path=\"/Sendpage\">\r\n              <Sendpage />\r\n            </Route>\r\n            <Route path=\"/Tokencreate\">\r\n              <Tokencreate />\r\n            </Route>\r\n            <Route path=\"/Printallimage\">\r\n              <Printallimage />\r\n            </Route>\r\n            <Route path=\"/Approveaddresspage\">\r\n              <Approveaddresspage />\r\n            </Route>\r\n            <Route path=\"/Salepage\">\r\n              <Salepage />\r\n            </Route>\r\n            <Route path=\"/Saleimagepage\">\r\n              <Saleimagepage />\r\n            </Route>\r\n            <Route path=\"/Testing\">\r\n              <Test />\r\n            </Route>\r\n\r\n            <Route path=\"/Newdeploy\">\r\n              <Newdeploy />\r\n            </Route>\r\n\r\n            <Route path=\"/Mycontractdata\">\r\n              <Mycontractdata />\r\n            </Route>\r\n\r\n            <Route path=\"/Salepagecopy\">\r\n              <Salepagecopy />\r\n            </Route>\r\n\r\n            <Route path=\"/Printallimagecopy\">\r\n              <Printallimagecopy />\r\n            </Route>\r\n\r\n            <Route path=\"/Followingpage\">\r\n              <Followingpage />\r\n            </Route>\r\n\r\n            <Route path=\"/Activitypage\">\r\n              <Activitypage />\r\n            </Route>\r\n\r\n            <Route path=\"/Howitworkpage\">\r\n              <Howitworkpage />\r\n            </Route>\r\n\r\n            <Route path=\"/Communitypage\">\r\n              <Communitypage />\r\n            </Route>\r\n\r\n\r\n            <Route path=\"/Createpage\">\r\n              <Createpage />\r\n            </Route>\r\n            \r\n            <Route path=\"/Connectwalletpage\">\r\n              <Connectwalletpage />\r\n            </Route>\r\n\r\n            <Route path=\"/Explore\">\r\n              <Explore />\r\n            </Route>\r\n\r\n            <Route path=\"/Mypurchasepage\">\r\n              <Mypurchasepage />\r\n            </Route>\r\n\r\n            <Route path=\"/Createandpurchasepage\">\r\n              <Createandpurchasepage />\r\n            </Route>\r\n            \r\n            <Route path=\"/Receivedpage\">\r\n              <Receivedpage />\r\n            </Route>\r\n\r\n            \r\n          </Switch>\r\n        </Router>\r\n        \r\n      </div> */}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}