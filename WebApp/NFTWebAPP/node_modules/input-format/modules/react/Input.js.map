{"version":3,"sources":["../../source/react/Input.js"],"names":["React","useCallback","useRef","PropTypes","onChange","onInputChange","onKeyDown","onInputKeyDown","Input","ref","value","parse","format","InputComponent","inputComponent","rest","internalRef","setRef","instance","current","_onChange","event","_onKeyDown","isEmptyValue","text","forwardRef","propTypes","func","isRequired","elementType","type","string","onCut","onPaste","defaultProps","undefined"],"mappings":"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","sourcesContent":["// This is just `./ReactInput.js` rewritten in Hooks.\r\n\r\nimport React, { useCallback, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n\tonChange as onInputChange,\r\n\tonKeyDown as onInputKeyDown\r\n} from '../inputControl'\r\n\r\n// Usage:\r\n//\r\n// <ReactInput\r\n// \tvalue={this.state.phone}\r\n// \tonChange={phone => this.setState({ phone })}\r\n// \tparse={character => character}\r\n// \tformat={value => ({ text: value, template: 'xxxxxxxx' })}/>\r\n//\r\nfunction Input({\r\n\tvalue,\r\n\tparse,\r\n\tformat,\r\n\tinputComponent: InputComponent,\r\n\tonChange,\r\n\tonKeyDown,\r\n\t...rest\r\n}, ref) {\r\n\tconst internalRef = useRef();\r\n\tconst setRef = useCallback((instance) => {\r\n\t\tinternalRef.current = instance;\r\n\t\tif (ref) {\r\n\t\t\tif (typeof ref === 'function') {\r\n\t\t\t\tref(instance)\r\n\t\t\t} else {\r\n\t\t\t\tref.current = instance\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ref]);\r\n\tconst _onChange = useCallback((event) => {\r\n\t\treturn onInputChange(\r\n\t\t\tevent,\r\n\t\t\tinternalRef.current,\r\n\t\t\tparse,\r\n\t\t\tformat,\r\n\t\t\tonChange\r\n\t\t)\r\n\t}, [internalRef, parse, format, onChange])\r\n\r\n\tconst _onKeyDown = useCallback((event) => {\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\t\treturn onInputKeyDown(\r\n\t\t\tevent,\r\n\t\t\tinternalRef.current,\r\n\t\t\tparse,\r\n\t\t\tformat,\r\n\t\t\tonChange\r\n\t\t)\r\n\t}, [internalRef, parse, format, onChange, onKeyDown])\r\n\r\n\treturn (\r\n\t\t<InputComponent\r\n\t\t\t{...rest}\r\n\t\t\tref={setRef}\r\n\t\t\tvalue={format(isEmptyValue(value) ? '' : value).text}\r\n\t\t\tonKeyDown={_onKeyDown}\r\n\t\t\tonChange={_onChange}/>\r\n\t)\r\n}\r\n\r\nInput = React.forwardRef(Input)\r\n\r\nInput.propTypes = {\r\n\t// Parses a single characher of `<input/>` text.\r\n\tparse: PropTypes.func.isRequired,\r\n\r\n\t// Formats `value` into `<input/>` text.\r\n\tformat: PropTypes.func.isRequired,\r\n\r\n\t// Renders `<input/>` by default.\r\n\tinputComponent: PropTypes.elementType.isRequired,\r\n\r\n\t// `<input/>` `type` attribute.\r\n\ttype: PropTypes.string.isRequired,\r\n\r\n\t// Is parsed from <input/> text.\r\n\tvalue: PropTypes.string,\r\n\r\n\t// This handler is called each time `<input/>` text is changed.\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t// Passthrough\r\n\tonKeyDown: PropTypes.func,\r\n\tonCut: PropTypes.func,\r\n\tonPaste: PropTypes.func\r\n}\r\n\r\nInput.defaultProps = {\r\n\t// Renders `<input/>` by default.\r\n\tinputComponent: 'input',\r\n\r\n\t// `<input/>` `type` attribute.\r\n\ttype: 'text'\r\n}\r\n\r\nexport default Input\r\n\r\nfunction isEmptyValue(value) {\r\n\treturn value === undefined || value === null\r\n}"],"file":"Input.js"}