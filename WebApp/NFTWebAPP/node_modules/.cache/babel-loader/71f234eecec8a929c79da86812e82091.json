{"ast":null,"code":"var _jsxFileName = \"D:\\\\BosonLabsNFTPROJECT\\\\nftsecondprabha\\\\CIFI\\\\WebApp\\\\NFTWebAPP\\\\src\\\\Login\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"; //import web3 from './web3';\n\nimport { Offline, Online } from \"react-detect-offline\";\nimport Popup from '../Popup';\nimport { Redirect } from \"react-router-dom\"; //import firebaseConfig from \"../config\";\n//import firebase from \"./firebase\";\n\nimport firebaseConfig from '../firebase'; //import { getAuth } from \"firebase/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  var defaultAuth = firebase.auth(); // let actionCodeSettings = {\n  //   // URL you want to redirect back to. The domain (www.example.com) for this\n  //   // URL must be in the authorized domains list in the Firebase Console.\n  //   url: 'https://www.example.com/finishSignUp?cartId=1234',\n  //   // This must be true.\n  //   handleCodeInApp: true,\n  //   iOS: {\n  //     bundleId: 'com.example.ios'\n  //   },\n  //   android: {\n  //     packageName: 'com.example.android',\n  //     installApp: true,\n  //     minimumVersion: '12'\n  //   },\n  //   dynamicLinkDomain: 'example.page.link'\n  // };\n  //firebase\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = e.target.elements;\n\n    try {\n      // //signInWithEmailLink(email.value,password.value);\n      // //createUserWithEmailAndPassword(, password.value);      )\n      // firebaseConfig.auth().isSignInWithEmailLink(email.value);\n      // setCurrentUser(true);\n      firebaseConfig.auth().createUserWithEmailAndPassword(email.value, password.value).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.error(err);\n      }); //     alert(email.value)\n      //     firebaseConfig.auth().sendSignInLinkToEmail(email.value, actionCodeSettings)\n      // .then(() => {\n      //   // The link was successfully sent. Inform the user.\n      //   // Save the email locally so you don't need to ask the user for it again\n      //   // if they open the link on the same device.\n      //   window.localStorage.setItem('emailForSignIn', email);\n      //   // ...\n      // })\n      // .catch((error) => {\n      //   let errorCode = error.code;\n      //   let errorMessage = error.message;\n      //   // ...\n      // });\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"Email                            :-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/BosonLabsNFTPROJECT/nftsecondprabha/CIFI/WebApp/NFTWebAPP/src/Login/Register.js"],"names":["React","useState","useEffect","Link","Offline","Online","Popup","Redirect","firebaseConfig","Register","currentUser","setCurrentUser","defaultAuth","firebase","auth","handleSubmit","e","preventDefault","email","password","target","elements","createUserWithEmailAndPassword","value","then","res","console","log","catch","err","error","alert","textAlign"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport {Link } from \"react-router-dom\";\r\n//import web3 from './web3';\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nimport Popup from '../Popup';\r\n\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n//import firebaseConfig from \"../config\";\r\n//import firebase from \"./firebase\";\r\nimport firebaseConfig from '../firebase';\r\n\r\n//import { getAuth } from \"firebase/\";\r\n\r\nconst Register = () => {\r\n  const [currentUser, setCurrentUser] = useState(null);    \r\n\r\n  var defaultAuth = firebase.auth();\r\n  \r\n\r\n\r\n  // let actionCodeSettings = {\r\n  //   // URL you want to redirect back to. The domain (www.example.com) for this\r\n  //   // URL must be in the authorized domains list in the Firebase Console.\r\n  //   url: 'https://www.example.com/finishSignUp?cartId=1234',\r\n  //   // This must be true.\r\n  //   handleCodeInApp: true,\r\n  //   iOS: {\r\n  //     bundleId: 'com.example.ios'\r\n  //   },\r\n  //   android: {\r\n  //     packageName: 'com.example.android',\r\n  //     installApp: true,\r\n  //     minimumVersion: '12'\r\n  //   },\r\n  //   dynamicLinkDomain: 'example.page.link'\r\n  // };\r\n\r\n\r\n  //firebase\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();    \r\n    const { email, password } = e.target.elements;\r\n    try {\r\n      // //signInWithEmailLink(email.value,password.value);\r\n      // //createUserWithEmailAndPassword(, password.value);      )\r\n      // firebaseConfig.auth().isSignInWithEmailLink(email.value);\r\n      // setCurrentUser(true);\r\n\r\n\r\n      firebaseConfig.auth().createUserWithEmailAndPassword(email.value,password.value) \r\n      .then(res => {\r\n        console.log(res)\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n\r\n\r\n  //     alert(email.value)\r\n  //     firebaseConfig.auth().sendSignInLinkToEmail(email.value, actionCodeSettings)\r\n  // .then(() => {\r\n  //   // The link was successfully sent. Inform the user.\r\n  //   // Save the email locally so you don't need to ask the user for it again\r\n  //   // if they open the link on the same device.\r\n  //   window.localStorage.setItem('emailForSignIn', email);\r\n  //   // ...\r\n  // })\r\n  // .catch((error) => {\r\n  //   let errorCode = error.code;\r\n  //   let errorMessage = error.message;\r\n  //   // ...\r\n  // });\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  if (currentUser) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Sign Up</h1>\r\n      <center>\r\n      <form onSubmit={handleSubmit}>\r\n      <br>\r\n        </br>\r\n        <label for=\"email\">Email                            :-</label>{' '}\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required/>\r\n        {/* <input type=\"number\" name=\"email\" placeholder=\"Number\" /> */}\r\n        <br></br>\r\n        <br></br>\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n        <br>\r\n        </br>\r\n        <br>\r\n        </br>\r\n        \r\n        <button type=\"submit\">Submit</button>\r\n        \r\n      </form>\r\n      </center>\r\n      </div>\r\n\r\n\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}