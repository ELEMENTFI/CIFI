{"version":3,"sources":["../../source/helpers/inputValuePrefix.js"],"names":["getInputValuePrefix","country","international","withCountryCallingCode","metadata","removeInputValuePrefix","value","prefix","slice","length"],"mappings":";;;;;;;;AAAA;;AAEO,SAASA,mBAAT,OAKJ;AAAA,MAJFC,OAIE,QAJFA,OAIE;AAAA,MAHFC,aAGE,QAHFA,aAGE;AAAA,MAFFC,sBAEE,QAFFA,sBAEE;AAAA,MADFC,QACE,QADFA,QACE;AACF,SAAOH,OAAO,IAAIC,aAAX,IAA4B,CAACC,sBAA7B,cACF,iCAAsBF,OAAtB,EAA+BG,QAA/B,CADE,IAEN,EAFD;AAGA;;AAEM,SAASC,sBAAT,CAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AACrD,MAAIA,MAAJ,EAAY;AACXD,IAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAYD,MAAM,CAACE,MAAnB,CAAR;;AACA,QAAIH,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AACrBA,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAR;AACA;AACD;;AACD,SAAOF,KAAP;AACA","sourcesContent":["import { getCountryCallingCode } from 'libphonenumber-js/core'\r\n\r\nexport function getInputValuePrefix({\r\n\tcountry,\r\n\tinternational,\r\n\twithCountryCallingCode,\r\n\tmetadata\r\n}) {\r\n\treturn country && international && !withCountryCallingCode ?\r\n\t\t`+${getCountryCallingCode(country, metadata)}` :\r\n\t\t''\r\n}\r\n\r\nexport function removeInputValuePrefix(value, prefix) {\r\n\tif (prefix) {\r\n\t\tvalue = value.slice(prefix.length)\r\n\t\tif (value[0] === ' ') {\r\n\t\t\tvalue = value.slice(1)\r\n\t\t}\r\n\t}\r\n\treturn value\r\n}"],"file":"inputValuePrefix.js"}