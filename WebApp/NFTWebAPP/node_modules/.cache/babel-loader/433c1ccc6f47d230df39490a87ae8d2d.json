{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport parsePhoneNumber from './parsePhoneNumber_';\nimport ParseError from './ParseError';\nimport { isSupportedCountry } from './metadata';\nexport default function parsePhoneNumberFromString(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread({}, options, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumber(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}","map":{"version":3,"sources":["../source/parsePhoneNumberFromString_.js"],"names":["options","isSupportedCountry","defaultCountry","undefined","parsePhoneNumber","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,gBAAA,MAAA,qBAAA;AACA,OAAA,UAAA,MAAA,cAAA;AACA,SAAA,kBAAA,QAAA,YAAA;AAEA,eAAe,SAAA,0BAAA,CAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAA6D;AAC3E;AACA,MAAIA,OAAO,IAAIA,OAAO,CAAlBA,cAAAA,IAAqC,CAACC,kBAAkB,CAACD,OAAO,CAAR,cAAA,EAA5D,QAA4D,CAA5D,EAAgG;AAC/FA,IAAAA,OAAO,GAAA,aAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AAENE,MAAAA,cAAc,EAAEC;AAFV,KAAA,CAAPH;AAH0E,GAAA,CAQ3E;;;AACA,MAAI;AACH,WAAOI,gBAAgB,CAAA,IAAA,EAAA,OAAA,EAAvB,QAAuB,CAAvB;AADD,GAAA,CAEE,OAAA,KAAA,EAAc;AACf;AACA,QAAIC,KAAK,YAAT,UAAA,EAAiC,CAChC;AADD,KAAA,MAEO;AACN,YAAA,KAAA;AACA;AACD;AACD","sourcesContent":["import parsePhoneNumber from './parsePhoneNumber_'\r\nimport ParseError from './ParseError'\r\nimport { isSupportedCountry } from './metadata'\r\n\r\nexport default function parsePhoneNumberFromString(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumber(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}